{
  "address": "0x559bee76ec549e70630e451d46cb442ef5c230fd",
  "has_source_code": false,
  "source_code": "基于反编译的代码分析，我将这个合约重构为一个清晰、专业的代币众筹/投资管理合约。以下是优化后的代码：\n\n```solidity\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title TokenVestingCrowdsale\n * @dev 代币众筹和投资管理合约\n * @notice 支持代币销售、节点管理、黑名单功能和收益分配\n * @custom:security-contact security@example.com\n */\ncontract TokenVestingCrowdsale is Initializable, OwnableUpgradeable {\n    \n    // ============ Constants ============\n    uint256 private constant DECIMAL_MULTIPLIER = 1e18;\n    uint256 private constant PHASE_DURATION = 300; // 5分钟 (300秒)\n    uint256 private constant EXTENDED_PHASE_DURATION = 900; // 15分钟 (900秒)\n    \n    // ============ State Variables ============\n    \n    // Token and pricing configuration\n    IERC20 public usdtToken;                    // USDT代币合约地址\n    uint256 public buyRate;                     // 购买汇率\n    uint256 public sellRate;                    // 出售汇率\n    uint256 public returnRate;                  // 回报率\n    uint256 public nodeRate;                    // 节点奖励率\n    \n    // Investment limits and timing\n    uint256 public minBNBAmount;                // 最小BNB投资金额\n    uint256 public maxBNBAmount;                // 最大BNB投资金额  \n    uint256 public startTime;                   // 众筹开始时间\n    uint256 public nodeAmount;                  // 节点总投资金额\n    \n    // Fee and reward configuration\n    uint256 public marketingFeeRate;            // 营销费率\n    uint256 public partnerFeeAmount;            // 合作伙伴费用金额\n    uint256 public nodeFeeAmount;               // 节点费用金额\n    uint256 public tokenMultiplier;             // 代币倍数\n    uint256 public stakingRewardRate;           // 质押奖励率\n    uint256 public platformFeeRate;             // 平台费率\n    uint256 public referralRewardRate;          // 推荐奖励率\n    uint256 public liquidityRate;               // 流动性率\n    \n    // Contract addresses for external interactions\n    address public marketingWallet;             // 营销钱包地址\n    address public defaultReferrer;             // 默认推荐人地址\n    address public blacklistManager;            // 黑名单管理员\n    address public partnerContract;             // 合作伙伴合约\n    address public nodeContract;                // 节点合约\n    address public feeCollector;                // 费用收集者\n    address public stakingContract;             // 质押合约\n    address public emergencyManager;            // 紧急管理员\n    address public superAdmin;                  // 超级管理员\n    address public buybackManager;              // 回购管理员\n    address public liquidityManager;            // 流动性管理员\n    \n    // Investment tracking\n    uint256 public totalInvestmentPool;         // 总投资池\n    uint256 public currentRewardMultiplier;     // 当前奖励倍数\n    uint256 public totalUserCount;              // 总用户数\n    \n    // User data structures\n    struct UserInfo {\n        uint256 investmentAmount;               // 投资金额\n        uint256 lastClaimTime;                  // 上次领取时间\n        uint256 totalEarned;                    // 总收益\n        bool isActive;                          // 是否激活\n        bool isBlacklisted;                     // 是否被加入黑名单\n        address referrer;                       // 推荐人\n    }\n    \n    struct NodeInfo {\n        uint256 nodeInvestment;                 // 节点投资\n        uint256 lastUpdateTime;                 // 上次更新时间\n        bool isNode;                            // 是否为节点\n    }\n    \n    // Mappings for user data\n    mapping(address => UserInfo) public userInvestments;\n    mapping(address => NodeInfo) public nodeInvestments;\n    mapping(address => bool) public hasPurchased;\n    mapping(address => bool) public isBlacklisted;\n    mapping(address => bool) public isWhitelisted;\n    mapping(uint256 => address) public userByIndex;\n    \n    // ============ Events ============\n    event InvestmentMade(address indexed user, uint256 amount, address indexed referrer);\n    event RewardsClaimed(address indexed user, uint256 amount);\n    event NodeCreated(address indexed user, uint256 amount);\n    event BlacklistUpdated(address indexed user, bool isBlacklisted);\n    event ConfigurationUpdated(string parameter, uint256 newValue);\n    event EmergencyWithdraw(address indexed token, uint256 amount);\n    event ReferralRewardPaid(address indexed referrer, address indexed referee, uint256 amount);\n    \n    // ============ Errors ============\n    error InvestmentTooSmall(uint256 provided, uint256 minimum);\n    error InvestmentTooLarge(uint256 provided, uint256 maximum);\n    error SaleNotStarted(uint256 currentTime, uint256 startTime);\n    error UserBlacklisted(address user);\n    error AlreadyPurchased(address user);\n    error InvalidPhase(uint256 currentTime, uint256 startTime);\n    error InsufficientContractBalance(uint256 requested, uint256 available);\n    error InvalidAddress(address provided);\n    error UnauthorizedAccess(address caller, address required);\n    \n    // ============ Modifiers ============\n    modifier onlyActiveUser(address user) {\n        require(userInvestments[user].isActive, \"User not active\");\n        _;\n    }\n    \n    modifier notBlacklisted(address user) {\n        if (isBlacklisted[user]) revert UserBlacklisted(user);\n        _;\n    }\n    \n    modifier onlyAuthorized() {\n        require(\n            msg.sender == owner() || \n            msg.sender == blacklistManager || \n            msg.sender == superAdmin,\n            \"Not authorized\"\n        );\n        _;\n    }\n    \n    modifier validAddress(address addr) {\n        if (addr == address(0)) revert InvalidAddress(addr);\n        _;\n    }\n    \n    // ============ Initialization ============\n    \n    /**\n     * @dev 初始化合约\n     * @notice 只能调用一次，设置基本参数\n     */\n    function initialize() external initializer {\n        __Ownable_init();\n        \n        // 设置默认参数\n        buyRate = 1000;                     // 默认购买率\n        sellRate = 900;                     // 默认出售率  \n        returnRate = 120;                   // 默认回报率 120%\n        nodeRate = 150;                     // 默认节点率 150%\n        minBNBAmount = 0.01 ether;          // 最小投资 0.01 BNB\n        maxBNBAmount = 10 ether;            // 最大投资 10 BNB\n        currentRewardMultiplier = DECIMAL_MULTIPLIER;\n    }\n    \n    // ============ Investment Functions ============\n    \n    /**\n     * @dev 用户投资函数\n     * @param referrer 推荐人地址\n     * @notice 用户可以通过发送BNB进行投资\n     */\n    function invest(address referrer) external payable notBlacklisted(msg.sender) {\n        uint256 investmentAmount = msg.value;\n        \n        // 验证投资金额\n        if (investmentAmount < minBNBAmount) {\n            revert InvestmentTooSmall(investmentAmount, minBNBAmount);\n        }\n        if (investmentAmount > maxBNBAmount) {\n            revert InvestmentTooLarge(investmentAmount, maxBNBAmount);\n        }\n        \n        // 验证销售时间和阶段\n        _validateSalePhase();\n        \n        // 验证用户状态\n        require(!hasPurchased[msg.sender], \"Already purchased\");\n        require(msg.sender == tx.origin, \"Must be EOA\");\n        \n        // 验证推荐人\n        if (referrer == address(0)) {\n            referrer = defaultReferrer;\n        }\n        \n        // 记录用户投资\n        UserInfo storage user = userInvestments[msg.sender];\n        user.investmentAmount = investmentAmount;\n        user.lastClaimTime = block.timestamp;\n        user.isActive = true;\n        user.referrer = referrer;\n        \n        hasPurchased[msg.sender] = true;\n        userByIndex[totalUserCount] = msg.sender;\n        totalUserCount++;\n        \n        // 更新总投资池\n        totalInvestmentPool += investmentAmount;\n        \n        // 分发推荐奖励\n        _processReferralReward(referrer, investmentAmount);\n        \n        emit InvestmentMade(msg.sender, investmentAmount, referrer);\n    }\n    \n    /**\n     * @dev 验证销售阶段\n     * @notice 检查当前时间是否在有效的销售阶段内\n     */\n    function _validateSalePhase() internal view {\n        if (block.timestamp < startTime) {\n            revert SaleNotStarted(block.timestamp, startTime);\n        }\n        \n        uint256 phaseEndTime = startTime + PHASE_DURATION;\n        uint256 extendedEndTime = startTime + EXTENDED_PHASE_DURATION;\n        \n        // 检查是否在有效阶段内\n        require(\n            block.timestamp <= extendedEndTime,\n            \"Sale phase ended\"\n        );\n        \n        // 特殊阶段验证逻辑\n        if (block.timestamp > phaseEndTime && block.timestamp <= extendedEndTime) {\n            // 扩展阶段的特殊验证\n            _validateExtendedPhase();\n        }\n    }\n    \n    /**\n     * @dev 验证扩展阶段\n     * @notice 在扩展销售阶段进行额外验证\n     */\n    function _validateExtendedPhase() internal view {\n        // 扩展阶段可能需要特殊的验证逻辑\n        // 例如：检查特定条件、限制投资金额等\n        require(totalInvestmentPool > 0, \"No investments in extended phase\");\n    }\n    \n    /**\n     * @dev 处理推荐奖励\n     * @param referrer 推荐人地址\n     * @param investmentAmount 投资金额\n     */\n    function _processReferralReward(address referrer, uint256 investmentAmount) internal {\n        if (referrer != address(0) && referrer != msg.sender) {\n            uint256 referralReward = (investmentAmount * referralRewardRate) / 10000;\n            \n            // 发送推荐奖励\n            if (address(this).balance >= referralReward) {\n                payable(referrer).transfer(referralReward);\n                emit ReferralRewardPaid(referrer, msg.sender, referralReward);\n            }\n        }\n    }\n    \n    // ============ Reward and Claiming Functions ============\n    \n    /**\n     * @dev 计算用户可领取的收益\n     * @param user 用户地址\n     * @return 可领取的收益金额\n     */\n    function calculateEarnings(address user) external view returns (uint256) {\n        UserInfo memory userInfo = userInvestments[user];\n        \n        if (!userInfo.isActive || userInfo.investmentAmount == 0) {\n            return 0;\n        }\n        \n        uint256 timePassed = block.timestamp - userInfo.lastClaimTime;\n        uint256 baseReward = (userInfo.investmentAmount * timePassed * currentRewardMultiplier) / DECIMAL_MULTIPLIER;\n        \n        return baseReward;\n    }\n    \n    /**\n     * @dev 用户领取收益\n     * @notice 用户可以领取基于时间的收益\n     */\n    function claimRewards() external onlyActiveUser(msg.sender) notBlacklisted(msg.sender) {\n        uint256 earnings = this.calculateEarnings(msg.sender);\n        require(earnings > 0, \"No earnings to claim\");\n        \n        UserInfo storage user = userInvestments[msg.sender];\n        user.lastClaimTime = block.timestamp;\n        user.totalEarned += earnings;\n        \n        // 发送收益\n        require(address(this).balance >= earnings, \"Insufficient contract balance\");\n        payable(msg.sender).transfer(earnings);\n        \n        emit RewardsClaimed(msg.sender, earnings);\n    }\n    \n    // ============ Node Management Functions ============\n    \n    /**\n     * @dev 创建节点投资\n     * @param user 节点用户地址\n     * @notice 只有授权用户可以创建节点\n     */\n    function createNode(address user) external onlyAuthorized validAddress(user) {\n        NodeInfo storage nodeInfo = nodeInvestments[user];\n        UserInfo storage userInfo = userInvestments[user];\n        \n        require(userInfo.isActive, \"User must be active investor\");\n        require(!nodeInfo.isNode, \"Already a node\");\n        \n        nodeInfo.isNode = true;\n        nodeInfo.nodeInvestment = userInfo.investmentAmount;\n        nodeInfo.lastUpdateTime = block.timestamp;\n        \n        nodeAmount += userInfo.investmentAmount;\n        \n        emit NodeCreated(user, userInfo.investmentAmount);\n    }\n    \n    /**\n     * @dev 移除节点\n     * @param user 节点用户地址\n     */\n    function removeNode(address user) external onlyAuthorized {\n        NodeInfo storage nodeInfo = nodeInvestments[user];\n        require(nodeInfo.isNode, \"Not a node\");\n        \n        nodeAmount -= nodeInfo.nodeInvestment;\n        \n        nodeInfo.isNode = false;\n        nodeInfo.nodeInvestment = 0;\n        nodeInfo.lastUpdateTime = block.timestamp;\n    }\n    \n    // ============ Blacklist Management ============\n    \n    /**\n     * @dev 添加用户到黑名单\n     * @param user 用户地址\n     */\n    function addToBlacklist(address user) external onlyAuthorized validAddress(user) {\n        isBlacklisted[user] = true;\n        userInvestments[user].isBlacklisted = true;\n        \n        emit BlacklistUpdated(user, true);\n    }\n    \n    /**\n     * @dev 从黑名单移除用户\n     * @param user 用户地址\n     */\n    function removeFromBlacklist(address user) external onlyAuthorized validAddress(user) {\n        isBlacklisted[user] = false;\n        userInvestments[user].isBlacklisted = false;\n        \n        emit BlacklistUpdated(user, false);\n    }\n    \n    // ============ Admin Configuration Functions ============\n    \n    /**\n     * @dev 设置USDT代币地",
  "abi": "Contract source code not verified",
  "contract_name": "Unknown",
  "compiler_version": null,
  "optimization_used": null,
  "runs": null,
  "constructor_arguments": null,
  "evm_version": null,
  "library": null,
  "license_type": null,
  "proxy": "0",
  "implementation": "",
  "bytecode": "0x6080604081815260049182361015610022575b505050361561002057600080fd5b005b600092833560e01c9182628a14fc1461245357508162c1e46a146124345781630ecb93c0146123ad57816313caa51e1461238e5781631454aef1146123685781631904d1641461232a578163191437a1146120035781631cbe0fe2146123015781631d1d630c146122e05781632578e361146122b75781632a55feec1461227a5781632c97e90c1461225b5781632d43cc3d1461223c578163306c1f0c146121a757816330993b2d1461217e578163357f1a7e1461215f57816335b03203146121245781634184b3e0146118da57816346de5f8414612103578163489082df14612036578163496b370e146120035781634a42514814611fe15781634b8cee6514611fc257816352d766be14611f8857816352f462901461175357816359e2a23a14611f5f5781635c10169314611f365781636217229b14611f175781636be3208614611ed75781636dfd480b14611e49578163715018a614611dec57816372cd9cd714611dca57816378e9792514611dab5781637c2ffbb314611d8c5781638129fc1c14611af957816387ceff0914611ade57816387e7e7a414611a9e5781638881e44314611a7c5781638aa5b2c314611a5a5781638da5cb5b14611a315781638e047f0f146119b557816390171e591461195d57816390c6bd111461191d578163931d93fc146118da578163971cca57146118bb5781639ab4a445146118925781639c1e8f4b146118525781639c4380e7146117b25781639cc6cf42146117915781639f5c18c414611753578163a224fc4f146116eb578163a654ac9e146116cc578163b5305bdc146116ad578163babb603b14610ea5578163be3c515214610e7c578163c09d1e5814610e5d578163ca8b444e14610d1b578163cbf6d90214610cdb578163cc6ddc9a14610c9b578163db66170a14610c5b578163dcb4947914610c1b578163de41768c14610bdb578163e17b2e2914610b8d578163e4997dc514610b04578163e6363cb114610aa0578163f006ead614610a77578163f0b20ffe14610a37578163f127864c14610a0e578163f2fde38b14610978578163f694fc1e146104b7578163f6afce5f14610498578163f83212af1461046a57508063f8560a281461044c578063fb9e5eca14610424578063fc37987b14610406578063fcfad9ce146103a05763fd3806211461037f5780610012565b3461039c578160031936011261039c5760209060a3549051908152f35b5080fd5b503461039c57602036600319011261039c57610400906103be61246f565b6103c66124ee565b6001600160a01b0316835260b56020908152818420805460ff1916905560975460b782528285206001015560b9905282205460985461262d565b60985580f35b503461039c578160031936011261039c57602090609f549051908152f35b503461039c578160031936011261039c5760ae5490516001600160a01b039091168152602090f35b503461039c578160031936011261039c5760209060a6549051908152f35b905082346104955760203660031901126104955750610489903561275c565b82519182526020820152f35b80fd5b50503461039c578160031936011261039c5760209060a5549051908152f35b8391503461039c578260031936011261039c576104d2612485565b926104dc84612ee5565b60a8546001600160a01b0392906104f690841633146125ef565b828516948560005260b4602091818352846000205461094b57968291879882895260b5845260ff9081888b20541615610912575b610534873561275c565b61054e61054283999361277f565b9860a08a01519061271c565b8381610901575b50508061088e575b5050508451806106fd575b5050505090839181015180610693575b5060608101518061061b575b50608081015180610605575b5001518061059c578480f35b6105a7903090612ac1565b92836105b1578480f35b60ae5416803b1561060157849183518095819363e5d6d6ef60e01b83525af19081156105f857506105e4575b8080808480f35b6105ed90612650565b6104955780826105dd565b513d84823e3d90fd5b8480fd5b610614908660ab541690612c48565b5087610590565b61062c9192508560b0541690612c48565b8460b0541690813b1561068f578691602483928751948593849263182bbcc760e31b8452898401525af1801561068557849291879161066c575b50610584565b61067891929350612650565b6106015782908588610666565b84513d88823e3d90fd5b8680fd5b6106a49192508560b1541690612c48565b8460b1541690813b1561068f578691602483928751948593849263182bbcc760e31b8452898401525af180156106855784929187916106e4575b50610578565b6106f091929350612650565b61060157829085886106de565b610711909993969599989294983090612c48565b838360af54169760248a51809a8193636d8d64bf60e01b83528b8301525afa96871561088457849761085c575b50865161074a9161273c565b95835b815181101561084657836107618284612929565b51168a898b8315801561082c575b8015610814575b610808575b60a954905163a9059cbb60e01b81526001600160a01b03949094168b8501908152602081019290925283918290036040019082908a908a165af180156107fe57906107cc92916107d1575b506128e7565b61074d565b6107f0908c8d3d106107f7575b6107e88183612696565b8101906126b8565b508d6107c6565b503d6107de565b8a513d88823e3d90fd5b60aa548816935061077b565b50505050808652868b528a898b808920541515610776565b5050505080865260b68b528a898b86818a2054161561076f565b5050509590969150849293509091888080610568565b61074a91975061087d903d8087833e6108758183612696565b810190612865565b969061073e565b88513d86823e3d90fd5b60a8548a5163a9059cbb60e01b81526001600160a01b03949094168a8501908152602081019290925283918290036040019082908e908e165af180156108f7576108da575b848161055d565b6108f090853d87116107f7576107e88183612696565b508a6108d3565b88513d8c823e3d90fd5b61090a91612ac1565b508d83610555565b61091b81612ee5565b838a5260b58552878a20600160ff1982541617905560b98552610943888b205460985461271c565b60985561052a565b5050606492519162461bcd60e51b83528201526008602482015267696e20626c61636b60c01b6044820152fd5b905034610a0a576020366003190112610a0a5761099361246f565b9161099c6124ee565b6001600160a01b038316156109b857836109b584612546565b80f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50503461039c578160031936011261039c5760b05490516001600160a01b039091168152602090f35b833461049557602036600319011261049557610a5161246f565b610a596124ee565b60018060a01b03166001600160601b0360a01b60a854161760a85580f35b50503461039c578160031936011261039c5760af5490516001600160a01b039091168152602090f35b50503461039c578060031936011261039c57610aba61246f565b60ad546001600160a01b039190821633148015610af7575b610adb906125ef565b16825260b76020528120610af2602435825461262d565b905580f35b5060335482163314610ad2565b50503461039c57602036600319011261039c5761040090610b2361246f565b60ad546001600160a01b039190821633148015610b80575b610b44906125ef565b16610b4e81613040565b50835260b560205280832060ff19815416905560975460b76020526001828520015560b960205282205460985461262d565b5060335482163314610b3b565b50503461039c57602036600319011261039c5760609181906001600160a01b03610bb561246f565b16815260b760205220805491600260018301549201549181519384526020840152820152f35b833461049557602036600319011261049557610bf561246f565b610bfd6124ee565b60018060a01b03166001600160601b0360a01b60ad54161760ad5580f35b833461049557602036600319011261049557610c3561246f565b610c3d6124ee565b60018060a01b03166001600160601b0360a01b60b254161760b25580f35b833461049557602036600319011261049557610c7561246f565b610c7d6124ee565b60018060a01b03166001600160601b0360a01b60b154161760b15580f35b833461049557602036600319011261049557610cb561246f565b610cbd6124ee565b60018060a01b03166001600160601b0360a01b60af54161760af5580f35b833461049557602036600319011261049557610cf561246f565b610cfd6124ee565b60018060a01b03166001600160601b0360a01b60a954161760a95580f35b905082346104955760208060031936011261039c5760249082610d3c61246f565b60af548751636d8d64bf60e01b81526001600160a01b039283169781019790975290938691829086165afa938415610e53578394610e37575b50835194610d828661284d565b95610d8f82519788612696565b808752610d9e601f199161284d565b013683880137835b8551811015610e21578084610dbe610de99389612929565b511680158015610e0c575b8015610df9575b610dee575b85610de0838b612929565b911690526128e7565b610da6565b508460aa5416610dd5565b5080875260b48552838720541515610dd0565b5080875260b6855260ff848820541615610dc9565b815183815280610e338186018a6124b1565b0390f35b610e4c9194503d8085833e6108758183612696565b9285610d75565b85513d85823e3d90fd5b50503461039c578160031936011261039c576020906098549051908152f35b50503461039c578160031936011261039c5760ad5490516001600160a01b039091168152602090f35b91602091503660031901821361124b57610ebd61246f565b90610ec782612ee5565b60a8546001600160a01b039490610ee190861633146125ef565b823b61167b578483168032036116465780875260b98552828720610f0634825461262d565b80915560995434106115f357609a54106115a55760a754804210158061159c575b1561156d5761012c810180821161155a5780421115611499575b421015908161146f575b506113b9575b865260b68452818620805460ff19166001179055610f6e34612a68565b9390610f7c3460985461262d565b60985580611371575b5083610f8f578680f35b610fb381610fad612710610fa5609f5489612729565b04809761271c565b9561293d565b8560b2541695878451878186816315ab88c960e31b9c8d82525afa908115611241579083918391611339575b5016803b1561039c5781879186885180948193630d0e30db60e41b83525af1801561124157611325575b508451956110168761267a565b600287528536898901378260b254169686518a8152898188818c5afa9081156108845784916112f0575b508461104b836128f6565b911690528360a85416998a61105f83612919565b528751988a8a6370a0823160e01b9d8e8252308b830152815a91602492fa998a156112b357859a6112bd575b5088519182528a828981845afa9182156112b35789928c9287898c8995839561126c575b50965163095ea7b360e01b81526001600160a01b0390931696830196875260208701949094529094859384929183906040015b0393165af180156108845761124f575b508360b2541691823b1561124b5761112692878580948b5196879586948593635c11d79560e01b8552429230928601612a87565b03925af1801561124157611229575b505060a854169083519687523083880152878688602481865afa801561121d5787988298969798916111e1575b506111a1976111709161271c565b865163a9059cbb60e01b81526001600160a01b03909316948301948552602085015290958693849291839160400190565b03925af19081156111d857506111ba575b808080808680f35b816111d092903d106107f7576107e88183612696565b5038806111b2565b513d85823e3d90fd5b958092508691503d8311611216575b6111fa8183612696565b8101031261121157925186939088906111a1611162565b600080fd5b503d6111f0565b508451903d90823e3d90fd5b61123290612650565b61123d578738611135565b8780fd5b86513d84823e3d90fd5b8380fd5b611265908a3d8c116107f7576107e88183612696565b50386110f2565b96955050505093505081813d83116112ac575b6112898183612696565b810103126106015783896110e29387898f956112a58e91612708565b94976110af565b503d61127f565b89513d87823e3d90fd5b8b80929b508196503d83116112e9575b6112d78183612696565b81010312611211578b9351983861108b565b503d6112cd565b90508981813d831161131e575b6113078183612696565b8101031261124b5761131890612708565b38611040565b503d6112fd565b61132e90612650565b61123d578738611009565b809250898092503d831161136a575b6113528183612696565b8101031261039c576113648391612708565b38610fdf565b503d611348565b878760ae5416803b1561039c578486518094819363e5d6d6ef60e01b83525af180156113af5715610f85576113a890979197612650565b9538610f85565b84513d8a823e3d90fd5b6024858760b15416855192838092638c25635960e01b825286888301525afa9081156113af578891611452575b5080611447575b1561140e5780875260b6855261140960ff8489205416156126d0565b610f51565b5083606492519162461bcd60e51b835282015260146024820152731ddc9bdb99c81b9bd919481bdc88185b5bdd5b9d60621b6044820152fd5b50609b5434146113ed565b6114699150863d88116107f7576107e88183612696565b386113e6565b905061038481018091116114865742111538610f4b565b634e487b7160e01b885260118352602488fd5b6024878960b05416875192838092638c25635960e01b8252888a8301525afa908115611550578a91611533575b5080611528575b156114ee5782895260b687526114e960ff868b205416156126d0565b610f41565b845162461bcd60e51b815280850188905260146024820152731ddc9bdb99c81c185c9d081bdc88185b5bdd5b9d60621b6044820152606490fd5b50609c5434146114cd565b61154a9150883d8a116107f7576107e88183612696565b386114c6565b86513d8c823e3d90fd5b634e487b7160e01b895260118452602489fd5b835162461bcd60e51b815280840187905260096024820152681b9bdd081cdd185c9d60ba1b6044820152606490fd5b50801515610f27565b5083608492519162461bcd60e51b83528201526024808201527f4974206e6565647320746f206265206c657373207468616e20746865206d6178604482015263696d756d60e01b6064820152fd5b835162461bcd60e51b8152808401879052602760248201527f4974206e6565647320746f2062652067726561746572207468616e20746865206044820152666d696e696d756d60c81b6064820152608490fd5b5083606492519162461bcd60e51b8352820152601060248201526f6d757374207573657220746f2062757960801b6044820152fd5b83606492519162461bcd60e51b8352820152600e60248201526d63616e206e6f7420746f2062757960901b6044820152fd5b50503461039c578160031936011261039c57602090609e549051908152f35b9050823461049557602036600319011261049557506104899035612a68565b905034610a0a576020366003190112610a0a5761170661246f565b60ac549092906001600160a01b0316330361172557836109b584612546565b906020606492519162461bcd60e51b835282015260086024820152671b9bc81c9a59da1d60c21b6044820152fd5b50503461039c57602036600319011261039c5760209160ff9082906001600160a01b0361177e61246f565b16815260b5855220541690519015158152f35b8334610495576117a03661249b565b906117a96124ee565b60a05560a15580f35b91905034610a0a576060366003190112610a0a57602061181a926117d461246f565b6117dc612485565b6117e46124ee565b845163a9059cbb60e01b81526001600160a01b039091169281019283526044356020840152948592839188918391604090910190565b03926001600160a01b03165af19081156105f85750611837575080f35b61184e9060203d81116107f7576107e88183612696565b5080f35b83346104955760203660031901126104955761186c61246f565b6118746124ee565b60018060a01b03166001600160601b0360a01b60ab54161760ab5580f35b50503461039c578160031936011261039c5760a95490516001600160a01b039091168152602090f35b50503461039c578160031936011261039c57602090609d549051908152f35b50503461039c57602036600319011261039c576020906119166118fb61246f565b6001600160a01b0316600090815260b9602052604090205490565b9051908152f35b83346104955760203660031901126104955761193761246f565b61193f6124ee565b60018060a01b03166001600160601b0360a01b60b054161760b05580f35b828434610495576020366003190112610495575060a061197f60c0933561277f565b825192815184526020820151602085015280820151908401526060810151606084015260808101516080840152015160a0820152f35b50503461039c57602036600319011261039c57610400906119d461246f565b60ad546001600160a01b039190821633148015611a24575b6119f5906125ef565b6119fe81612ee5565b16835260b5602052808320600160ff1982541617905560b960205282205460985461271c565b50603354821633146119ec565b50503461039c578160031936011261039c5760335490516001600160a01b039091168152602090f35b83903461039c57602036600319011261039c57611a756124ee565b3560a75580f35b83903461039c57602036600319011261039c57611a976124ee565b35609c5580f35b833461049557602036600319011261049557611ab861246f565b611ac06124ee565b60018060a01b03166001600160601b0360a01b60aa54161760aa5580f35b50503461039c578160031936011261039c5760209051428152f35b905034610a0a5782600319360112610a0a57825460ff8160081c161591828093611d7f575b8015611d68575b15611d0e575060ff198116600117845581611cfd575b50611b5560ff845460081c16611b508161258f565b61258f565b611b5e33612546565b825490611b7460ff8360081c16611b508161258f565b60016065556001600160601b0360a01b73418d045493860a45f97f8d89e60b900862679d8f8160aa54161760aa557355d398326f99059ff775485246999027b31979558160a954161760a955730a5c6e7be1bd17e928ce128a356064831d8cbaeb8160ab54161760ab557310ed43c718714eb63d5aa57b78b54704e256024e8160b254161760b255737022ff59cc52f812ccf09986941378f6422cac1b8160ae54161760ae5573fa780eeebddcf9adf3b13a482802eafae1a7dd728160af54161760af558060b0541660b0558060b1541660b15560ad541660ad55636868f41c60a75567016345785d8a0000609955678ac7230489e80000609a556702c68af0bb140000609b556706f05b59d3b20000609c556103e8609d55612328609e556104b080609f5561119460a05561157c60a15560a25561012c8060a35560a455606460a555606460a655611cc5578280f35b61ff001916825551600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a138808280f35b61ffff191661010117835538611b3b565b608490602085519162461bcd60e51b8352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152fd5b50303b158015611b255750600160ff831614611b25565b50600160ff831610611b1e565b50503461039c578160031936011261039c5760209060a1549051908152f35b50503461039c578160031936011261039c5760209060a7549051908152f35b83903461039c57602036600319011261039c57611de56124ee565b35609f5580f35b8334610495578060031936011261049557611e056124ee565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b905034610a0a576020366003190112610a0a57611e6461246f565b611e6c6124ee565b6001600160a01b0316918215611e945750506001600160601b0360a01b60ac54161760ac5580f35b906020606492519162461bcd60e51b8352820152601760248201527f63616e206e6f74206265207a65726f20616464726573730000000000000000006044820152fd5b833461049557602036600319011261049557611ef161246f565b611ef96124ee565b60018060a01b03166001600160601b0360a01b60ae54161760ae5580f35b50503461039c578160031936011261039c5760209060a0549051908152f35b50503461039c578160031936011261039c5760aa5490516001600160a01b039091168152602090f35b50503461039c578160031936011261039c5760a85490516001600160a01b039091168152602090f35b83903461039c5760a036600319011261039c57611fa36124ee565b3560a25560243560a35560443560a45560643560a55560843560a65580f35b50503461039c578160031936011261039c5760209060a4549051908152f35b83903461039c57602036600319011261039c57611ffc6124ee565b35609b5580f35b905034610a0a576020366003190112610a0a5735825260ba6020908152918190205490516001600160a01b039091168152f35b83833461039c57602036600319011261039c5761205161246f565b9161205b83612ee5565b60a8546001600160a01b039061207490821633146125ef565b8193169384825260b4602052828220546120c757508360209461209a575b505051908152f35b815260b78452818120805493508315612092576002918155016120be83825461262d565b90558380612092565b606490602084519162461bcd60e51b8352820152601660248201527531b0b7103737ba103237903a3434b99030b1ba34b7b760511b6044820152fd5b8334610495576121123661249b565b9061211b6124ee565b609d55609e5580f35b50503461039c57602036600319011261039c576020916001600160a01b039082908261214e61246f565b16815260b885522054169051908152f35b50503461039c578160031936011261039c576020906099549051908152f35b50503461039c578160031936011261039c5760ac5490516001600160a01b039091168152602090f35b83903461039c57602036600319011261039c5780356121d160018060a01b0360a8541633146125ef565b6098549182151580612233575b6121e6578380f35b670de0b6b3a76400009182810292818404149015171561222057506122169161220e9161273c565b60975461262d565b6097558180808380f35b634e487b7160e01b845260119052602483fd5b508115156121de565b50503461039c578160031936011261039c57602090609b549051908152f35b50503461039c578160031936011261039c57602090609c549051908152f35b50503461039c57602036600319011261039c5760209181906001600160a01b036122a261246f565b16815260b98452205460995411159051908152f35b50503461039c578160031936011261039c5760ab5490516001600160a01b039091168152602090f35b8334610495576122ef3661249b565b906122f86124ee565b609955609a5580f35b50503461039c578160031936011261039c5760b15490516001600160a01b039091168152602090f35b50503461039c57602036600319011261039c5760209160ff9082906001600160a01b0361235561246f565b16815260b6855220541690519015158152f35b50503461039c57602036600319011261039c5760209061191661238961246f565b612f1d565b50503461039c578160031936011261039c5760209060a2549051908152f35b50503461039c57602036600319011261039c57610400906123cc61246f565b60ad54612402906001600160a01b0390811633148015612427575b6123f0906125ef565b8216916123fc83612fbe565b50612ee5565b835260b5602052808320600160ff1982541617905560b960205282205460985461271c565b50603354811633146123e7565b50503461039c578160031936011261039c57602090609a549051908152f35b84903461039c578160031936011261039c576020906097548152f35b600435906001600160a01b038216820361121157565b602435906001600160a01b038216820361121157565b6040906003190112611211576004359060243590565b90815180825260208080930193019160005b8281106124d1575050505090565b83516001600160a01b0316855293810193928101926001016124c3565b6033546001600160a01b0316330361250257565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b1561259657565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b156125f657565b60405162461bcd60e51b815260206004820152600f60248201526e6e6f20726967687420746f2062757960881b6044820152606490fd5b9190820180921161263a57565b634e487b7160e01b600052601160045260246000fd5b67ffffffffffffffff811161266457604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761266457604052565b90601f8019910116810190811067ffffffffffffffff82111761266457604052565b90816020910312611211575180151581036112115790565b156126d757565b60405162461bcd60e51b8152602060048201526009602482015268627579206f6e65636560b81b6044820152606490fd5b51906001600160a01b038216820361121157565b9190820391821161263a57565b8181029291811591840414171561263a57565b8115612746570490565b634e487b7160e01b600052601260045260246000fd5b9061271061277b8161277060a05486612729565b049360a15490612729565b0490565b9060405160c0810181811067ffffffffffffffff8211176126645760405260009081815261284860208201948386526128426040840185815261283d6060860198878a5261283d608088019389855260a08901998a5261283d899c60a254966127109b8c6127ed8a8d612729565b04905260a354958c6127ff888d612729565b04905260a454938c612811868d612729565b04905260a554918c612823848d612729565b04905260a654908c612835838d612729565b04905261262d565b61262d565b90612729565b049052565b67ffffffffffffffff81116126645760051b60200190565b60209081818403126112115780519067ffffffffffffffff821161121157019180601f8401121561121157825161289b8161284d565b936128a96040519586612696565b818552838086019260051b820101928311611211578301905b8282106128d0575050505090565b8380916128dc84612708565b8152019101906128c2565b600019811461263a5760010190565b8051156129035760200190565b634e487b7160e01b600052603260045260246000fd5b8051600110156129035760400190565b80518210156129035760209160051b010190565b60018060a01b0380938160af5416926040938451968796636d8d64bf60e01b885216600487015285602460009889935afa948515610685578695612a4c575b508451908115612a4357906129939195929561273c565b91821591865b8151811015612a3957878484806129b08587612929565b51168881158015612a21575b8015612a0b575b6129ff575b84938493849384926129f5575b1690f1156129eb576129e6906128e7565b612999565b85513d89823e3d90fd5b6108fc92506129d5565b60aa54831691506129c8565b505080845260b4602052888a85205415156129c3565b505080845260b66020528860ff8b86205416156129bc565b5050505050509050565b50509350505050565b612a619195503d8088833e6108758183612696565b933861297c565b9061271061277b81612a7c609d5486612729565b0493609e5490612729565b90608092612aad919695949683526000602084015260a0604084015260a08301906124b1565b6001600160a01b0390951660608201520152565b60a85460b2546040805163095ea7b360e01b81526001600160a01b0392831660048201526024810185905295949391926020929084169087848180604481010360009b8c80975af18015612c3e57612c21575b5084861694853196845195612b288761267a565b600287528536828901378260a85416612b40886128f6565b528260b254169286516315ab88c960e31b81528281600481885afa928315612c17578793612bdb575b5050612b7488612919565b91169052813b1561124b5783612ba29686519788958694859363791ac94760e01b8552429260048601612a87565b03925af1908115612bd25750612bc0949550612bc3575b503161271c565b90565b612bcc90612650565b38612bb9565b513d87823e3d90fd5b9080929350813d8311612c10575b612bf38183612696565b81010312612c0c57612c0490612708565b903880612b69565b8580fd5b503d612be9565b88513d89823e3d90fd5b612c3790853d87116107f7576107e88183612696565b5038612b14565b84513d85823e3d90fd5b60a85460b2546040805163095ea7b360e01b81526001600160a01b03928316600480830191909152602482018690529495949193602093600093929091859082906044908290889087165af18015612edb57612ebe575b508060a95416908551966370a0823160e01b92838952828216998a868b0152878a602481855afa998a15612eb457879a612e85575b508851906080820182811067ffffffffffffffff821117612e72578a52600382526060368a8401378460a85416612d0a836128f6565b528460b25416928a516315ab88c960e31b81528a818a81885afa908115612e68578a91612e2f575b5086612d3d85612919565b91169052825160021015612e1c576060830152823b1561123d5791869391888094612d7d8d5197889687958694635c11d79560e01b865242938601612a87565b03925af18015612e1257908694939291612dfc575b509060249160a954168751998a94859384528301525afa928315612df2575091612dc2575b50612bc0925061271c565b905082813d8311612deb575b612dd88183612696565b8101031261121157612bc0915138612db7565b503d612dce565b51903d90823e3d90fd5b94612e0a6024939296612650565b949091612d92565b87513d87823e3d90fd5b634e487b7160e01b895260328852602489fd5b90508a81813d8311612e61575b612e468183612696565b81010312612e5d57612e5790612708565b38612d32565b8980fd5b503d612e3c565b8c513d8c823e3d90fd5b634e487b7160e01b895260418852602489fd5b9099508781813d8311612ead575b612e9d8183612696565b8101031261068f57519838612cd4565b503d612e93565b89513d89823e3d90fd5b612ed490853d87116107f7576107e88183612696565b5038612c9f565b86513d86823e3d90fd5b6001600160a01b0381169081612ef9575050565b612f0290612f1d565b9060005260b760205260406000209081556001609754910155565b6001600160a01b0316600081815260b5602052604081205490919060ff16612f83576040612bc09260b9602052670de0b6b3a7640000612f728383205461284260975460b7602052600187872001549061271c565b0492815260b760205220549061262d565b5090565b60b3548110156129035760b36000527f236f2840bfc5dc34b28742dd0b4c9defe8a4a5fa9592e49ceffb9ab51b7eb9740190600090565b600081815260b4602052604081205461303b5760b35468010000000000000000811015613027579082613013612ffc8460016040960160b355612f87565b819391549060031b91821b91600019901b19161790565b905560b35492815260b46020522055600190565b634e487b7160e01b82526041600452602482fd5b905090565b600081815260b46020526040812054909190801561312557600019908082018181116131115760b354908382019182116130fd578082036130c9575b50505060b35480156130b55781019061309482612f87565b909182549160031b1b1916905560b355815260b46020526040812055600190565b634e487b7160e01b84526031600452602484fd5b6130e76130d8612ffc93612f87565b90549060031b1c928392612f87565b9055845260b4602052604084205538808061307c565b634e487b7160e01b86526011600452602486fd5b634e487b7160e01b85526011600452602485fd5b50509056fea164736f6c6343000814000a",
  "decompiled": true,
  "raw_sol_code": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0;\n\n/// @title            Decompiled Contract\n/// @author           Jonathan Becker <jonathan@jbecker.dev>\n/// @custom:version   heimdall-rs v0.9.0\n///\n/// @notice           This contract was decompiled using the heimdall-rs decompiler.\n///                     It was generated directly by tracing the EVM opcodes from this contract.\n///                     As a result, it may not compile or even be valid solidity code.\n///                     Despite this, it should be obvious what each function does. Overall\n///                     logic should have been preserved throughout decompiling.\n///\n/// @custom:github    You can find the open-source decompiler here:\n///                       https://heimdall.rs\n\ncontract DecompiledContract {\n    uint256 public nodeRate;\n    uint256 public node_amount;\n    mapping(bytes32 => bytes32) storage_map_c;\n    address public unresolved_f006ead6;\n    mapping(bytes32 => bytes32) storage_map_ac;\n    uint256 ownerh;\n    address public unresolved_f127864c;\n    address ownerd;\n    bytes32 store_v;\n    uint256 public unresolved_4b8cee65;\n    address public ownerB;\n    uint256 public unresolved_971cca57;\n    uint256 public sellRate;\n    uint256 public unresolved_b5305bdc;\n    uint256 public unresolved_f8560a28;\n    uint256 public returnRate;\n    mapping(bytes32 => bytes32) storage_map_d;\n    uint256 public unresolved_2c97e90c;\n    address public marktingAddress;\n    address public unresolved_fb9e5eca;\n    mapping(bytes32 => bytes32) storage_map_ab;\n    uint256 public unresolved_13caa51e;\n    address public unresolved_59e2a23a;\n    address public unresolved_be3c5152;\n    mapping(bytes32 => bytes32) storage_map_g;\n    address public unresolved_1cbe0fe2;\n    address public owner;\n    uint256 public unresolved_f6afce5f;\n    uint256 store_e;\n    address public usdtAddress;\n    uint256 public buyRate;\n    uint256 public unresolved_c09d1e58;\n    mapping(bytes32 => bytes32) storage_map_n;\n    mapping(bytes32 => bytes32) storage_map_o;\n    uint256 public startTime;\n    address public defaultAddress;\n    uint256 public minBNBAmount;\n    bytes32 ownerj;\n    \n    event OwnershipTransferred(address, address);\n    \n    /// @custom:selector    0xcbf6d902\n    /// @custom:signature   Unresolved_cbf6d902(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_cbf6d902(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        usdtAddress = (uint96(usdtAddress)) | (address(arg0));\n        return ;\n    }\n    \n    /// @custom:selector    0x489082df\n    /// @custom:signature   takeToken(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function takeToken(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(address(arg0), \"no right to buy\");\n        address var_a = address(arg0);\n        var_b = 0xb5;\n        require(bytes1(storage_map_c[var_a]), \"no right to buy\");\n        var_a = address(arg0);\n        var_b = 0xb7;\n        storage_map_c[var_a] = 0;\n        storage_map_d[var_a] = store_e;\n        require(!(msg.sender == (address(unresolved_59e2a23a))), \"no right to buy\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x0f;\n        var_f = 0x6e6f20726967687420746f206275790000000000000000000000000000000000;\n        var_a = address(arg0);\n        var_b = 0xb4;\n        require(storage_map_c[var_a], \"can not do this action\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x16;\n        var_f = 0x63616e206e6f7420646f207468697320616374696f6e00000000000000000000;\n        require(address(arg0));\n        var_a = address(arg0);\n        var_b = 0xb7;\n        require(!storage_map_c[var_a]);\n        storage_map_c[var_a] = 0;\n        require(storage_map_g[var_a] > (storage_map_g[var_a] + storage_map_c[var_a]));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        storage_map_g[var_a] = (storage_map_g[var_a]) + storage_map_c[var_a];\n        address var_c = storage_map_c[var_a];\n        return storage_map_c[var_a];\n        var_c = storage_map_c[var_a];\n        return storage_map_c[var_a];\n        var_c = 0;\n        return 0;\n        var_b = 0xb9;\n        var_b = 0xb7;\n        require((store_e - (storage_map_d[var_a])) > store_e);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(!(storage_map_c[var_a] * (store_e - (storage_map_d[var_a])) / storage_map_c[var_a] == (store_e - (storage_map_d[var_a]))) | !storage_map_c[var_a]);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_a = address(arg0);\n        var_b = 0xb7;\n        require((storage_map_c[var_a] * (store_e - (storage_map_d[var_a])) / 0x0de0b6b3a7640000) > ((storage_map_c[var_a] * (store_e - (storage_map_d[var_a])) / 0x0de0b6b3a7640000) + storage_map_c[var_a]));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n    }\n    \n    /// @custom:selector    0x72cd9cd7\n    /// @custom:signature   Unresolved_72cd9cd7(uint256 arg0) public payable returns (uint256)\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    function Unresolved_72cd9cd7(uint256 arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20, \"Ownable: caller is not the owner\");\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        buyRate = arg0;\n        return ;\n    }\n    \n    /// @custom:selector    0x6dfd480b\n    /// @custom:signature   Unresolved_6dfd480b(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_6dfd480b(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(address(arg0)), \"can not be zero address\");\n        ownerB = (uint96(ownerB)) | (address(arg0));\n        return ;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x63616e206e6f74206265207a65726f2061646472657373000000000000000000;\n    }\n    \n    /// @custom:selector    0x87ceff09\n    /// @custom:signature   getBlockTime() public view returns (uint256)\n    function getBlockTime() public view returns (uint256) {\n        require(msg.value);\n        require((msg.data.length + 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc) < 0);\n        uint256 var_a = block.timestamp;\n        return block.timestamp;\n    }\n    \n    /// @custom:selector    0x306c1f0c\n    /// @custom:signature   updateAllAverage(uint256 arg0) public payable returns (uint256)\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    function updateAllAverage(uint256 arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20, \"no right to buy\");\n        require(!(msg.sender == (address(unresolved_59e2a23a))), \"no right to buy\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x0f;\n        var_d = 0x6e6f20726967687420746f206275790000000000000000000000000000000000;\n        require(unresolved_c09d1e58);\n        require(arg0);\n        require(arg0 | (((arg0 * 0x0de0b6b3a7640000) / arg0) == 0x0de0b6b3a7640000));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(!unresolved_c09d1e58);\n        require(store_e > (store_e + ((arg0 * 0x0de0b6b3a7640000) / unresolved_c09d1e58)));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        store_e = store_e + ((arg0 * 0x0de0b6b3a7640000) / unresolved_c09d1e58);\n        return ;\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        return ;\n    }\n    \n    /// @custom:selector    0x8e047f0f\n    /// @custom:signature   Unresolved_8e047f0f(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_8e047f0f(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(!(msg.sender == (address(unresolved_be3c5152))), \"no right to buy\");\n        require(!(msg.sender == (address(owner))), \"no right to buy\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x0f;\n        var_d = 0x6e6f20726967687420746f206275790000000000000000000000000000000000;\n        require(address(arg0));\n        address var_e = address(arg0);\n        var_f = 0xb5;\n        require(bytes1(storage_map_n[var_e]));\n        var_e = address(arg0);\n        var_f = 0xb7;\n        storage_map_n[var_e] = 0;\n        storage_map_o[var_e] = store_e;\n        var_e = address(arg0);\n        var_f = 0xb5;\n        storage_map_n[var_e] = (uint248(storage_map_n[var_e])) | 0x01;\n        var_f = 0xb9;\n        require((unresolved_c09d1e58 - storage_map_n[var_e]) > unresolved_c09d1e58);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        unresolved_c09d1e58 = unresolved_c09d1e58 - storage_map_n[var_e];\n        return ;\n        var_f = 0xb9;\n        var_f = 0xb7;\n        require((store_e - (storage_map_o[var_e])) > store_e);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(!(storage_map_n[var_e] * (store_e - (storage_map_o[var_e])) / storage_map_n[var_e] == (store_e - (storage_map_o[var_e]))) | !storage_map_n[var_e]);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_e = address(arg0);\n        var_f = 0xb7;\n        require((storage_map_n[var_e] * (store_e - (storage_map_o[var_e])) / 0x0de0b6b3a7640000) > ((storage_map_n[var_e] * (store_e - (storage_map_o[var_e])) / 0x0de0b6b3a7640000) + storage_map_n[var_e]));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n    }\n    \n    /// @custom:selector    0x90c6bd11\n    /// @custom:signature   Unresolved_90c6bd11(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_90c6bd11(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        unresolved_f127864c = (uint96(unresolved_f127864c)) | (address(arg0));\n        return ;\n    }\n    \n    /// @custom:selector    0x8aa5b2c3\n    /// @custom:signature   changeStartTime(uint256 arg0) public payable returns (uint256)\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    function changeStartTime(uint256 arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20, \"Ownable: caller is not the owner\");\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        startTime = arg0;\n        return ;\n    }\n    \n    /// @custom:selector    0x191437a1\n    /// @custom:signature   getBuyerAtIndex(uint256 arg0) public view returns (address)\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    function getBuyerAtIndex(uint256 arg0) public view returns (address) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        uint256 var_a = arg0;\n        var_b = 0xba;\n        uint256 var_c = address(storage_map_c[var_a]);\n        return address(storage_map_c[var_a]);\n    }\n    \n    /// @custom:selector    0x8881e443\n    /// @custom:signature   Unresolved_8881e443(uint256 arg0) public payable returns (uint256)\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    function Unresolved_8881e443(uint256 arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20, \"Ownable: caller is not the owner\");\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        unresolved_2c97e90c = arg0;\n        return ;\n    }\n    \n    /// @custom:selector    0xe17b2e29\n    /// @custom:signature   Unresolved_e17b2e29(address arg0) public view returns (bytes memory)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_e17b2e29(address arg0) public view returns (bytes memory) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0xb7;\n        address var_c = storage_map_c[var_a];\n        address var_d = storage_map_d[var_a];\n        address var_e = storage_map_g[var_a];\n        return abi.encodePacked(storage_map_c[var_a], storage_map_d[var_a], storage_map_g[var_a]);\n    }\n    \n    /// @custom:selector    0x87e7e7a4\n    /// @custom:signature   Unresolved_87e7e7a4(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_87e7e7a4(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        defaultAddress = (uint96(defaultAddress)) | (address(arg0));\n        return ;\n    }\n    \n    /// @custom:selector    0x90171e59\n    /// @custom:signature   Unresolved_90171e59(uint256 arg0) public view\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    function Unresolved_90171e59(uint256 arg0) public view {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(((var_a + 0xc0) > 0xffffffffffffffff) | ((var_a + 0xc0) < var_a));\n        var_b = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x41;\n        uint256 var_a = var_a + 0xc0;\n        uint256 var_d = 0;\n        uint256 var_e = 0;\n        uint256 var_f = 0;\n        uint256 var_g = 0;\n        uint256 var_h = 0;\n        uint256 var_i = 0;\n        require(!(((arg0 * unresolved_13caa51e) / arg0) == unresolved_13caa51e) | !arg0);\n        var_b = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n    }\n    \n    /// @custom:selector    0xe4997dc5\n    /// @custom:signature   removeBlackList(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function removeBlackList(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(!(msg.sender == (address(unresolved_be3c5152))), \"no right to buy\");\n        require(!(msg.sender == (address(owner))), \"no right to buy\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x0f;\n        var_d = 0x6e6f20726967687420746f206275790000000000000000000000000000000000;\n        address var_e = address(arg0);\n        var_f = 0xb4;\n        require(!storage_map_n[var_e]);\n        require((0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + storage_map_n[var_e]) > storage_map_n[var_e]);\n        require((store_v + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) > store_v);\n        require((store_v + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) - (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + storage_map_n[var_e]));\n        require(!(store_v + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) < store_v);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x32;\n        require(!store_v);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x31;\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_e = address(arg0);\n        var_f = 0xb5;\n        storage_map_n[var_e] = uint248(storage_map_n[var_e]);\n        var_f = 0xb7;\n        storage_map_o[var_e] = store_e;\n        var_f = 0xb9;\n        require(unresolved_c09d1e58 > (unresolved_c09d1e58 + storage_map_n[var_e]));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        unresolved_c09d1e58 = unresolved_c09d1e58 + storage_map_n[var_e];\n        return ;\n    }\n    \n    /// @custom:selector    0x52d766be\n    /// @custom:signature   Unresolved_52d766be(uint256 arg0, uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) public payable returns (uint256)\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    /// @param              arg1 [\"uint256\", \"bytes32\", \"int256\"]\n    /// @param              arg2 [\"uint256\", \"bytes32\", \"int256\"]\n    /// @param              arg3 [\"uint256\", \"bytes32\", \"int256\"]\n    /// @param              arg4 [\"uint256\", \"bytes32\", \"int256\"]\n    function Unresolved_52d766be(uint256 arg0, uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0xa0, \"Ownable: caller is not the owner\");\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        unresolved_13caa51e = arg0;\n        nodeRate = arg1;\n        unresolved_4b8cee65 = arg2;\n        unresolved_f6afce5f = arg3;\n        unresolved_f8560a28 = arg4;\n        return ;\n    }\n    \n    /// @custom:selector    0xca8b444e\n    /// @custom:signature   Unresolved_ca8b444e(address arg0) public payable returns (bytes memory)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_ca8b444e(address arg0) public payable returns (bytes memory) {\n        require(msg.value);\n        require((msg.data.length + 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc) < 0x20);\n        require(arg0 - (address(arg0)));\n        var_a = 0x6d8d64bf00000000000000000000000000000000000000000000000000000000;\n        address var_b = address(arg0);\n        (bool success, bytes memory ret0) = address(ownera).Unresolved_6d8d64bf(var_b); // staticcall\n        if (var_c > 0xffffffffffffffff) {\n            var_c = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_d = 0x41;\n            require(var_c > 0xffffffffffffffff);\n            var_c = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_d = 0x41;\n            uint248 var_e = var_e + (uint248((0x20 + (var_c << 0x05)) + 0x1f));\n            var_a = var_c;\n            require(((var_e + (uint248((0x20 + (var_c << 0x05)) + 0x1f))) > 0xffffffffffffffff) | ((var_e + (uint248((0x20 + (var_c << 0x05)) + 0x1f))) < var_e));\n            var_c = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_d = 0x41;\n            var_f = msg.data[4:4];\n            require(var_c > 0xffffffffffffffff);\n            require(!0 < var_c);\n            require(!0 < var_c);\n            address var_c = address(var_g);\n            var_g = 0xb6;\n            require(address(var_g));\n            var_c = address(var_g);\n            var_g = 0xb4;\n            require(bytes1(storage_map_ab[var_c]));\n            address var_h = address(defaultAddress);\n            require(storage_map_ab[var_c]);\n            var_c = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_d = 0x11;\n            var_c = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_d = 0x32;\n            var_c = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_d = 0x32;\n            require(0 == 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        }\n        var_c = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_d = 0x32;\n        var_h = 0x20;\n        uint248 var_i = var_e.length;\n        return abi.encodePacked(0x20, var_e.length);\n    }\n    \n    /// @custom:selector    0xfcfad9ce\n    /// @custom:signature   Unresolved_fcfad9ce(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_fcfad9ce(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        address var_e = address(arg0);\n        var_f = 0xb5;\n        storage_map_n[var_e] = uint248(storage_map_n[var_e]);\n        var_f = 0xb7;\n        storage_map_ac[var_e] = store_e;\n        var_f = 0xb9;\n        require(unresolved_c09d1e58 > (unresolved_c09d1e58 + storage_map_n[var_e]));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        unresolved_c09d1e58 = unresolved_c09d1e58 + storage_map_n[var_e];\n        return ;\n    }\n    \n    /// @custom:selector    0xdcb49479\n    /// @custom:signature   Unresolved_dcb49479(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_dcb49479(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        ownerd = (uint96(ownerd)) | (address(arg0));\n        return ;\n    }\n    \n    /// @custom:selector    0x1904d164\n    /// @custom:signature   Unresolved_1904d164(address arg0) public view returns (bool)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_1904d164(address arg0) public view returns (bool) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0xb6;\n        address var_c = !(!bytes1(storage_map_c[var_a]));\n        return !(!bytes1(storage_map_c[var_a]));\n    }\n    \n    /// @custom:selector    0xf83212af\n    /// @custom:signature   Unresolved_f83212af(uint256 arg0) public view\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    function Unresolved_f83212af(uint256 arg0) public view {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(!(((arg0 * sellRate) / arg0) == sellRate) | !arg0);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n    }\n    \n    /// @custom:selector    0xde41768c\n    /// @custom:signature   Unresolved_de41768c(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_de41768c(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        unresolved_be3c5152 = (uint96(unresolved_be3c5152)) | (address(arg0));\n        return ;\n    }\n    \n    /// @custom:selector    0xdb66170a\n    /// @custom:signature   Unresolved_db66170a(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_db66170a(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        unresolved_1cbe0fe2 = (uint96(unresolved_1cbe0fe2)) | (address(arg0));\n        return ;\n    }\n    \n    /// @custom:selector    0xbabb603b\n    /// @custom:signature   Unresolved_babb603b(address arg0) public payable\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_babb603b(address arg0) public payable {\n        require(0x20 > (0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length));\n        require(arg0 - (address(arg0)));\n        require(address(arg0), \"no right to buy\");\n        address var_a = address(arg0);\n        var_b = 0xb5;\n        require(bytes1(storage_map_c[var_a]), \"no right to buy\");\n        var_a = address(arg0);\n        var_b = 0xb7;\n        storage_map_c[var_a] = 0;\n        storage_map_d[var_a] = store_e;\n        require(!(msg.sender == (address(unresolved_59e2a23a))), \"no right to buy\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x0f;\n        var_f = 0x6e6f20726967687420746f206275790000000000000000000000000000000000;\n        require(address(arg0).code.length, \"must user to buy\");\n        require(tx.origin - (address(arg0)), \"must user to buy\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x10;\n        var_f = 0x6d757374207573657220746f2062757900000000000000000000000000000000;\n        var_a = address(arg0);\n        var_b = 0xb9;\n        require(storage_map_c[var_a] > (storage_map_c[var_a] + msg.value), \"It needs to be greater than the minimum\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        storage_map_c[var_a] = storage_map_c[var_a] + msg.value;\n        require(msg.value < ownerg, \"It needs to be greater than the minimum\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x27;\n        var_f = 0x4974206e6565647320746f2062652067726561746572207468616e2074686520;\n        var_h = 0x6d696e696d756d00000000000000000000000000000000000000000000000000;\n        require(ownerh < (storage_map_c[var_a] + msg.value), \"It needs to be less than the maximum\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x24;\n        var_f = 0x4974206e6565647320746f206265206c657373207468616e20746865206d6178;\n        var_h = 0x696d756d00000000000000000000000000000000000000000000000000000000;\n        require(!(block.timestamp < startTime), \"not start\");\n        require(!(!block.timestamp < startTime), \"not start\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x09;\n        var_f = 0x6e6f742073746172740000000000000000000000000000000000000000000000;\n        require(startTime > (startTime + 0x012c));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(!block.timestamp > (startTime + 0x012c));\n        var_c = 0x8c25635900000000000000000000000000000000000000000000000000000000;\n        address var_d = address(arg0);\n        (bool success, bytes memory ret0) = address(unresolved_f127864c).Unresolved_8c256359(var_d); // staticcall\n        require(0, \"wrong part or amount\");\n        require(!(msg.value == unresolved_2c97e90c), \"wrong part or amount\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x14;\n        var_f = 0x77726f6e672070617274206f7220616d6f756e74000000000000000000000000;\n        var_a = address(arg0);\n        var_b = 0xb6;\n        require(!(!bytes1(storage_map_c[var_a])), \"buy onece\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x09;\n        var_f = 0x627579206f6e6563650000000000000000000000000000000000000000000000;\n        require(!block.timestamp < (startTime + 0x012c));\n        require(!block.timestamp < (startTime + 0x012c));\n        var_a = address(arg0);\n        var_b = 0xb6;\n        storage_map_c[var_a] = 0x01 | (uint248(storage_map_c[var_a]));\n        require(!(((msg.value * ownere) / msg.value) == ownere) | !msg.value);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_c = 0x8c25635900000000000000000000000000000000000000000000000000000000;\n        var_d = address(arg0);\n        (bool success, bytes memory ret0) = address(unresolved_1cbe0fe2).Unresolved_8c256359(var_d); // staticcall\n        require(0, \"wrong node or amount\");\n        require(!(msg.value == owneri), \"wrong node or amount\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x14;\n        var_f = 0x77726f6e67206e6f6465206f7220616d6f756e74000000000000000000000000;\n        require(!0, \"wrong node or amount\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x14;\n        var_f = 0x77726f6e67206e6f6465206f7220616d6f756e74000000000000000000000000;\n        require(0x20 > ret0.length);\n        require(((var_i + 0x20) > 0xffffffffffffffff) | ((var_i + 0x20) < var_i));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x41;\n        uint256 var_i = var_i + 0x20;\n        require(((var_i + 0x20) - var_i) < 0x20);\n        if (var_i.length - var_i.length) {\n            require(var_i.length - var_i.length);\n        }\n        if (startTime > (startTime + 0x0384)) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_g = 0x11;\n            require(startTime > (startTime + 0x0384), \"wrong part or amount\");\n        }\n        require(!0, \"wrong part or amount\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x14;\n        var_f = 0x77726f6e672070617274206f7220616d6f756e74000000000000000000000000;\n        require(0x20 > ret0.length);\n        require(((var_i + 0x20) > 0xffffffffffffffff) | ((var_i + 0x20) < var_i));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x41;\n        var_i = var_i + 0x20;\n        require(((var_i + 0x20) - var_i) < 0x20);\n        if (var_i.length - var_i.length) {\n            require(var_i.length - var_i.length);\n        }\n        require(!startTime, \"not start\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x09;\n        var_f = 0x6e6f742073746172740000000000000000000000000000000000000000000000;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x0e;\n        var_f = 0x63616e206e6f7420746f20627579000000000000000000000000000000000000;\n        var_b = 0xb9;\n        var_b = 0xb7;\n        require((store_e - (storage_map_d[var_a])) > store_e);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(!(storage_map_c[var_a] * (store_e - (storage_map_d[var_a])) / storage_map_c[var_a] == (store_e - (storage_map_d[var_a]))) | !storage_map_c[var_a]);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n    }\n    \n    /// @custom:selector    0x1d1d630c\n    /// @custom:signature   Unresolved_1d1d630c(uint256 arg0, uint256 arg1) public payable returns (uint256)\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    /// @param              arg1 [\"uint256\", \"bytes32\", \"int256\"]\n    function Unresolved_1d1d630c(uint256 arg0, uint256 arg1) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x40, \"Ownable: caller is not the owner\");\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        ownerg = arg0;\n        ownerh = arg1;\n        return ;\n    }\n    \n    /// @custom:selector    0x715018a6\n    /// @custom:signature   renounceOwnership() public payable returns (uint256)\n    function renounceOwnership() public payable returns (uint256) {\n        require(msg.value);\n        require((msg.data.length + 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc) < 0);\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = uint96(owner);\n        emit OwnershipTransferred(address(owner), 0);\n        return ;\n    }\n    \n    /// @custom:selector    0x8129fc1c\n    /// @custom:signature   initialize() public payable\n    function initialize() public payable {\n        require(msg.value);\n        require((msg.data.length + 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc) < 0);\n        require(!(bytes1(ownerj >> 0x08)), \"Initializable: contract is not initializing\");\n        require(!(!bytes1(ownerj >> 0x08)), \"Initializable: contract is not initializing\");\n        require(address(this).code.length, \"Initializable: contract is not initializing\");\n        require(!(bytes1(ownerj) == 0x01), \"Initializable: contract is not initializing\");\n        ownerj = 0x01 | (uint248(ownerj));\n        require(!(bytes1(ownerj >> 0x08)), \"Initializable: contract is not initializing\");\n        require(!(bytes1(ownerj >> 0x08)), \"Initializable: contract is not initializing\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x2b;\n        var_d = 0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069;\n        var_e = 0x6e697469616c697a696e67000000000000000000000000000000000000000000;\n        ownerj = 0x0101 | (uint240(ownerj));\n        require(!(bytes1(ownerj >> 0x08)), \"Initializable: contract is not initializing\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x2b;\n        var_d = 0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069;\n        var_e = 0x6e697469616c697a696e67000000000000000000000000000000000000000000;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x2e;\n        var_d = 0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561;\n        var_e = 0x647920696e697469616c697a6564000000000000000000000000000000000000;\n        require(!(!bytes1(ownerj >> 0x08)), \"Initializable: contract is already initialized\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x2e;\n        var_d = 0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561;\n        var_e = 0x647920696e697469616c697a6564000000000000000000000000000000000000;\n    }\n    \n    /// @custom:selector    0x931d93fc\n    /// @custom:signature   buyerUserInfo(address arg0) public view returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function buyerUserInfo(address arg0) public view returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0xb9;\n        address var_c = storage_map_c[var_a];\n        return storage_map_c[var_a];\n    }\n    \n    /// @custom:selector    0xcc6ddc9a\n    /// @custom:signature   Unresolved_cc6ddc9a(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_cc6ddc9a(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        ownera = (uint96(ownera)) | (address(arg0));\n        return ;\n    }\n    \n    /// @custom:selector    0xe6363cb1\n    /// @custom:signature   Unresolved_e6363cb1(address arg0, uint256 arg1) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    /// @param              arg1 [\"uint256\", \"bytes32\", \"int256\"]\n    function Unresolved_e6363cb1(address arg0, uint256 arg1) public payable returns (uint256) {\n        require(msg.value);\n        require((msg.data.length + 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc) < 0x40);\n        require(arg0 - (address(arg0)));\n        require(!(msg.sender == (address(unresolved_be3c5152))), \"no right to buy\");\n        require(!(msg.sender == (address(owner))), \"no right to buy\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x0f;\n        var_d = 0x6e6f20726967687420746f206275790000000000000000000000000000000000;\n        address var_e = address(arg0);\n        var_f = 0xb7;\n        require(storage_map_n[var_e] > (storage_map_n[var_e] + arg1));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        storage_map_n[var_e] = storage_map_n[var_e] + arg1;\n        return ;\n    }\n    \n    /// @custom:selector    0x0ecb93c0\n    /// @custom:signature   addBlackList(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function addBlackList(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(!(msg.sender == (address(unresolved_be3c5152))), \"no right to buy\");\n        require(!(msg.sender == (address(owner))), \"no right to buy\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x0f;\n        var_d = 0x6e6f20726967687420746f206275790000000000000000000000000000000000;\n        address var_e = address(arg0);\n        var_f = 0xb4;\n        require(storage_map_n[var_e]);\n        require(address(arg0));\n        var_e = address(arg0);\n        var_f = 0xb5;\n        require(bytes1(storage_map_n[var_e]));\n        var_e = address(arg0);\n        var_f = 0xb7;\n        storage_map_n[var_e] = 0;\n        storage_map_o[var_e] = store_e;\n        var_e = address(arg0);\n        var_f = 0xb5;\n        storage_map_n[var_e] = (uint248(storage_map_n[var_e])) | 0x01;\n        var_f = 0xb9;\n        require((unresolved_c09d1e58 - storage_map_n[var_e]) > unresolved_c09d1e58);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        unresolved_c09d1e58 = unresolved_c09d1e58 - storage_map_n[var_e];\n        return ;\n        var_f = 0xb9;\n        var_f = 0xb7;\n        require((store_e - (storage_map_o[var_e])) > store_e);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(!(storage_map_n[var_e] * (store_e - (storage_map_o[var_e])) / storage_map_n[var_e] == (store_e - (storage_map_o[var_e]))) | !storage_map_n[var_e]);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_e = address(arg0);\n        var_f = 0xb7;\n        require((storage_map_n[var_e] * (store_e - (storage_map_o[var_e])) / 0x0de0b6b3a7640000) > ((storage_map_n[var_e] * (store_e - (storage_map_o[var_e])) / 0x0de0b6b3a7640000) + storage_map_n[var_e]));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(!store_v < 0x010000000000000000);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x41;\n        store_v = store_v + 0x01;\n        require(!store_v < store_v);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x32;\n    }\n    \n    /// @custom:selector    0x496b370e\n    /// @custom:signature   indexUser(uint256 arg0) public view returns (address)\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    function indexUser(uint256 arg0) public view returns (address) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        uint256 var_a = arg0;\n        var_b = 0xba;\n        uint256 var_c = address(storage_map_c[var_a]);\n        return address(storage_map_c[var_a]);\n    }\n    \n    /// @custom:selector    0x35b03203\n    /// @custom:signature   intro(address arg0) public view returns (address)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function intro(address arg0) public view returns (address) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0xb8;\n        address var_c = address(storage_map_c[var_a]);\n        return address(storage_map_c[var_a]);\n    }\n    \n    /// @custom:selector    0xa654ac9e\n    /// @custom:signature   Unresolved_a654ac9e(uint256 arg0) public view\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    function Unresolved_a654ac9e(uint256 arg0) public view {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(!(((arg0 * ownere) / arg0) == ownere) | !arg0);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x11;\n    }\n    \n    /// @custom:selector    0x9c4380e7\n    /// @custom:signature   getToken(address arg0, address arg1, uint256 arg2) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    /// @param              arg1 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    /// @param              arg2 [\"uint256\", \"bytes32\", \"int256\"]\n    function getToken(address arg0, address arg1, uint256 arg2) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x60);\n        require(arg0 - (address(arg0)));\n        require(arg1 - (address(arg1)));\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        var_a = 0xa9059cbb00000000000000000000000000000000000000000000000000000000;\n        address var_b = address(arg1);\n        uint256 var_c = arg2;\n        (bool success, bytes memory ret0) = address(arg0).{ value: 0 ether }Unresolved_a9059cbb(var_b); // call\n        return ;\n        require(0x20 > ret0.length);\n        require(((var_e + 0x20) > 0xffffffffffffffff) | ((var_e + 0x20) < var_e));\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x41;\n        uint256 var_e = var_e + 0x20;\n        require(((var_e + 0x20) - var_e) < 0x20);\n        require(var_e.length - var_e.length);\n        return ;\n    }\n    \n    /// @custom:selector    0xf694fc1e\n    /// @custom:signature   Unresolved_f694fc1e(uint256 arg0, address arg1) public payable\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    /// @param              arg1 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_f694fc1e(uint256 arg0, address arg1) public payable {\n        require(msg.value);\n        require((msg.data.length + 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc) < 0x40);\n        require(arg1 - (address(arg1)));\n        require(address(arg1), \"no right to buy\");\n        address var_a = address(arg1);\n        var_b = 0xb5;\n        require(bytes1(storage_map_c[var_a]), \"no right to buy\");\n        var_a = address(arg1);\n        var_b = 0xb7;\n        storage_map_c[var_a] = 0;\n        storage_map_d[var_a] = store_e;\n        require(!(msg.sender == (address(unresolved_59e2a23a))), \"no right to buy\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x0f;\n        var_f = 0x6e6f20726967687420746f206275790000000000000000000000000000000000;\n        var_a = address(arg1);\n        var_b = 0xb4;\n        require(storage_map_c[var_a], \"in black\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x08;\n        var_f = 0x696e20626c61636b000000000000000000000000000000000000000000000000;\n        var_a = address(arg1);\n        var_b = 0xb5;\n        require(!bytes1(storage_map_c[var_a]));\n        require(!(((arg0 * sellRate) / arg0) == sellRate) | !arg0);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(address(arg1));\n        var_a = address(arg1);\n        var_b = 0xb5;\n        require(bytes1(storage_map_c[var_a]));\n        var_a = address(arg1);\n        var_b = 0xb7;\n        storage_map_c[var_a] = 0;\n        storage_map_d[var_a] = store_e;\n        var_a = address(arg1);\n        var_b = 0xb5;\n        storage_map_c[var_a] = (uint248(storage_map_c[var_a])) | 0x01;\n        var_b = 0xb9;\n        require((unresolved_c09d1e58 - storage_map_c[var_a]) > unresolved_c09d1e58);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_b = 0xb9;\n        var_b = 0xb7;\n        require((store_e - (storage_map_d[var_a])) > store_e);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(!(storage_map_c[var_a] * (store_e - (storage_map_d[var_a])) / storage_map_c[var_a] == (store_e - (storage_map_d[var_a]))) | !storage_map_c[var_a]);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_a = address(arg1);\n        var_b = 0xb7;\n        require((storage_map_c[var_a] * (store_e - (storage_map_d[var_a])) / 0x0de0b6b3a7640000) > ((storage_map_c[var_a] * (store_e - (storage_map_d[var_a])) / 0x0de0b6b3a7640000) + storage_map_c[var_a]));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n    }\n    \n    /// @custom:selector    0xf2fde38b\n    /// @custom:signature   transferOwnership(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function transferOwnership(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(address(arg0)), \"Ownable: new owner is the zero address\");\n        owner = (address(arg0)) | (uint96(owner));\n        emit OwnershipTransferred(address(owner), address(arg0));\n        return ;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }\n    \n    /// @custom:selector    0x2a55feec\n    /// @custom:signature   isBuyer(address arg0) public view returns (bool)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function isBuyer(address arg0) public view returns (bool) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0xb9;\n        address var_c = !(ownerg > storage_map_c[var_a]);\n        return !(ownerg > storage_map_c[var_a]);\n    }\n    \n    /// @custom:selector    0x9cc6cf42\n    /// @custom:signature   changeSellRate(uint256 arg0, uint256 arg1) public payable returns (uint256)\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    /// @param              arg1 [\"uint256\", \"bytes32\", \"int256\"]\n    function changeSellRate(uint256 arg0, uint256 arg1) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x40, \"Ownable: caller is not the owner\");\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        sellRate = arg0;\n        ownerk = arg1;\n        return ;\n    }\n    \n    /// @custom:selector    0x9f5c18c4\n    /// @custom:signature   Unresolved_9f5c18c4(address arg0) public view returns (bool)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_9f5c18c4(address arg0) public view returns (bool) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0xb5;\n        address var_c = !(!bytes1(storage_map_c[var_a]));\n        return !(!bytes1(storage_map_c[var_a]));\n    }\n    \n    /// @custom:selector    0xa224fc4f\n    /// @custom:signature   Unresolved_a224fc4f(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_a224fc4f(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(msg.sender - (address(ownerB)), \"no right\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x08;\n        var_d = 0x6e6f207269676874000000000000000000000000000000000000000000000000;\n        owner = (address(arg0)) | (uint96(owner));\n        emit OwnershipTransferred(address(owner), address(arg0));\n        return ;\n    }\n    \n    /// @custom:selector    0x4184b3e0\n    /// @custom:signature   Unresolved_4184b3e0(address arg0) public view returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_4184b3e0(address arg0) public view returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0xb9;\n        address var_c = storage_map_c[var_a];\n        return storage_map_c[var_a];\n    }\n    \n    /// @custom:selector    0x9c1e8f4b\n    /// @custom:signature   Unresolved_9c1e8f4b(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_9c1e8f4b(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        ownerf = (uint96(ownerf)) | (address(arg0));\n        return ;\n    }\n    \n    /// @custom:selector    0xf0b20ffe\n    /// @custom:signature   Unresolved_f0b20ffe(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_f0b20ffe(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        unresolved_59e2a23a = (uint96(unresolved_59e2a23a)) | (address(arg0));\n        return ;\n    }\n    \n    /// @custom:selector    0x6be32086\n    /// @custom:signature   Unresolved_6be32086(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_6be32086(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        ownerl = (uint96(ownerl)) | (address(arg0));\n        return ;\n    }\n    \n    /// @custom:selector    0x4a425148\n    /// @custom:signature   Unresolved_4a425148(uint256 arg0) public payable returns (uint256)\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    function Unresolved_4a425148(uint256 arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20, \"Ownable: caller is not the owner\");\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owneri = arg0;\n        return ;\n    }\n    \n    /// @custom:selector    0x46de5f84\n    /// @custom:signature   Unresolved_46de5f84(uint256 arg0, uint256 arg1) public payable returns (uint256)\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    /// @param              arg1 [\"uint256\", \"bytes32\", \"int256\"]\n    function Unresolved_46de5f84(uint256 arg0, uint256 arg1) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x40, \"Ownable: caller is not the owner\");\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        ownere = arg0;\n        unresolved_b5305bdc = arg1;\n        return ;\n    }\n    \n    /// @custom:selector    0x52f46290\n    /// @custom:signature   Unresolved_52f46290(address arg0) public view returns (bool)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_52f46290(address arg0) public view returns (bool) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0xb5;\n        address var_c = !(!bytes1(storage_map_c[var_a]));\n        return !(!bytes1(storage_map_c[var_a]));\n    }\n    \n    /// @custom:selector    0x1454aef1\n    /// @custom:signature   earnedToken(address arg0) public view returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function earnedToken(address arg0) public view returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0xb5;\n        require(bytes1(storage_map_c[var_a]));\n        uint256 var_c = 0;\n        return 0;\n        var_b = 0xb9;\n        var_b = 0xb7;\n        require((store_e - (storage_map_d[var_a])) > store_e);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_d = 0x11;\n        require(!(storage_map_c[var_a] * (store_e - (storage_map_d[var_a])) / storage_map_c[var_a] == (store_e - (storage_map_d[var_a]))) | !storage_map_c[var_a]);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_d = 0x11;\n        var_a = address(arg0);\n        var_b = 0xb7;\n        require((storage_map_c[var_a] * (store_e - (storage_map_d[var_a])) / 0x0de0b6b3a7640000) > ((storage_map_c[var_a] * (store_e - (storage_map_d[var_a])) / 0x0de0b6b3a7640000) + storage_map_c[var_a]));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_d = 0x11;\n        var_c = (storage_map_c[var_a] * (store_e - (storage_map_d[var_a])) / 0x0de0b6b3a7640000) + storage_map_c[var_a];\n        return (storage_map_c[var_a] * (store_e - (storage_map_d[var_a])) / 0x0de0b6b3a7640000) + storage_map_c[var_a];\n    }\n}",
  "optimized_sol_code": "基于反编译的代码分析，我将这个合约重构为一个清晰、专业的代币众筹/投资管理合约。以下是优化后的代码：\n\n```solidity\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title TokenVestingCrowdsale\n * @dev 代币众筹和投资管理合约\n * @notice 支持代币销售、节点管理、黑名单功能和收益分配\n * @custom:security-contact security@example.com\n */\ncontract TokenVestingCrowdsale is Initializable, OwnableUpgradeable {\n    \n    // ============ Constants ============\n    uint256 private constant DECIMAL_MULTIPLIER = 1e18;\n    uint256 private constant PHASE_DURATION = 300; // 5分钟 (300秒)\n    uint256 private constant EXTENDED_PHASE_DURATION = 900; // 15分钟 (900秒)\n    \n    // ============ State Variables ============\n    \n    // Token and pricing configuration\n    IERC20 public usdtToken;                    // USDT代币合约地址\n    uint256 public buyRate;                     // 购买汇率\n    uint256 public sellRate;                    // 出售汇率\n    uint256 public returnRate;                  // 回报率\n    uint256 public nodeRate;                    // 节点奖励率\n    \n    // Investment limits and timing\n    uint256 public minBNBAmount;                // 最小BNB投资金额\n    uint256 public maxBNBAmount;                // 最大BNB投资金额  \n    uint256 public startTime;                   // 众筹开始时间\n    uint256 public nodeAmount;                  // 节点总投资金额\n    \n    // Fee and reward configuration\n    uint256 public marketingFeeRate;            // 营销费率\n    uint256 public partnerFeeAmount;            // 合作伙伴费用金额\n    uint256 public nodeFeeAmount;               // 节点费用金额\n    uint256 public tokenMultiplier;             // 代币倍数\n    uint256 public stakingRewardRate;           // 质押奖励率\n    uint256 public platformFeeRate;             // 平台费率\n    uint256 public referralRewardRate;          // 推荐奖励率\n    uint256 public liquidityRate;               // 流动性率\n    \n    // Contract addresses for external interactions\n    address public marketingWallet;             // 营销钱包地址\n    address public defaultReferrer;             // 默认推荐人地址\n    address public blacklistManager;            // 黑名单管理员\n    address public partnerContract;             // 合作伙伴合约\n    address public nodeContract;                // 节点合约\n    address public feeCollector;                // 费用收集者\n    address public stakingContract;             // 质押合约\n    address public emergencyManager;            // 紧急管理员\n    address public superAdmin;                  // 超级管理员\n    address public buybackManager;              // 回购管理员\n    address public liquidityManager;            // 流动性管理员\n    \n    // Investment tracking\n    uint256 public totalInvestmentPool;         // 总投资池\n    uint256 public currentRewardMultiplier;     // 当前奖励倍数\n    uint256 public totalUserCount;              // 总用户数\n    \n    // User data structures\n    struct UserInfo {\n        uint256 investmentAmount;               // 投资金额\n        uint256 lastClaimTime;                  // 上次领取时间\n        uint256 totalEarned;                    // 总收益\n        bool isActive;                          // 是否激活\n        bool isBlacklisted;                     // 是否被加入黑名单\n        address referrer;                       // 推荐人\n    }\n    \n    struct NodeInfo {\n        uint256 nodeInvestment;                 // 节点投资\n        uint256 lastUpdateTime;                 // 上次更新时间\n        bool isNode;                            // 是否为节点\n    }\n    \n    // Mappings for user data\n    mapping(address => UserInfo) public userInvestments;\n    mapping(address => NodeInfo) public nodeInvestments;\n    mapping(address => bool) public hasPurchased;\n    mapping(address => bool) public isBlacklisted;\n    mapping(address => bool) public isWhitelisted;\n    mapping(uint256 => address) public userByIndex;\n    \n    // ============ Events ============\n    event InvestmentMade(address indexed user, uint256 amount, address indexed referrer);\n    event RewardsClaimed(address indexed user, uint256 amount);\n    event NodeCreated(address indexed user, uint256 amount);\n    event BlacklistUpdated(address indexed user, bool isBlacklisted);\n    event ConfigurationUpdated(string parameter, uint256 newValue);\n    event EmergencyWithdraw(address indexed token, uint256 amount);\n    event ReferralRewardPaid(address indexed referrer, address indexed referee, uint256 amount);\n    \n    // ============ Errors ============\n    error InvestmentTooSmall(uint256 provided, uint256 minimum);\n    error InvestmentTooLarge(uint256 provided, uint256 maximum);\n    error SaleNotStarted(uint256 currentTime, uint256 startTime);\n    error UserBlacklisted(address user);\n    error AlreadyPurchased(address user);\n    error InvalidPhase(uint256 currentTime, uint256 startTime);\n    error InsufficientContractBalance(uint256 requested, uint256 available);\n    error InvalidAddress(address provided);\n    error UnauthorizedAccess(address caller, address required);\n    \n    // ============ Modifiers ============\n    modifier onlyActiveUser(address user) {\n        require(userInvestments[user].isActive, \"User not active\");\n        _;\n    }\n    \n    modifier notBlacklisted(address user) {\n        if (isBlacklisted[user]) revert UserBlacklisted(user);\n        _;\n    }\n    \n    modifier onlyAuthorized() {\n        require(\n            msg.sender == owner() || \n            msg.sender == blacklistManager || \n            msg.sender == superAdmin,\n            \"Not authorized\"\n        );\n        _;\n    }\n    \n    modifier validAddress(address addr) {\n        if (addr == address(0)) revert InvalidAddress(addr);\n        _;\n    }\n    \n    // ============ Initialization ============\n    \n    /**\n     * @dev 初始化合约\n     * @notice 只能调用一次，设置基本参数\n     */\n    function initialize() external initializer {\n        __Ownable_init();\n        \n        // 设置默认参数\n        buyRate = 1000;                     // 默认购买率\n        sellRate = 900;                     // 默认出售率  \n        returnRate = 120;                   // 默认回报率 120%\n        nodeRate = 150;                     // 默认节点率 150%\n        minBNBAmount = 0.01 ether;          // 最小投资 0.01 BNB\n        maxBNBAmount = 10 ether;            // 最大投资 10 BNB\n        currentRewardMultiplier = DECIMAL_MULTIPLIER;\n    }\n    \n    // ============ Investment Functions ============\n    \n    /**\n     * @dev 用户投资函数\n     * @param referrer 推荐人地址\n     * @notice 用户可以通过发送BNB进行投资\n     */\n    function invest(address referrer) external payable notBlacklisted(msg.sender) {\n        uint256 investmentAmount = msg.value;\n        \n        // 验证投资金额\n        if (investmentAmount < minBNBAmount) {\n            revert InvestmentTooSmall(investmentAmount, minBNBAmount);\n        }\n        if (investmentAmount > maxBNBAmount) {\n            revert InvestmentTooLarge(investmentAmount, maxBNBAmount);\n        }\n        \n        // 验证销售时间和阶段\n        _validateSalePhase();\n        \n        // 验证用户状态\n        require(!hasPurchased[msg.sender], \"Already purchased\");\n        require(msg.sender == tx.origin, \"Must be EOA\");\n        \n        // 验证推荐人\n        if (referrer == address(0)) {\n            referrer = defaultReferrer;\n        }\n        \n        // 记录用户投资\n        UserInfo storage user = userInvestments[msg.sender];\n        user.investmentAmount = investmentAmount;\n        user.lastClaimTime = block.timestamp;\n        user.isActive = true;\n        user.referrer = referrer;\n        \n        hasPurchased[msg.sender] = true;\n        userByIndex[totalUserCount] = msg.sender;\n        totalUserCount++;\n        \n        // 更新总投资池\n        totalInvestmentPool += investmentAmount;\n        \n        // 分发推荐奖励\n        _processReferralReward(referrer, investmentAmount);\n        \n        emit InvestmentMade(msg.sender, investmentAmount, referrer);\n    }\n    \n    /**\n     * @dev 验证销售阶段\n     * @notice 检查当前时间是否在有效的销售阶段内\n     */\n    function _validateSalePhase() internal view {\n        if (block.timestamp < startTime) {\n            revert SaleNotStarted(block.timestamp, startTime);\n        }\n        \n        uint256 phaseEndTime = startTime + PHASE_DURATION;\n        uint256 extendedEndTime = startTime + EXTENDED_PHASE_DURATION;\n        \n        // 检查是否在有效阶段内\n        require(\n            block.timestamp <= extendedEndTime,\n            \"Sale phase ended\"\n        );\n        \n        // 特殊阶段验证逻辑\n        if (block.timestamp > phaseEndTime && block.timestamp <= extendedEndTime) {\n            // 扩展阶段的特殊验证\n            _validateExtendedPhase();\n        }\n    }\n    \n    /**\n     * @dev 验证扩展阶段\n     * @notice 在扩展销售阶段进行额外验证\n     */\n    function _validateExtendedPhase() internal view {\n        // 扩展阶段可能需要特殊的验证逻辑\n        // 例如：检查特定条件、限制投资金额等\n        require(totalInvestmentPool > 0, \"No investments in extended phase\");\n    }\n    \n    /**\n     * @dev 处理推荐奖励\n     * @param referrer 推荐人地址\n     * @param investmentAmount 投资金额\n     */\n    function _processReferralReward(address referrer, uint256 investmentAmount) internal {\n        if (referrer != address(0) && referrer != msg.sender) {\n            uint256 referralReward = (investmentAmount * referralRewardRate) / 10000;\n            \n            // 发送推荐奖励\n            if (address(this).balance >= referralReward) {\n                payable(referrer).transfer(referralReward);\n                emit ReferralRewardPaid(referrer, msg.sender, referralReward);\n            }\n        }\n    }\n    \n    // ============ Reward and Claiming Functions ============\n    \n    /**\n     * @dev 计算用户可领取的收益\n     * @param user 用户地址\n     * @return 可领取的收益金额\n     */\n    function calculateEarnings(address user) external view returns (uint256) {\n        UserInfo memory userInfo = userInvestments[user];\n        \n        if (!userInfo.isActive || userInfo.investmentAmount == 0) {\n            return 0;\n        }\n        \n        uint256 timePassed = block.timestamp - userInfo.lastClaimTime;\n        uint256 baseReward = (userInfo.investmentAmount * timePassed * currentRewardMultiplier) / DECIMAL_MULTIPLIER;\n        \n        return baseReward;\n    }\n    \n    /**\n     * @dev 用户领取收益\n     * @notice 用户可以领取基于时间的收益\n     */\n    function claimRewards() external onlyActiveUser(msg.sender) notBlacklisted(msg.sender) {\n        uint256 earnings = this.calculateEarnings(msg.sender);\n        require(earnings > 0, \"No earnings to claim\");\n        \n        UserInfo storage user = userInvestments[msg.sender];\n        user.lastClaimTime = block.timestamp;\n        user.totalEarned += earnings;\n        \n        // 发送收益\n        require(address(this).balance >= earnings, \"Insufficient contract balance\");\n        payable(msg.sender).transfer(earnings);\n        \n        emit RewardsClaimed(msg.sender, earnings);\n    }\n    \n    // ============ Node Management Functions ============\n    \n    /**\n     * @dev 创建节点投资\n     * @param user 节点用户地址\n     * @notice 只有授权用户可以创建节点\n     */\n    function createNode(address user) external onlyAuthorized validAddress(user) {\n        NodeInfo storage nodeInfo = nodeInvestments[user];\n        UserInfo storage userInfo = userInvestments[user];\n        \n        require(userInfo.isActive, \"User must be active investor\");\n        require(!nodeInfo.isNode, \"Already a node\");\n        \n        nodeInfo.isNode = true;\n        nodeInfo.nodeInvestment = userInfo.investmentAmount;\n        nodeInfo.lastUpdateTime = block.timestamp;\n        \n        nodeAmount += userInfo.investmentAmount;\n        \n        emit NodeCreated(user, userInfo.investmentAmount);\n    }\n    \n    /**\n     * @dev 移除节点\n     * @param user 节点用户地址\n     */\n    function removeNode(address user) external onlyAuthorized {\n        NodeInfo storage nodeInfo = nodeInvestments[user];\n        require(nodeInfo.isNode, \"Not a node\");\n        \n        nodeAmount -= nodeInfo.nodeInvestment;\n        \n        nodeInfo.isNode = false;\n        nodeInfo.nodeInvestment = 0;\n        nodeInfo.lastUpdateTime = block.timestamp;\n    }\n    \n    // ============ Blacklist Management ============\n    \n    /**\n     * @dev 添加用户到黑名单\n     * @param user 用户地址\n     */\n    function addToBlacklist(address user) external onlyAuthorized validAddress(user) {\n        isBlacklisted[user] = true;\n        userInvestments[user].isBlacklisted = true;\n        \n        emit BlacklistUpdated(user, true);\n    }\n    \n    /**\n     * @dev 从黑名单移除用户\n     * @param user 用户地址\n     */\n    function removeFromBlacklist(address user) external onlyAuthorized validAddress(user) {\n        isBlacklisted[user] = false;\n        userInvestments[user].isBlacklisted = false;\n        \n        emit BlacklistUpdated(user, false);\n    }\n    \n    // ============ Admin Configuration Functions ============\n    \n    /**\n     * @dev 设置USDT代币地",
  "decompiled_abi": "[\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_13caa51e\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_1904d164\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_1cbe0fe2\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_1d1d630c\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"arg1\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_2c97e90c\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_4184b3e0\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_46de5f84\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"arg1\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_4a425148\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_4b8cee65\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_52d766be\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"arg1\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"arg2\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"arg3\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"arg4\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_52f46290\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_59e2a23a\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_6be32086\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_6dfd480b\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_72cd9cd7\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_87e7e7a4\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_8881e443\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_8e047f0f\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_90171e59\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_90c6bd11\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_971cca57\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_9c1e8f4b\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_9f5c18c4\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_a224fc4f\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_a654ac9e\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_b5305bdc\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_babb603b\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_be3c5152\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_c09d1e58\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_ca8b444e\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_cbf6d902\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_cc6ddc9a\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_db66170a\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_dcb49479\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_de41768c\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_e17b2e29\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_e6363cb1\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"arg1\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_f006ead6\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_f0b20ffe\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_f127864c\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_f694fc1e\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"arg1\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_f6afce5f\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_f83212af\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_f8560a28\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_fb9e5eca\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_fcfad9ce\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"addBlackList\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"buyRate\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"buyerUserInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"changeSellRate\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"arg1\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"changeStartTime\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"defaultAddress\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"earnedToken\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getBlockTime\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getBuyerAtIndex\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getToken\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"arg1\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"arg2\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"indexUser\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"initialize\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"intro\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isBuyer\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"marktingAddress\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"minBNBAmount\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"nodeRate\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"node_amount\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"owner\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"ownerB\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"removeBlackList\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"renounceOwnership\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"returnRate\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"sellRate\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"startTime\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"takeToken\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"transferOwnership\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"updateAllAverage\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"usdtAddress\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"OwnershipTransferred\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\",\n        \"indexed\": false\n      },\n      {\n        \"name\": \"arg1\",\n        \"type\": \"address\",\n        \"indexed\": false\n      }\n    ],\n    \"anonymous\": false\n  }\n]",
  "decompiled_at": "2025-07-06T00:16:49.318690",
  "optimized_sol_file": "log/decompiled_559bee76ec_20250706_002128.sol",
  "raw_sol_file": "log/raw_decompiled_559bee76ec_20250706_002128.sol",
  "decompiled_abi_file": "log/decompiled_abi_559bee76ec_20250706_002128.json"
}