{
  "address": "0xf5f989c685e4435dd9402b28c2a30cab1e463fd1",
  "has_source_code": false,
  "source_code": "基于反编译代码的分析，这是一个具有复杂流动性池管理和推荐机制的DeFi合约。以下是优化重构后的代码：\n\n```solidity\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ninterface IUniswapV2Router {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n}\n\ninterface IUniswapV2Factory {\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n}\n\ninterface IWETH {\n    function deposit() external payable;\n    function withdraw(uint wad) external;\n    function transfer(address to, uint256 value) external returns (bool);\n}\n\n/**\n * @title LiquidityMiningPool\n * @notice 具有推荐机制的流动性挖矿合约\n * @dev 支持BNB投资、推荐奖励、流动性管理等功能\n */\ncontract LiquidityMiningPool is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n    using Address for address;\n\n    // ============ 状态变量 ============\n    \n    // 基础配置\n    uint256 public buyRate;                    // 购买费率 (基点，10000 = 100%)\n    uint256 public minBNBAmount;               // 最小BNB投资金额\n    uint256 public maxBNBAmount;               // 最大BNB投资金额\n    uint256 public currentIndex;               // 当前用户索引\n    uint256 public getTimes;                   // 获取时间戳\n    uint256 public totalPoolValue;             // 总池价值\n    uint256 public totalTokenSupply;           // 总代币供应量\n    uint256 public timeInterval;               // 时间间隔\n    uint256 public totalBNBCollected;          // 总收集的BNB数量\n    uint256 public averageUpdateRate;          // 平均更新率\n    \n    // 地址配置\n    address public parAddress;                 // 配对地址(代币地址)\n    address public defaultAddress;             // 默认地址\n    address public topAddress;                 // 顶级地址\n    address public projectAddress;             // 项目地址\n    address public ownerB;                     // 备用owner\n    address public liquidityManager;           // 流动性管理员\n    address public treasuryWallet;             // 资金管理员\n    \n    // Uniswap相关\n    IUniswapV2Router public uniswapRouter;\n    \n    // 初始化状态\n    bytes32 private initializationState;\n    \n    // ============ 用户数据结构 ============\n    \n    struct UserInfo {\n        uint256 investment;                    // 用户投资金额\n        uint256 joinTime;                     // 加入时间\n        uint256 earnedAmount;                 // 已赚取金额\n        uint256 lpTokenAmount;                // LP代币数量\n        uint256 userIndex;                    // 用户索引\n        address referrer;                     // 推荐人\n        bool isBlacklisted;                   // 是否被拉黑\n        bool hasLPTokens;                     // 是否有LP代币\n    }\n    \n    // ============ 存储映射 ============\n    \n    mapping(address => UserInfo) public userInfo;           // 用户信息\n    mapping(uint256 => address) public indexToUser;         // 索引到用户地址\n    mapping(address => bool) public isRegistered;           // 是否已注册\n    mapping(address => uint256) public userTokenBalance;    // 用户代币余额\n    mapping(address => bool) public authorizedCallers;      // 授权调用者\n    \n    // ============ 事件定义 ============\n    \n    event BindIntro(address indexed referrer, address indexed user, uint256 timestamp);\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    event Investment(address indexed user, uint256 amount, uint256 timestamp);\n    event Withdrawal(address indexed user, uint256 amount, uint256 timestamp);\n    event LiquidityRemoved(address indexed user, uint256 lpAmount, uint256 bnbAmount);\n    event RewardClaimed(address indexed user, uint256 amount);\n    event ParameterUpdated(string parameter, uint256 oldValue, uint256 newValue);\n    \n    // ============ 错误定义 ============\n    \n    error Unauthorized();\n    error InvalidAmount();\n    error UserBlacklisted();\n    error InsufficientBalance();\n    error TransferFailed();\n    error AlreadyInitialized();\n    error NotInitialized();\n    error InvalidAddress();\n    error ExceedsMaximum();\n    error BelowMinimum();\n    \n    // ============ 修饰符 ============\n    \n    modifier onlyAuthorized() {\n        if (msg.sender != owner() && !authorizedCallers[msg.sender]) {\n            revert Unauthorized();\n        }\n        _;\n    }\n    \n    modifier notBlacklisted(address user) {\n        if (userInfo[user].isBlacklisted) {\n            revert UserBlacklisted();\n        }\n        _;\n    }\n    \n    modifier validAddress(address addr) {\n        if (addr == address(0)) {\n            revert InvalidAddress();\n        }\n        _;\n    }\n    \n    // ============ 构造函数和初始化 ============\n    \n    constructor() {\n        // 构造函数保持简单，主要逻辑在initialize中\n    }\n    \n    /**\n     * @notice 初始化合约\n     * @dev 只能调用一次\n     */\n    function initialize() external payable {\n        if (bytes1(initializationState) == 0x01) {\n            revert AlreadyInitialized();\n        }\n        \n        initializationState = 0x01;\n        \n        // 设置默认值\n        buyRate = 500; // 5%\n        minBNBAmount = 0.01 ether;\n        maxBNBAmount = 10 ether;\n        timeInterval = 86400; // 24小时\n        currentIndex = 1;\n        \n        _transferOwnership(msg.sender);\n    }\n    \n    // ============ 核心业务函数 ============\n    \n    /**\n     * @notice 用户投资BNB\n     * @param user 投资用户地址\n     */\n    function investBNB(address user) \n        external \n        payable \n        nonReentrant \n        notBlacklisted(user)\n        validAddress(user)\n    {\n        if (msg.value < minBNBAmount) {\n            revert BelowMinimum();\n        }\n        \n        if (msg.value > maxBNBAmount) {\n            revert ExceedsMaximum();\n        }\n        \n        if (msg.sender != user && msg.sender != owner()) {\n            revert Unauthorized();\n        }\n        \n        UserInfo storage userData = userInfo[user];\n        \n        // 首次投资时注册用户\n        if (!isRegistered[user]) {\n            _registerUser(user);\n        }\n        \n        // 更新投资金额\n        userData.investment += msg.value;\n        userData.joinTime = block.timestamp;\n        \n        // 更新总收集金额\n        totalBNBCollected += msg.value;\n        \n        emit Investment(user, msg.value, block.timestamp);\n    }\n    \n    /**\n     * @notice 绑定推荐关系\n     * @param user 用户地址\n     * @param referrer 推荐人地址\n     */\n    function bindReferrer(address user, address referrer) \n        external \n        onlyAuthorized \n        validAddress(user) \n        validAddress(referrer)\n    {\n        if (user == referrer) {\n            revert InvalidAddress();\n        }\n        \n        if (userInfo[user].referrer != address(0)) {\n            return; // 已有推荐人\n        }\n        \n        userInfo[user].referrer = referrer;\n        \n        emit BindIntro(referrer, user, block.timestamp);\n    }\n    \n    /**\n     * @notice 计算用户可提取的收益\n     * @param user 用户地址\n     * @return 可提取的收益数量\n     */\n    function calculateEarnings(address user) public view returns (uint256) {\n        UserInfo memory userData = userInfo[user];\n        \n        if (userData.isBlacklisted || userData.investment == 0) {\n            return 0;\n        }\n        \n        // 计算基于时间和投资额的收益\n        uint256 timePassed = block.timestamp - userData.joinTime;\n        uint256 timeUnits = timePassed / timeInterval;\n        \n        if (timeUnits == 0) {\n            return 0;\n        }\n        \n        // 基础收益 = 投资额 * 时间单位 * 费率 / 10000\n        uint256 baseEarnings = (userData.investment * timeUnits * buyRate) / 10000;\n        \n        return baseEarnings + userData.earnedAmount;\n    }\n    \n    /**\n     * @notice 用户提取收益\n     * @param user 用户地址\n     */\n    function claimRewards(address user) \n        external \n        nonReentrant \n        notBlacklisted(user) \n        returns (uint256)\n    {\n        if (msg.sender != user && msg.sender != owner()) {\n            revert Unauthorized();\n        }\n        \n        uint256 earnings = calculateEarnings(user);\n        if (earnings == 0) {\n            revert InvalidAmount();\n        }\n        \n        if (address(this).balance < earnings) {\n            revert InsufficientBalance();\n        }\n        \n        // 更新用户数据\n        userInfo[user].earnedAmount = 0;\n        userInfo[user].joinTime = block.timestamp;\n        \n        // 转账\n        (bool success, ) = payable(user).call{value: earnings}(\"\");\n        if (!success) {\n            revert TransferFailed();\n        }\n        \n        emit RewardClaimed(user, earnings);\n        return earnings;\n    }\n    \n    /**\n     * @notice 移除流动性\n     * @param user 用户地址\n     */\n    function removeLiquidity(address user) \n        external \n        onlyAuthorized \n        nonReentrant \n        returns (uint256)\n    {\n        UserInfo storage userData = userInfo[user];\n        \n        if (!userData.hasLPTokens) {\n            revert InvalidAmount();\n        }\n        \n        if (tx.origin != user) {\n            revert Unauthorized();\n        }\n        \n        uint256 lpAmount = userData.lpTokenAmount;\n        if (lpAmount == 0) {\n            return 0;\n        }\n        \n        // 通过Uniswap移除流动性\n        address weth = uniswapRouter.WETH();\n        \n        // 批准路由器使用LP代币\n        IERC20(parAddress).safeApprove(address(uniswapRouter), lpAmount);\n        \n        // 移除流动性\n        (uint256 tokenAmount, uint256 ethAmount) = uniswapRouter.removeLiquidityETH(\n            parAddress,\n            lpAmount,\n            0, // 接受任何数量的代币\n            0, // 接受任何数量的ETH\n            address(this),\n            block.timestamp + 3600\n        );\n        \n        // 提取WETH为ETH\n        IWETH(weth).withdraw(ethAmount);\n        \n        // 转账给用户\n        (bool success, ) = payable(user).call{value: ethAmount}(\"\");\n        if (!success) {\n            revert TransferFailed();\n        }\n        \n        // 更新用户数据\n        userData.lpTokenAmount = 0;\n        userData.hasLPTokens = false;\n        \n        // 如果用户没有其他资产，从索引中移除\n        if (userData.investment == 0) {\n            _unregisterUser(user);\n        }\n        \n        emit LiquidityRemoved(user, lpAmount, ethAmount);\n        return ethAmount;\n    }\n    \n    // ============ 管理员函数 ============\n    \n    /**\n     * @notice 设置购买费率\n     * @param newRate 新费率 (基点)\n     */\n    function setBuyRate(uint256 newRate) external onlyOwner {\n        emit ParameterUpdated(\"buyRate\", buyRate, newRate);\n        buyRate = newRate;\n    }\n    \n    /**\n     * @notice 设置最小和最大BNB投资金额\n     * @param minAmount 最小金额\n     * @param maxAmount 最大金额\n     */\n    function setInvestmentLimits(uint256 minAmount, uint256 maxAmount) external onlyOwner {\n        if (minAmount >= maxAmount) {\n            revert InvalidAmount();\n        }\n        \n        minBNBAmount = minAmount;\n        maxBNBAmount = maxAmount;\n    }\n    \n    /**\n     * @notice 设置Uniswap路由器地址\n     * @param router 路由器地址\n     */\n    function setUniswapRouter(address router) external onlyOwner validAddress(router) {\n        uniswapRouter = IUniswapV2Router(router);\n    }\n    \n    /**\n     * @notice 设置项目地址\n     * @param projectAddr 项目地址\n     */\n    function setProjectAddress(address projectAddr) external onlyOwner validAddress(projectAddr) {\n        projectAddress = projectAddr;\n    }\n    \n    /**\n     * @notice 设置配对地址\n     * @param pairAddr 配对地址\n     */\n    function setPairAddress(address pairAddr) external onlyOwner validAddress(pairAddr) {\n        parAddress = pairAddr;\n    }\n    \n    /**\n     * @notice 设置备用owner\n     * @param newOwnerB 新的备用owner地址\n     */\n    function setOwnerB(address newOwnerB) external onlyOwner validAddress(newOwnerB) {\n        ownerB = newOwnerB;\n    }\n    \n    /**\n     * @notice 设置流动性管理员\n     * @param manager 管理员地址\n     */\n    function setLiquidityManager(address manager) external onlyOwner validAddress(manager) {\n        liquidityManager = manager;\n    }\n    \n    /**\n     * @notice 设置资金管理员\n     * @param treasury 资金管理员地址\n     */\n    function setTreasuryWallet(address treasury) external onlyOwner validAddress(treasury) {\n        treasuryWallet = treasury;\n    }\n    \n    /**\n     * @notice 添加/移除授权调用者\n     * @param caller",
  "abi": "Contract source code not verified",
  "contract_name": "Unknown",
  "compiler_version": null,
  "optimization_used": null,
  "runs": null,
  "constructor_arguments": null,
  "evm_version": null,
  "library": null,
  "license_type": null,
  "proxy": "0",
  "implementation": "",
  "bytecode": "0x608080604052600436101561001d575b50361561001b57600080fd5b005b600090813560e01c9081628a14fc1461212257508062c1e46a146121045780630ede9262146120db5780631454aef1146120b7578063191437a1146120755780631ab6ab0414611fb15780631d1d630c14611f8857806322a85ee314611f485780632345fda914611f1f5780632353922414611ef657806326987b6014611ed85780632a55feec14611e965780632d718b3a14611e565780633069a92014611e33578063306c1f0c14611d9f57806330993b2d14611d7657806334cbe2a414611d14578063357f1a7e14611cf657806335b0320314610d645780633c39916914611b945780633cf96af114611b6b5780634184b3e014611b4057806344af2e0e14611b1d578063489082df14611a51578063496b370e14611a1e5780635c101693146119f557806369a83d49146119d75780636dfd480b1461194b578063715018a6146118ee5780637c0d24f11461180e5780637ff3a99e14610da05780638086839814610d645780638129fc1c14610b8457806385f236fc14610b5557806389da7deb14610b155780638d232b9714610ad55780638da5cb5b14610aac5780638e047f0f14610a5457806391bbec1a14610a34578063931d93fc146109ce5780639dd5c01a146108b15780639f5c18c414610876578063a20793fc14610836578063a224fc4f146107ff578063a870ff6a146107dc578063aeceb6f0146107be578063affd5db914610778578063b8738d3a1461075a578063c09d1e581461073c578063cc03d7611461070e578063d59f62a8146106ef578063e17b2e291461069e578063e5d6d6ef14610584578063e6363cb11461053a578063e8082858146104fa578063e9ab77e5146104d7578063ee9907a41461049a578063f2fde38b14610409578063f4b35538146103db578063f68c98e0146103bd578063fc37987b1461039f578063fcfad9ce146103395763fedc2fb90361000f57346103365760203660031901126103365761032c90610318906001906040906001600160a01b0361030861213e565b168152607a602052200154613205565b60405192839260408452604084019061220c565b9060208301520390f35b80fd5b50346103365760203660031901126103365761035361213e565b61035b612249565b6001600160a01b031661036d816130eb565b5060655490825260786020526001604083200155607a6020526103996003604083200154606654612381565b60665580f35b50346103365780600319360112610336576020606d54604051908152f35b50346103365780600319360112610336576020606954604051908152f35b50346103365760203660031901126103365760206103ff6103fa61213e565b6131c1565b6040519015158152f35b50346103365760203660031901126103365761042361213e565b61042b612249565b6001600160a01b0381161561044657610443906122a1565b80f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b5034610336576020366003190112610336576020906001906040906001600160a01b036104c561213e565b168152607a8452200154604051908152f35b503461033657806003193601126103365760206104f26129d3565b604051908152f35b50346103365760203660031901126103365761051461213e565b61051c612249565b60018060a01b03166001600160601b0360a01b607254161760725580f35b50346103365760403660031901126103365761055461213e565b61055c612249565b6001600160a01b03168152607860205260408120805461057f9060243590612381565b905580f35b508060031936011261033657607d546001600160a01b03908116330361066b578060046020849360755416604051928380926315ab88c960e31b82525afa908115610660578391610632575b5016803b1561062f578160049160405192838092630d0e30db60e41b825234905af1801561062457610610575b5061060a34606b54612381565b606b5580f35b61061990612154565b6103365780386105fd565b6040513d84823e3d90fd5b50fd5b610653915060203d8111610659575b61064b81836121d2565b8101906123c0565b386105d0565b503d610641565b6040513d85823e3d90fd5b60405162461bcd60e51b815260206004820152600b60248201526a1ddbdc9b99c81c9a59da1d60aa1b6044820152606490fd5b5034610336576020366003190112610336576060906040906001600160a01b036106c661213e565b168152607860205220805490600260018201549101549060405192835260208301526040820152f35b50346103365760203660031901126103365760206104f2600435613356565b503461033657806003193601126103365761073460018060a01b03606f5416331461234a565b610443612661565b50346103365780600319360112610336576020606654604051908152f35b50346103365780600319360112610336576020606e54604051908152f35b5034610336578060031936011261033657610791612249565b80808080478181156107b5575b3390f1156107a95780f35b604051903d90823e3d90fd5b506108fc61079e565b50346103365780600319360112610336576020606b54604051908152f35b5034610336576020366003190112610336576107f6612249565b600435606e5580f35b50346103365760203660031901126103365761044361081c61213e565b61083160018060a01b0360745416331461234a565b6122a1565b50346103365760203660031901126103365761085061213e565b610858612249565b60018060a01b03166001600160601b0360a01b607d541617607d5580f35b50346103365760203660031901126103365760206103ff6001600160a01b0361089d61213e565b166000526077602052604060002054151590565b5034610336576040366003190112610336576108cb61213e565b6001600160a01b0390602435828116908181036109c9576108f184606f5416331461234a565b818552607a602052604085206040516109098161217e565b815481526001820154602082015260028201546040820152608060046003840154938460608501520154910152833b1591826109bf575b50816109b5575b50610950578380f35b827f921105ce8c23243f7e813e7c56956059311e7a51546321aa7ce56c69d6061882936060931691828652607960205260408620906001600160601b0360a01b8254161790556073541690604051918252602082015260016040820152a13880808380f35b9050151538610947565b3b15915038610940565b600080fd5b50346103365760203660031901126103365760a0906040906001600160a01b036109f661213e565b168152607a60205220805490600181015490600281015460046003830154920154926040519485526020850152604084015260608301526080820152f35b50346103365760203660031901126103365761032c610318600435613205565b503461033657602036600319011261033657610a6e61213e565b610a7781612f94565b610a7f612249565b6001600160a01b0316610a918161307d565b508152607a60205261039960036040832001546066546123a4565b50346103365780600319360112610336576033546040516001600160a01b039091168152602090f35b503461033657602036600319011261033657610aef61213e565b610af7612249565b60018060a01b03166001600160601b0360a01b607554161760755580f35b503461033657602036600319011261033657610443610b3261213e565b610b3b81612f94565b610b5060018060a01b0360705416331461234a565b6129ff565b50346103365760203660031901126103365760ff60406020926004358152607c84522054166040519015158152f35b5034610336578060031936011261033657805460ff8160081c161590818092610d57575b8015610d40575b15610ce45760ff198116600117835581610cd3575b50610bde60ff835460081c16610bd9816122ea565b6122ea565b610be7336122a1565b7310ed43c718714eb63d5aa57b78b54704e256024e73c257fccd324fcc095648512392cc9b79f6988e9f6001600160601b0360a01b908082607154161760715581607354161760735580607454166074557363f5faa4bc78f3dcd0f328387a6d0729f8b584d0816072541617607255607554161760755567016345785d8a0000606755678ac7230489e8000060685563680a27c0606c556001606a55601460695561014a606d5562015180606e55610c9c5780f35b61ff001981541681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b61ffff191661010117825538610bc4565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158015610baf5750600160ff821614610baf565b50600160ff821610610ba8565b5034610336576020366003190112610336576020906001600160a01b039060409082610d8e61213e565b16815260798452205416604051908152f35b50602036600319011261033657610db561213e565b90610dbf82612f94565b610dd460018060a01b03606f5416331461234a565b813b6117db576001600160a01b03821632036117a65760018060a01b0382168152607a602052604081209160038301610e0e348254612381565b8091556067543410611777576068541061174757600483019283541561169c575b50610e3c34606654612381565b606655610e5b60033404610e5281606b54612381565b606b55346123a4565b60011c926004602060018060a01b0360755416604051928380926315ab88c960e31b82525afa90811561142657849161167d575b506001600160a01b0316803b15611431578360049160405192838092630d0e30db60e41b825234905af180156114265761166a575b5060009360405191610ed58361219a565b6002835260403660208501376075546040516315ab88c960e31b81529387916001600160a01b0316602086600481845afa801561066057602496849161164b575b50610f208361298c565b6001600160a01b039182169052606f546020911680610f3e856129af565b526040516370a0823160e01b815230600482015297889182905afa958615610660578396611617575b506040516315ab88c960e31b815290602082600481845afa91821561142657610fce92602092889287926115f8575b5060405163095ea7b360e01b81526001600160a01b039091166004820152602481019290925290928391908290879082906044820190565b03926001600160a01b03165af18015610660576115d9575b506075546001600160a01b031690813b1561142257829161103191604051948580948193635c11d79560e01b83528a600484015283602484015260a0604484015260a483019061220c565b30606483015242608483015203925af180156115ce576115bb575b50606f546040516370a0823160e01b81523060048201526001600160a01b039091169390602081602481885afa9081156115b057879897969791611577575b5061109b6110d6926020926123a4565b60755460405163095ea7b360e01b81526001600160a01b03909116600482015260248101829052909590928391908290899082906044820190565b03925af180156114de57611558575b506075546040516315ab88c960e31b8152906001600160a01b0316602082600481845afa91821561148f576111589260209286928992611539575b5060405163095ea7b360e01b81526001600160a01b039091166004820152602481019290925290928391908290899082906044820190565b03926001600160a01b03165af180156114de5761150a575b506075546040516315ab88c960e31b8152936001600160a01b039091169190602085600481865afa92831561148f57869586946114e9575b50606f5460405162e8e33760e81b81526001600160a01b0395861660048201529416602485015260448401859052606484018290526084840186905260a484018690523060c48501524260e485015260609687918591610104918391905af180156114de5785928694879261149e575b50611224828254612381565b90556070546001600160a01b0316803b1561149a576040516340c10f1960e01b81526001600160a01b038a166004820152602481019290925286908290604490829084905af190811561148f578691611477575b505061128d92611287916123a4565b926123a4565b9080611454575b508015908115611366575b505050816112cd7f02eaa22fbb9062b92c96f349b0e3103065eb20fcdd0de3ea47072c85492cdab0936131c1565b156112f3575b604080516001600160a01b0390921682524260208301523490820152a180f35b607380546001600160a01b03838116808852607960209081526040808a2080546001600160a01b031916958516959095179094559354835192168252928101929092526002908201527f921105ce8c23243f7e813e7c56956059311e7a51546321aa7ce56c69d6061882908390a16112d3565b6075546040516315ab88c960e31b815290602090829060049082906001600160a01b03165afa908115611426578491611435575b506001600160a01b031691823b1561143157838093602460405180968193632e1a7d4d60e01b83528760048401525af192831561142657849361140a575b506072548392839290916001600160a01b0316908390611401575bf1156106245782388061129f565b506108fc6113f3565b61141690939193612154565b611422578291386113d8565b8280fd5b6040513d86823e3d90fd5b8380fd5b61144e915060203d6020116106595761064b81836121d2565b3861139a565b606f5460725461147192916001600160a01b0391821691166123df565b38611294565b61148090612154565b61148b578438611278565b8480fd5b6040513d88823e3d90fd5b8680fd5b93509350508582813d83116114d7575b6114b881836121d2565b8101031261148b57815192604060208401519301519392939038611218565b503d6114ae565b6040513d87823e3d90fd5b61150391945060203d6020116106595761064b81836121d2565b92386111a8565b61152b9060203d602011611532575b61152381836121d2565b81019061254b565b5038611170565b503d611519565b611551919250843d86116106595761064b81836121d2565b9038611120565b6115709060203d6020116115325761152381836121d2565b50386110e5565b919550506020813d6020116115a8575b81611594602093836121d2565b810103126109c9575186949061109b61108b565b3d9150611587565b6040513d8a823e3d90fd5b6115c790969196612154565b943861104c565b6040513d89823e3d90fd5b6115f19060203d6020116115325761152381836121d2565b5038610fe6565b611610919250843d86116106595761064b81836121d2565b9038610f96565b9095506020813d602011611643575b81611633602093836121d2565b8101031261142257519438610f67565b3d9150611626565b611664915060203d6020116106595761064b81836121d2565b38610f16565b61167690939193612154565b9138610ec4565b611696915060203d6020116106595761064b81836121d2565b38610e8f565b606a54600181116116ee575b50606a8054600192909201829055908352607b6020526040832080546001600160a01b0319166001600160a01b038416179055546116e5906123b1565b606a5538610e2f565b6000198101818111611733576000908152607b6020908152604091829020546001600160a01b03168652607a90528420600281019190915560019081015482556116a8565b634e487b7160e01b85526011600452602485fd5b60405162461bcd60e51b8152602060048201526008602482015267746f6f206d6f726560c01b6044820152606490fd5b60405162461bcd60e51b8152602060048201526007602482015266746f206c65737360c81b6044820152606490fd5b60405162461bcd60e51b815260206004820152600d60248201526c6d75737420757365722062757960981b6044820152606490fd5b60405162461bcd60e51b815260206004820152600b60248201526a63616e206e6f742062757960a81b6044820152606490fd5b5034610336576020806003193601126118ea5761182961213e565b82906040519360c0850185811067ffffffffffffffff8211176118d6576040526005808652929160a03686880137915b83811061187757604051858152806118738188018961220c565b0390f35b6001600160a01b0392831682526079855260408220548316926118b891908490811580156118c9575b6118bd575b6118af838a6129bf565b911690526123b1565b611859565b607154811691506118a5565b50818160735416146118a0565b634e487b7160e01b82526041600452602482fd5b5080fd5b5034610336578060031936011261033657611907612249565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346103365760203660031901126103365761196561213e565b61196d612249565b6001600160a01b03168015611992576001600160601b0360a01b607454161760745580f35b60405162461bcd60e51b815260206004820152601760248201527f63616e206e6f74206265207a65726f20616464726573730000000000000000006044820152606490fd5b50346103365780600319360112610336576020606c54604051908152f35b50346103365780600319360112610336576071546040516001600160a01b039091168152602090f35b5034610336576020366003190112610336576020906004358152607b8252604060018060a01b0391205416604051908152f35b503461033657602036600319011261033657611a6b61213e565b611a7481612f94565b606f546001600160a01b0390611a8d908216331461234a565b82911691611aa8836000526077602052604060002054151590565b611aed5782602093611abf575b5050604051908152f35b81526078835260408120805492508215611ab557600291815501611ae4828254612381565b90553880611ab5565b60405162461bcd60e51b8152602060048201526008602482015267696e20626c61636b60c01b6044820152606490fd5b503461033657602036600319011261033657611b37612249565b600435606d5580f35b5034610336576020366003190112610336576020906003906040906001600160a01b036104c561213e565b50346103365780600319360112610336576072546040516001600160a01b039091168152602090f35b50346103365760403660031901126103365760043567ffffffffffffffff8082116114225736602383011215611422578160040135611bd2816121f4565b92611be060405194856121d2565b81845260209160248386019160051b8301019136831161149a57602401905b828210611cd357505050602435918211611431573660238301121561143157816004013591611c2d836121f4565b92611c3b60405194856121d2565b80845260248385019160051b8301019136831161149a576024849101915b838310611cc35750505050611c6c612249565b835b8351811015611cbf57611cba906001600160a01b03611c8d82876129bf565b5116611c9982866129bf565b51908752607a8452611cb360046040892001918254612381565b90556123b1565b611c6e565b8480f35b8235815291810191849101611c59565b81356001600160a01b0381168103611cf2578152908301908301611bff565b8780fd5b50346103365780600319360112610336576020606754604051908152f35b503461033657602036600319011261033657600435611d31612249565b8015611d3d5760695580f35b60405162461bcd60e51b815260206004820152601160248201527006d757374206772656174207468616e203607c1b6044820152606490fd5b50346103365780600319360112610336576074546040516001600160a01b039091168152602090f35b503461033657602036600319011261033657600435611dc960018060a01b03606f5416331461234a565b6066549081151580611e2a575b611dde578280f35b670de0b6b3a764000090818102918183041490151715611e1657611e0d91611e0591612641565b606554612381565b60655538808280f35b634e487b7160e01b83526011600452602483fd5b50801515611dd6565b503461033657602036600319011261033657611e4d612249565b600435606b5580f35b503461033657602036600319011261033657611e7061213e565b611e78612249565b60018060a01b03166001600160601b0360a01b606f541617606f5580f35b5034610336576020366003190112610336576020906003906040906001600160a01b03611ec161213e565b168152607a84522001546067541115604051908152f35b50346103365780600319360112610336576020606a54604051908152f35b50346103365780600319360112610336576073546040516001600160a01b039091168152602090f35b5034610336578060031936011261033657606f546040516001600160a01b039091168152602090f35b503461033657602036600319011261033657611f6261213e565b611f6a612249565b60018060a01b03166001600160601b0360a01b607054161760705580f35b503461033657604036600319011261033657611fa2612249565b60043560675560243560685580f35b5034610336576020806003193601126118ea57611fcc612249565b6075546040516315ab88c960e31b815283916001600160a01b039084908390600490829085165afa80156106605784928491612058575b5060405163a9059cbb60e01b815233600480830191909152356024820152938492604492849291165af180156106605761203b578280f35b8161205192903d106115325761152381836121d2565b5038808280f35b61206f9150833d85116106595761064b81836121d2565b38612003565b5034610336576020366003190112610336576004356000908152607b60209081526040909120546001600160a01b03166040516001600160a01b039091168152f35b50346103365760203660031901126103365760206104f26120d661213e565b612fcc565b50346103365780600319360112610336576070546040516001600160a01b039091168152602090f35b50346103365780600319360112610336576020606854604051908152f35b9050346118ea57816003193601126118ea576020906065548152f35b600435906001600160a01b03821682036109c957565b67ffffffffffffffff811161216857604052565b634e487b7160e01b600052604160045260246000fd5b60a0810190811067ffffffffffffffff82111761216857604052565b6060810190811067ffffffffffffffff82111761216857604052565b6040810190811067ffffffffffffffff82111761216857604052565b90601f8019910116810190811067ffffffffffffffff82111761216857604052565b67ffffffffffffffff81116121685760051b60200190565b90815180825260208080930193019160005b82811061222c575050505090565b83516001600160a01b03168552938101939281019260010161221e565b6033546001600160a01b0316330361225d57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b156122f157565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b1561235157565b60405162461bcd60e51b81526020600482015260086024820152671b9bc81c9a59da1d60c21b6044820152606490fd5b9190820180921161238e57565b634e487b7160e01b600052601160045260246000fd5b9190820391821161238e57565b600019811461238e5760010190565b908160209103126109c957516001600160a01b03811681036109c95790565b60405163a9059cbb60e01b60208083019182526001600160a01b03949094166024830152604480830195909552938152601f19949390916124216064846121d2565b60018060a01b031660405192612436846121b6565b8484527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656485850152600080938192519082855af1903d1561253a573d9667ffffffffffffffff88116125265785969761249c6124aa9760405193601f84011601836121d2565b81528093873d92013e612563565b805190816124b757505050565b82806124c793830101910161254b565b156124cf5750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b634e487b7160e01b84526041600452602484fd5b91506124aa93949550606091612563565b908160209103126109c9575180151581036109c95790565b919290156125c55750815115612577575090565b3b156125805790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156125d85750805190602001fd5b60405162461bcd60e51b81529081906125f490600483016125f8565b0390fd5b6020808252825181830181905290939260005b82811061262d57505060409293506000838284010152601f8019910116010190565b81810186015184820160400152850161260b565b811561264b570490565b634e487b7160e01b600052601260045260246000fd5b6126696129d3565b9060009182526020607c8152604060ff818520541661297357612710612694606b54606d5490612979565b0491821561296c576126a46129d3565b8552607c8152818520600160ff198254161790556126c483606b546123a4565b606b55815190856126d48361219a565b6002835283368385013760755484516315ab88c960e31b808252966004926001600160a01b039081169290919086818681875afa908115612962578c91612945575b50826127218961298c565b911690528a82606f54169788612736826129af565b5289519a6370a0823160e01b95868d52898d60248161dead9e8f8d8301525afa9c8d1561290c57849d612916575b508b5191825289828981845afa91821561290c576127c0928b92868f8c8b918b9684966128ed575b505163095ea7b360e01b81526001600160a01b03909416908401908152602081019590955291958694859391849160400190565b0393165af180156128e3576128c6575b508360755416803b156114225761280f93838c51809681958294635c11d79560e01b84528c84015283602484015260a0604484015260a483019061220c565b8d606483015242608483015203925af180156128bc579086949392916128a4575b5090602491606f54168851978894859384528301525afa93841561289a575092612865575b50506128629293506123a4565b50565b90809250813d8311612893575b61287c81836121d2565b810103126114315761286292935051839238612855565b503d612872565b51903d90823e3d90fd5b6024929195506128b390612154565b8a949091612830565b88513d8d823e3d90fd5b6128dc90893d8b116115325761152381836121d2565b50386127d0565b8b513d85823e3d90fd5b612905919650883d8a116106595761064b81836121d2565b943861278c565b8c513d86823e3d90fd5b909c508981813d831161293e575b61292e81836121d2565b8101031261143157519b38612764565b503d612924565b61295c9150873d89116106595761064b81836121d2565b38612716565b89513d8e823e3d90fd5b5050509050565b50509050565b8181029291811591840414171561238e57565b8051156129995760200190565b634e487b7160e01b600052603260045260246000fd5b8051600110156129995760400190565b80518210156129995760209160051b010190565b6129f16129e2606c54426123a4565b606e549081156129f457612641565b90565b620151809150612641565b6001600160a01b03919082811632819003612f5b57600081815260776020526040812054612f1657818152607a602081815260409384842097600496878a01548015612f09578260755416885163c45a015560e01b815286818c81855afa908115612eb957908b949392918a91612eec575b508a519088826315ab88c960e31b9788825281865afa918215612ee25760448e9493898f948f9582958f9794612ec3575b5082606f54169051988996879563e6a4390560e01b875216908501526024840152165afa918215612e2357612b159289928c8f8f908b91899684966128ed57505163095ea7b360e01b81526001600160a01b03909416908401908152602081019590955291958694859391849160400190565b0393165af18015612eb957612e9c575b50836075541689519184835287838d81855afa928315612e23578c9594938b8d94899460e4948394612e7d575b5085606f541687519a8b978896635d5155ef60e11b88521690860152602485015260448401528160648401528160848401523060a48401524260c48401525af1928315612e00578893612e4e575b508215918215612d17575b5050505060028901805480612c85575050606a548015612c725760001901606a55885480612c45575b50505b6003606654980154855198612beb8a6121b6565b60098a52681a5b98dbdc9c9958dd60ba1b848b0152808211612c2d57600098995003606655835252208281558260018201558260028201558260038201550155565b865162461bcd60e51b8152806125f48c828c016125f8565b6000908152607b60205260409020546001600160a01b031616845282825283600286822001553880612bd4565b634e487b7160e01b865260118852602486fd5b8a5415612ced575089546000908152607b6020526040902054612cdb9160029184906001600160a01b0316168852868652888820905491018190556000908152607b60205260409020546001600160a01b031690565b16845282825284842088549055612bd7565b6000908152607b60205260409020546001600160a01b031690501684528282528385812055612bd7565b8a8786607554168c51928380928682525afa908115612e23579086918b91612e31575b5016803b15612e2d57898560248e838f519586948593632e1a7d4d60e01b85528401525af18015612e2357612e0a575b50889286929091478611612daa5750508293839283928390612da1575bf115612d97575b38808080612bab565b85513d86823e3d90fd5b506108fc612d87565b9250925050858460755416918b8b518094819382525afa908115612e0057612dde93929185918a91612de3575b50166123df565b612d8e565b612dfa9150883d8a116106595761064b81836121d2565b38612dd7565b89513d8a823e3d90fd5b98612e1987939a949294612154565b9891929092612d6a565b8b513d8c823e3d90fd5b8980fd5b612e489150893d8b116106595761064b81836121d2565b38612d3a565b9092508881813d8311612e76575b612e6681836121d2565b81010312611cf257519138612ba0565b503d612e5c565b612e959194508d803d106106595761064b81836121d2565b9238612b52565b612eb290873d89116115325761152381836121d2565b5038612b25565b8a513d8b823e3d90fd5b612edb919450873d89116106595761064b81836121d2565b9238612aa2565b8c513d8d823e3d90fd5b612f039150883d8a116106595761064b81836121d2565b38612a71565b5050505050505050509050565b60405162461bcd60e51b815260206004820152601960248201527f50756c6c656420696e746f2074686520626c61636b6c697374000000000000006044820152606490fd5b60405162461bcd60e51b81526020600482015260116024820152706e6f742062656c6f6e6720746f20796f7560781b6044820152606490fd5b6001600160a01b0381169081612fa8575050565b612fb190612fcc565b90600052607860205260406000209081556001606554910155565b6001600160a01b031660008181526077602052604090205461304057806129f191600052607a602052670de0b6b3a764000061302a6003604060002001546130246065546078602052600160406000200154906123a4565b90612979565b0490600052607860205260406000205490612381565b50600090565b6076548110156129995760766000527fb5732705f5241370a28908c2fe1303cb223f03b90d857fd0573f003f79fefed40190600090565b6000818152607760205260408120546130e657607654680100000000000000008110156118d65790826130d26130bb84600160409601607655613046565b819391549060031b91821b91600019901b19161790565b905560765492815260776020522055600190565b905090565b60008181526077602052604081205490919080156131bc576000199080820181811161173357607654908382019182116131a857808203613174575b50505060765480156131605781019061313f82613046565b909182549160031b1b19169055607655815260776020526040812055600190565b634e487b7160e01b84526031600452602484fd5b6131926131836130bb93613046565b90549060031b1c928392613046565b9055845260776020526040842055388080613127565b634e487b7160e01b86526011600452602486fd5b505090565b6001600160a01b03908116600081815260796020526040902054821615801592906131f7575b50506131f257600090565b600190565b6073541614905038806131e7565b61320e81613356565b90613218826121f4565b9161322660405193846121d2565b808352613235601f19916121f4565b01366020840137600052607b60205260018060a01b0360406000205416600052607a602052604060002060046040519161326e8361217e565b805483526001810154602084015260028101546040840152600381015460608401520154608082015290600092600090606954935b84861080613349575b15613341576040908101516000908152607b60205220546001600160a01b03166132d686856129bf565b9060018060a01b0316809152600052607a60205261333a61333460406000206040516133018161217e565b81548152600182015460208201526002820154604082015260046003830154928360608401520154608082015294612381565b956123b1565b94916132a3565b509193509150565b50604081015115156132ac565b6000818152602090607b825260018060a01b03916040918383822054168152607a918281528382209184519361338b8561217e565b8354855260019586850154848701526002808601549384838901526003938488015495606096878b01528a6004809a01549a60809b8c8201529d1490816134c9575b506134ba579a999796959493929190809b81998b606954905b6133fc575b505050505050505050505050505090565b8d9e9192939495969798999a9b9c9d87828f1091826134ab575b5050156134a3576134918e9f8f9e9f8e8e8e8e8e8e8e818f8f8f6134538461348b9e0151600052607b60205260018060a01b036040600020541690565b168252875220948251986134668a61217e565b86548a52860154908901528401549087015282015490850152015490820152936123b1565b9e6123b1565b9b9a9998979695949392919d9e6133e6565b819e506133eb565b909150015115158f8890613416565b50995050505050505050505090565b905015386133cd56fea164736f6c6343000814000a",
  "decompiled": true,
  "raw_sol_code": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0;\n\n/// @title            Decompiled Contract\n/// @author           Jonathan Becker <jonathan@jbecker.dev>\n/// @custom:version   heimdall-rs v0.9.0\n///\n/// @notice           This contract was decompiled using the heimdall-rs decompiler.\n///                     It was generated directly by tracing the EVM opcodes from this contract.\n///                     As a result, it may not compile or even be valid solidity code.\n///                     Despite this, it should be obvious what each function does. Overall\n///                     logic should have been preserved throughout decompiling.\n///\n/// @custom:github    You can find the open-source decompiler here:\n///                       https://heimdall.rs\n\ncontract DecompiledContract {\n    mapping(bytes32 => bytes32) storage_map_u;\n    uint256 public buyRate;\n    mapping(bytes32 => bytes32) storage_map_p;\n    bytes32 store_ab;\n    uint256 store_aa;\n    mapping(bytes32 => bytes32) storage_map_ac;\n    uint256 public currentIndex;\n    uint256 public getTimes;\n    uint256 public unresolved_b8738d3a;\n    address store_j;\n    mapping(bytes32 => bytes32) storage_map_e;\n    address public unresolved_0ede9262;\n    address public owner;\n    mapping(bytes32 => bytes32) storage_map_t;\n    uint256 public minBNBAmount;\n    mapping(bytes32 => bytes32) storage_map_x;\n    uint256 public unresolved_f68c98e0;\n    address public defaultAddress;\n    address public parAddress;\n    mapping(bytes32 => bytes32) storage_map_a;\n    uint256 store_c;\n    mapping(bytes32 => bytes32) storage_map_f;\n    address public topAddress;\n    mapping(bytes32 => bytes32) storage_map_ag;\n    uint256 public unresolved_c09d1e58;\n    mapping(bytes32 => bytes32) storage_map_n;\n    address store_y;\n    mapping(bytes32 => bytes32) storage_map_b;\n    bytes32 store_l;\n    address public ownerB;\n    address public projectAddress;\n    mapping(bytes32 => bytes32) storage_map_o;\n    uint256 public unresolved_aeceb6f0;\n    \n    event BindIntro(address, address, uint256);\n    event OwnershipTransferred(address, address);\n    \n    /// @custom:selector    0x489082df\n    /// @custom:signature   takeToken(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function takeToken(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(address(arg0), \"no right\");\n        address var_a = address(arg0);\n        var_b = 0x77;\n        require(storage_map_a[var_a], \"no right\");\n        var_a = address(arg0);\n        var_b = 0x78;\n        storage_map_a[var_a] = 0;\n        storage_map_b[var_a] = store_c;\n        require(!(msg.sender == (address(parAddress))), \"no right\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x08;\n        var_f = 0x6e6f207269676874000000000000000000000000000000000000000000000000;\n        var_a = address(arg0);\n        var_b = 0x77;\n        require(storage_map_a[var_a], \"in black\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x08;\n        var_f = 0x696e20626c61636b000000000000000000000000000000000000000000000000;\n        require(address(arg0));\n        var_a = address(arg0);\n        var_b = 0x78;\n        require(!storage_map_a[var_a]);\n        storage_map_a[var_a] = 0;\n        require(storage_map_e[var_a] > (storage_map_e[var_a] + storage_map_a[var_a]));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        storage_map_e[var_a] = (storage_map_e[var_a]) + storage_map_a[var_a];\n        address var_c = storage_map_a[var_a];\n        return storage_map_a[var_a];\n        var_c = storage_map_a[var_a];\n        return storage_map_a[var_a];\n        var_c = 0;\n        return 0;\n        var_a = address(arg0);\n        var_b = 0x7a;\n        var_b = 0x78;\n        require((store_c - (storage_map_b[var_a])) > store_c);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(!(storage_map_f[var_a] * (store_c - (storage_map_b[var_a])) / (storage_map_f[var_a]) == (store_c - (storage_map_b[var_a]))) | (!storage_map_f[var_a]));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_a = address(arg0);\n        var_b = 0x78;\n        require((storage_map_f[var_a] * (store_c - (storage_map_b[var_a])) / 0x0de0b6b3a7640000) > ((storage_map_f[var_a] * (store_c - (storage_map_b[var_a])) / 0x0de0b6b3a7640000) + storage_map_a[var_a]));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n    }\n    \n    /// @custom:selector    0x6dfd480b\n    /// @custom:signature   Unresolved_6dfd480b(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_6dfd480b(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(address(arg0)), \"can not be zero address\");\n        ownerB = (uint96(ownerB)) | (address(arg0));\n        return ;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x17;\n        var_d = 0x63616e206e6f74206265207a65726f2061646472657373000000000000000000;\n    }\n    \n    /// @custom:selector    0x8d232b97\n    /// @custom:signature   changeUniswapV2Router(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function changeUniswapV2Router(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_j = (uint96(store_j)) | (address(arg0));\n        return ;\n    }\n    \n    /// @custom:selector    0x8e047f0f\n    /// @custom:signature   Unresolved_8e047f0f(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_8e047f0f(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(address(arg0), \"Ownable: caller is not the owner\");\n        address var_a = address(arg0);\n        var_b = 0x77;\n        require(storage_map_a[var_a], \"Ownable: caller is not the owner\");\n        var_a = address(arg0);\n        var_b = 0x78;\n        storage_map_a[var_a] = 0;\n        storage_map_b[var_a] = store_c;\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x20;\n        var_f = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        var_a = address(arg0);\n        var_b = 0x77;\n        require(storage_map_a[var_a]);\n        var_a = address(arg0);\n        var_b = 0x7a;\n        require((unresolved_c09d1e58 - (storage_map_f[var_a])) > unresolved_c09d1e58);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        unresolved_c09d1e58 = unresolved_c09d1e58 - (storage_map_f[var_a]);\n        return ;\n        require(!store_l < 0x010000000000000000);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x41;\n        store_l = store_l + 0x01;\n        require(!store_l < store_l);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x32;\n        var_a = address(arg0);\n        var_b = 0x7a;\n        var_b = 0x78;\n        require((store_c - (storage_map_b[var_a])) > store_c);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(!(storage_map_f[var_a] * (store_c - (storage_map_b[var_a])) / (storage_map_f[var_a]) == (store_c - (storage_map_b[var_a]))) | (!storage_map_f[var_a]));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_a = address(arg0);\n        var_b = 0x78;\n        require((storage_map_f[var_a] * (store_c - (storage_map_b[var_a])) / 0x0de0b6b3a7640000) > ((storage_map_f[var_a] * (store_c - (storage_map_b[var_a])) / 0x0de0b6b3a7640000) + storage_map_a[var_a]));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n    }\n    \n    /// @custom:selector    0x306c1f0c\n    /// @custom:signature   updateAllAverage(uint256 arg0) public payable returns (uint256)\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    function updateAllAverage(uint256 arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20, \"no right\");\n        require(!(msg.sender == (address(parAddress))), \"no right\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x08;\n        var_d = 0x6e6f207269676874000000000000000000000000000000000000000000000000;\n        require(unresolved_c09d1e58);\n        require(arg0);\n        require(arg0 | (((arg0 * 0x0de0b6b3a7640000) / arg0) == 0x0de0b6b3a7640000));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        require(!unresolved_c09d1e58);\n        require(store_c > (store_c + ((arg0 * 0x0de0b6b3a7640000) / unresolved_c09d1e58)));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        store_c = store_c + ((arg0 * 0x0de0b6b3a7640000) / unresolved_c09d1e58);\n        return ;\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x12;\n        return ;\n    }\n    \n    /// @custom:selector    0xf4b35538\n    /// @custom:signature   isBind(address arg0) public view returns (bool)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function isBind(address arg0) public view returns (bool) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x79;\n        require(!address(storage_map_a[var_a]));\n        require(address(storage_map_a[var_a]));\n        var_c = 0x01;\n        return 0x01;\n        uint256 var_c = 0;\n        return 0;\n        require(address(topAddress) == (address(arg0)));\n        var_c = 0;\n        return 0;\n        var_c = 0x01;\n        return 0x01;\n    }\n    \n    /// @custom:selector    0xe17b2e29\n    /// @custom:signature   Unresolved_e17b2e29(address arg0) public view returns (bytes memory)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_e17b2e29(address arg0) public view returns (bytes memory) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x78;\n        address var_c = storage_map_a[var_a];\n        address var_d = storage_map_b[var_a];\n        address var_e = storage_map_e[var_a];\n        return abi.encodePacked(storage_map_a[var_a], storage_map_b[var_a], storage_map_e[var_a]);\n    }\n    \n    /// @custom:selector    0x191437a1\n    /// @custom:signature   getBuyerAtIndex(uint256 arg0) public view returns (address)\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    function getBuyerAtIndex(uint256 arg0) public view returns (address) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        uint256 var_a = arg0;\n        var_b = 0x7b;\n        uint256 var_c = address(storage_map_a[var_a]);\n        return address(storage_map_a[var_a]);\n    }\n    \n    /// @custom:selector    0xfcfad9ce\n    /// @custom:signature   Unresolved_fcfad9ce(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_fcfad9ce(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        address var_e = address(arg0);\n        var_f = 0x77;\n        require(!storage_map_n[var_e]);\n        require((0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + storage_map_n[var_e]) > storage_map_n[var_e]);\n        require((store_l + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) > store_l);\n        require((store_l + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) - (0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + storage_map_n[var_e]));\n        require(!(store_l + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) < store_l);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x32;\n        require(!store_l);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x31;\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_e = address(arg0);\n        var_f = 0x78;\n        storage_map_o[var_e] = store_c;\n        var_f = 0x7a;\n        require(unresolved_c09d1e58 > (unresolved_c09d1e58 + (storage_map_p[var_e])));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        unresolved_c09d1e58 = unresolved_c09d1e58 + (storage_map_p[var_e]);\n        return ;\n    }\n    \n    /// @custom:selector    0x34cbe2a4\n    /// @custom:signature   Unresolved_34cbe2a4(uint256 arg0) public payable returns (uint256)\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    function Unresolved_34cbe2a4(uint256 arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20, \"Ownable: caller is not the owner\");\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!arg0, \"must great than 0\");\n        unresolved_f68c98e0 = arg0;\n        return ;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x11;\n        var_d = 0x6d757374206772656174207468616e2030000000000000000000000000000000;\n    }\n    \n    /// @custom:selector    0x3069a920\n    /// @custom:signature   Unresolved_3069a920(uint256 arg0) public payable returns (uint256)\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    function Unresolved_3069a920(uint256 arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20, \"Ownable: caller is not the owner\");\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        unresolved_aeceb6f0 = arg0;\n        return ;\n    }\n    \n    /// @custom:selector    0x85f236fc\n    /// @custom:signature   Unresolved_85f236fc(uint256 arg0) public view returns (bool)\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    function Unresolved_85f236fc(uint256 arg0) public view returns (bool) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        uint256 var_a = arg0;\n        var_b = 0x7c;\n        uint256 var_c = !(!bytes1(storage_map_a[var_a]));\n        return !(!bytes1(storage_map_a[var_a]));\n    }\n    \n    /// @custom:selector    0xee9907a4\n    /// @custom:signature   getUserIndex(address arg0) public view returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function getUserIndex(address arg0) public view returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x7a;\n        address var_c = storage_map_b[var_a];\n        return storage_map_b[var_a];\n    }\n    \n    /// @custom:selector    0x80868398\n    /// @custom:signature   getBind(address arg0) public view returns (address)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function getBind(address arg0) public view returns (address) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x79;\n        address var_c = address(storage_map_a[var_a]);\n        return address(storage_map_a[var_a]);\n    }\n    \n    /// @custom:selector    0x9dd5c01a\n    /// @custom:signature   bindIntro(address arg0, address arg1) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    /// @param              arg1 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function bindIntro(address arg0, address arg1) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x40);\n        require(arg0 - (address(arg0)));\n        require(arg1 - (address(arg1)));\n        require(!(msg.sender == (address(parAddress))), \"no right\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x08;\n        var_d = 0x6e6f207269676874000000000000000000000000000000000000000000000000;\n        address var_e = address(arg1);\n        var_f = 0x7a;\n        require(((var_g + 0xa0) > 0xffffffffffffffff) | ((var_g + 0xa0) < var_g));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_h = 0x41;\n        uint256 var_g = var_g + 0xa0;\n        address var_a = storage_map_n[var_e];\n        address var_i = storage_map_o[var_e];\n        address var_j = storage_map_t[var_e];\n        address var_k = storage_map_p[var_e];\n        address var_l = storage_map_u[var_e];\n        require(!address(arg0).code.length);\n        require(!address(arg1).code.length);\n        require(storage_map_p[var_e]);\n        var_e = address(arg0);\n        var_f = 0x79;\n        storage_map_n[var_e] = (uint96(storage_map_n[var_e])) | (address(arg1));\n        address var_m = address(topAddress);\n        address var_n = address(arg0);\n        var_o = 0x01;\n        emit BindIntro(address(topAddress), address(arg0), 0x01);\n        return ;\n        return ;\n    }\n    \n    /// @custom:selector    0xe8082858\n    /// @custom:signature   changeProjectAddress(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function changeProjectAddress(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        projectAddress = (uint96(projectAddress)) | (address(arg0));\n        return ;\n    }\n    \n    /// @custom:selector    0x7c0d24f1\n    /// @custom:signature   Unresolved_7c0d24f1(address arg0) public view returns (bytes memory)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_7c0d24f1(address arg0) public view returns (bytes memory) {\n        require(msg.value);\n        require((msg.data.length + 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(((var_a + 0xc0) > 0xffffffffffffffff) | ((var_a + 0xc0) < var_a));\n        var_b = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x41;\n        uint256 var_a = var_a + 0xc0;\n        var_d = 0x05;\n        var_e = msg.data[4:164];\n        require(0 < 0x05);\n        var_f = 0x20;\n        uint256 var_g = var_a.length;\n        return abi.encodePacked(0x20, var_a.length);\n        address var_b = address(arg0);\n        var_h = 0x79;\n        require(address(storage_map_x[var_b]));\n        require(address(topAddress) == (address(storage_map_x[var_b])));\n        var_b = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n        address var_i = address(storage_map_x[var_b]);\n        require(0 == 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        var_b = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x11;\n        var_b = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_c = 0x32;\n    }\n    \n    /// @custom:selector    0x3c399169\n    /// @custom:signature   Unresolved_3c399169(uint256 arg0, address arg1) public view returns (uint256)\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    /// @param              arg1 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_3c399169(uint256 arg0, address arg1) public view returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x40);\n        require(arg0 > 0xffffffffffffffff);\n        require(!(arg0 + 0x23) < msg.data.length);\n        require(arg0 > 0xffffffffffffffff);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x41;\n        require(((var_c + (uint248((0x20 + (arg0 << 0x05)) + 0x1f))) > 0xffffffffffffffff) | ((var_c + (uint248((0x20 + (arg0 << 0x05)) + 0x1f))) < var_c));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x41;\n        uint256 var_c = var_c + (uint248((0x20 + (arg0 << 0x05)) + 0x1f));\n        uint256 var_d = (arg0);\n        require(((arg0 + (arg0 << 0x05)) + 0x24) > msg.data.length);\n        require((0x24 + arg0) < ((arg0 + (arg0 << 0x05)) + 0x24));\n        require(msg.data[0x24 + arg0] - (address(msg.data[0x24 + arg0])));\n        require(arg1 > 0xffffffffffffffff);\n        require(!((arg1 + 0x23) < msg.data.length), \"Ownable: caller is not the owner\");\n        require(arg1 > 0xffffffffffffffff, \"Ownable: caller is not the owner\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x41;\n        require(((var_c + (uint248((0x20 + (arg1 << 0x05)) + 0x1f))) > 0xffffffffffffffff) | ((var_c + (uint248((0x20 + (arg1 << 0x05)) + 0x1f))) < var_c), \"Ownable: caller is not the owner\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x41;\n        var_c = var_c + (uint248((0x20 + (arg1 << 0x05)) + 0x1f));\n        address var_e = (arg1);\n        require(((arg1 + (arg1 << 0x05)) + 0x24) > msg.data.length, \"Ownable: caller is not the owner\");\n        require((arg1 + 0x24) < ((arg1 + (arg1 << 0x05)) + 0x24), \"Ownable: caller is not the owner\");\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_f = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_g = 0x20;\n        var_h = 0x20;\n        var_i = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_b = 0x32;\n        return ;\n    }\n    \n    /// @custom:selector    0xa870ff6a\n    /// @custom:signature   Unresolved_a870ff6a(uint256 arg0) public payable returns (uint256)\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    function Unresolved_a870ff6a(uint256 arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20, \"Ownable: caller is not the owner\");\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        unresolved_b8738d3a = arg0;\n        return ;\n    }\n    \n    /// @custom:selector    0xe5d6d6ef\n    /// @custom:signature   Unresolved_e5d6d6ef() public payable returns (uint256)\n    function Unresolved_e5d6d6ef() public payable returns (uint256) {\n        require((msg.data.length + 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc) < 0);\n        require(msg.sender - (address(store_y)), \"worng right\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x0b;\n        var_d = 0x776f726e67207269676874000000000000000000000000000000000000000000;\n        var_a = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_j).WETH(var_b); // staticcall\n        require(!address(0).code.length);\n        var_a = 0xd0e30db000000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(0).{ value: msg.value }deposit(var_b); // call\n        require(unresolved_aeceb6f0 > (unresolved_aeceb6f0 + msg.value));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x11;\n        unresolved_aeceb6f0 = unresolved_aeceb6f0 + msg.value;\n        return ;\n        require(var_g > 0xffffffffffffffff);\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x41;\n        var_g = var_g;\n        require(0);\n        require(0x20 > ret0.length);\n        require(((var_g + 0x20) > 0xffffffffffffffff) | ((var_g + 0x20) < var_g));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_f = 0x41;\n        uint256 var_g = var_g + 0x20;\n        require(((var_g + 0x20) - var_g) < 0x20);\n        require(var_g.length - (address(var_g.length)));\n    }\n    \n    /// @custom:selector    0x1d1d630c\n    /// @custom:signature   Unresolved_1d1d630c(uint256 arg0, uint256 arg1) public payable returns (uint256)\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    /// @param              arg1 [\"uint256\", \"bytes32\", \"int256\"]\n    function Unresolved_1d1d630c(uint256 arg0, uint256 arg1) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x40, \"Ownable: caller is not the owner\");\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        minBNBAmount = arg0;\n        store_aa = arg1;\n        return ;\n    }\n    \n    /// @custom:selector    0x715018a6\n    /// @custom:signature   renounceOwnership() public payable returns (uint256)\n    function renounceOwnership() public payable returns (uint256) {\n        require(msg.value);\n        require((msg.data.length + 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc) < 0);\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        owner = uint96(owner);\n        emit OwnershipTransferred(address(owner), 0);\n        return ;\n    }\n    \n    /// @custom:selector    0x8129fc1c\n    /// @custom:signature   initialize() public payable\n    function initialize() public payable {\n        require(msg.value);\n        require((msg.data.length + 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc) < 0);\n        require(!(bytes1(store_ab >> 0x08)), \"Initializable: contract is not initializing\");\n        require(!(!bytes1(store_ab >> 0x08)), \"Initializable: contract is not initializing\");\n        require(address(this).code.length, \"Initializable: contract is not initializing\");\n        require(!(bytes1(store_ab) == 0x01), \"Initializable: contract is not initializing\");\n        store_ab = 0x01 | (uint248(store_ab));\n        require(!(bytes1(store_ab >> 0x08)), \"Initializable: contract is not initializing\");\n        require(!(bytes1(store_ab >> 0x08)), \"Initializable: contract is not initializing\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x2b;\n        var_d = 0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069;\n        var_e = 0x6e697469616c697a696e67000000000000000000000000000000000000000000;\n        store_ab = 0x0101 | (uint240(store_ab));\n        require(!(bytes1(store_ab >> 0x08)), \"Initializable: contract is not initializing\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x2b;\n        var_d = 0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069;\n        var_e = 0x6e697469616c697a696e67000000000000000000000000000000000000000000;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x2e;\n        var_d = 0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561;\n        var_e = 0x647920696e697469616c697a6564000000000000000000000000000000000000;\n        require(!(!bytes1(store_ab >> 0x08)), \"Initializable: contract is already initialized\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x2e;\n        var_d = 0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561;\n        var_e = 0x647920696e697469616c697a6564000000000000000000000000000000000000;\n    }\n    \n    /// @custom:selector    0x89da7deb\n    /// @custom:signature   removeLP(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function removeLP(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(address(arg0), \"no right\");\n        address var_a = address(arg0);\n        var_b = 0x77;\n        require(storage_map_a[var_a], \"no right\");\n        var_a = address(arg0);\n        var_b = 0x78;\n        storage_map_a[var_a] = 0;\n        storage_map_b[var_a] = store_c;\n        require(!(msg.sender == (address(unresolved_0ede9262))), \"no right\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x08;\n        var_f = 0x6e6f207269676874000000000000000000000000000000000000000000000000;\n        require(tx.origin - (address(arg0)), \"not belong to you\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x11;\n        var_f = 0x6e6f742062656c6f6e6720746f20796f75000000000000000000000000000000;\n        var_a = address(arg0);\n        var_b = 0x77;\n        require(storage_map_a[var_a], \"Pulled into the blacklist\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x19;\n        var_f = 0x50756c6c656420696e746f2074686520626c61636b6c69737400000000000000;\n        var_a = address(arg0);\n        var_b = 0x7a;\n        require(!storage_map_ac[var_a]);\n        var_c = 0xc45a015500000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_j).factory(var_d); // staticcall\n        var_c = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_j).WETH(var_d); // staticcall\n        var_c = 0xe6a4390500000000000000000000000000000000000000000000000000000000;\n        uint256 var_d = 0;\n        address var_e = address(parAddress);\n        (bool success, bytes memory ret0) = address(0).Unresolved_e6a43905(var_d); // staticcall\n        var_c = 0x095ea7b300000000000000000000000000000000000000000000000000000000;\n        var_d = address(store_j);\n        var_e = storage_map_ac[var_a];\n        (bool success, bytes memory ret0) = address(0).{ value: storage_map_a[var_a] ether }Unresolved_095ea7b3(var_d); // call\n        var_c = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_j).WETH(var_d); // staticcall\n        var_c = 0xbaa2abde00000000000000000000000000000000000000000000000000000000;\n        var_d = 0;\n        var_e = address(parAddress);\n        address var_f = storage_map_ac[var_a];\n        uint256 var_g = 0;\n        uint256 var_h = 0;\n        address var_i = address(this);\n        uint256 var_j = block.timestamp;\n        (bool success, bytes memory ret0) = address(store_j).{ value: var_g ether }Unresolved_baa2abde(var_d); // call\n        require(0);\n        var_c = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_j).WETH(var_d); // staticcall\n        require(!address(0).code.length);\n        var_c = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000;\n        var_d = 0;\n        (bool success, bytes memory ret0) = address(0).{ value: var_g ether }Unresolved_2e1a7d4d(var_d); // call\n        require(0 > address(this).balance);\n        var_c = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_j).WETH(var_d); // staticcall\n        var_k = 0xa9059cbb00000000000000000000000000000000000000000000000000000000;\n        var_e = address(arg0);\n        var_f = 0;\n        var_c = 0x44;\n        require(((var_l + 0x80) > 0xffffffffffffffff) | ((var_l + 0x80) < var_l));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_m = 0x41;\n        uint256 var_l = var_l + 0x80;\n        require(((var_l + 0x40) > 0xffffffffffffffff) | ((var_l + 0x40) < var_l));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_m = 0x41;\n        var_l = var_l + 0x40;\n        var_n = 0x20;\n        var_o = 0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564;\n        (bool success, bytes memory ret0) = address(0).{ value: var_f ether }Unresolved_a9059cbb(var_e); // call\n        require(!ret0.length);\n        require(!var_p);\n        var_q = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_j = 0x20;\n        uint256 var_r = var_l.length;\n        uint256 var_s = 0;\n        var_t = var_u;\n        var_s = 0;\n        require(!var_p, \"SafeERC20: ERC20 operation did not succeed\");\n        require(var_p, \"SafeERC20: ERC20 operation did not succeed\");\n        require((((0x60 + var_p) + 0x20) - 0x80) < 0x20, \"SafeERC20: ERC20 operation did not succeed\");\n        require(var_c - var_c, \"SafeERC20: ERC20 operation did not succeed\");\n        require(!var_c, \"SafeERC20: ERC20 operation did not succeed\");\n        var_q = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_j = 0x20;\n        var_r = 0x2a;\n        var_t = 0x5361666545524332303a204552433230206f7065726174696f6e20646964206e;\n        var_s = 0x6f74207375636365656400000000000000000000000000000000000000000000;\n        if (storage_map_e[var_a]) {\n            if (!storage_map_a[var_a]) {\n            }\n            require(storage_map_e[var_a]);\n            currentIndex = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff + currentIndex;\n            require(!currentIndex);\n        }\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_m = 0x11;\n        require(!address(0).code.length, \"Address: call to non-contract\");\n        var_q = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_j = 0x20;\n        var_r = 0x1d;\n        var_t = 0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000;\n        require(ret0.length > 0xffffffffffffffff);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_m = 0x41;\n        require(((var_l + (uint248(((ret0.length + 0x1f) + 0x20) + 0x1f))) > 0xffffffffffffffff) | ((var_l + (uint248(((ret0.length + 0x1f) + 0x20) + 0x1f))) < var_l));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_m = 0x41;\n        var_l = var_l + (uint248(((ret0.length + 0x1f) + 0x20) + 0x1f));\n        uint256 var_q = ret0.length;\n        require(!var_l.length);\n        require(!var_l.length, \"Address: call to non-contract\");\n        require(!address(0).code.length, \"Address: call to non-contract\");\n        var_v = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_t = 0x20;\n        var_s = 0x1d;\n        var_w = 0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000;\n        if (var_l.length) {\n        }\n        if (0x20 > ret0.length) {\n        }\n        require(!0);\n        (bool success, bytes memory ret0) = address(arg0).transfer(0);\n        if (var_l > 0xffffffffffffffff) {\n            var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_m = 0x41;\n            if (0x20 > ret0.length) {\n            }\n            require(var_l > 0xffffffffffffffff);\n        }\n        require(ret0.length < 0x20);\n        require(((var_l + 0x20) > 0xffffffffffffffff) | ((var_l + 0x20) < var_l));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_m = 0x41;\n        var_l = var_l + 0x20;\n        require(((var_l + 0x20) - var_l) < 0x20);\n        require(var_l.length - (address(var_l.length)));\n        var_k = 0xbaa2abde00000000000000000000000000000000000000000000000000000000;\n        var_e = address(var_l.length);\n        var_f = address(parAddress);\n        var_g = storage_map_ac[var_a];\n        var_h = 0;\n        var_i = 0;\n        var_j = address(this);\n        var_r = block.timestamp;\n        (bool success, bytes memory ret0) = address(store_j).{ value: var_d ether }Unresolved_baa2abde(var_e, var_f, var_g, var_h, var_i); // call\n        if (0x40 > ret0.length) {\n        }\n        if (0x20 > ret0.length) {\n        }\n        require(0x20 > ret0.length);\n        require(((var_l + 0x20) > 0xffffffffffffffff) | ((var_l + 0x20) < var_l));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_m = 0x41;\n        var_l = var_l + 0x20;\n        require(((var_l + 0x20) - var_l) < 0x20);\n        require(var_l.length - (address(var_l.length)));\n        if (0x20 > ret0.length) {\n        }\n        if (0x20 > ret0.length) {\n        }\n        return ;\n        var_a = address(arg0);\n        var_b = 0x7a;\n        var_b = 0x78;\n        require((store_c - (storage_map_b[var_a])) > store_c);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_m = 0x11;\n        require(!(storage_map_f[var_a] * (store_c - (storage_map_b[var_a])) / (storage_map_f[var_a]) == (store_c - (storage_map_b[var_a]))) | (!storage_map_f[var_a]));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_m = 0x11;\n        var_a = address(arg0);\n        var_b = 0x78;\n        require((storage_map_f[var_a] * (store_c - (storage_map_b[var_a])) / 0x0de0b6b3a7640000) > ((storage_map_f[var_a] * (store_c - (storage_map_b[var_a])) / 0x0de0b6b3a7640000) + storage_map_a[var_a]));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_m = 0x11;\n    }\n    \n    /// @custom:selector    0x931d93fc\n    /// @custom:signature   buyerUserInfo(address arg0) public view returns (bytes memory)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function buyerUserInfo(address arg0) public view returns (bytes memory) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x7a;\n        address var_c = storage_map_a[var_a];\n        address var_d = storage_map_b[var_a];\n        address var_e = storage_map_e[var_a];\n        address var_f = storage_map_f[var_a];\n        address var_g = storage_map_ac[var_a];\n        return abi.encodePacked(storage_map_a[var_a], storage_map_b[var_a], storage_map_e[var_a], storage_map_f[var_a], storage_map_ac[var_a]);\n    }\n    \n    /// @custom:selector    0xa20793fc\n    /// @custom:signature   Unresolved_a20793fc(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_a20793fc(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        store_y = (uint96(store_y)) | (address(arg0));\n        return ;\n    }\n    \n    /// @custom:selector    0xcc03d761\n    /// @custom:signature   Unresolved_cc03d761() public view returns (uint256)\n    function Unresolved_cc03d761() public view returns (uint256) {\n        require(msg.value);\n        require((msg.data.length + 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc) < 0);\n        require(!(msg.sender == (address(parAddress))), \"no right\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x08;\n        var_d = 0x6e6f207269676874000000000000000000000000000000000000000000000000;\n        if ((block.timestamp - getTimes) > block.timestamp) {\n            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n            var_f = 0x11;\n            if (!unresolved_b8738d3a) {\n                if (!unresolved_b8738d3a) {\n                    uint256 var_e = (block.timestamp - getTimes) / unresolved_b8738d3a;\n                    var_g = 0x7c;\n                    if (storage_map_n[var_e]) {\n                        return ;\n                        if (!(((unresolved_aeceb6f0 * buyRate) / unresolved_aeceb6f0) == buyRate) | !unresolved_aeceb6f0) {\n                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                            var_f = 0x11;\n                            if (!(unresolved_aeceb6f0 * buyRate) / 0x2710) {\n                                if ((block.timestamp - getTimes) > block.timestamp) {\n                                    var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                    var_f = 0x11;\n                                    if (!unresolved_b8738d3a) {\n                                        if (!unresolved_b8738d3a) {\n                                            var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                            var_f = 0x12;\n                                            if (!0x015180) {\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x12;\n                                                return ;\n                                                var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                                                var_f = 0x12;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    \n    /// @custom:selector    0xe6363cb1\n    /// @custom:signature   Unresolved_e6363cb1(address arg0, uint256 arg1) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    /// @param              arg1 [\"uint256\", \"bytes32\", \"int256\"]\n    function Unresolved_e6363cb1(address arg0, uint256 arg1) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x40);\n        require(arg0 - (address(arg0)));\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        address var_e = address(arg0);\n        var_f = 0x78;\n        require(storage_map_n[var_e] > (storage_map_n[var_e] + arg1));\n        var_e = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        storage_map_n[var_e] = storage_map_n[var_e] + arg1;\n        return ;\n    }\n    \n    /// @custom:selector    0x44af2e0e\n    /// @custom:signature   changeBuyRate(uint256 arg0) public payable returns (uint256)\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    function changeBuyRate(uint256 arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20, \"Ownable: caller is not the owner\");\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        buyRate = arg0;\n        return ;\n    }\n    \n    /// @custom:selector    0x496b370e\n    /// @custom:signature   indexUser(uint256 arg0) public view returns (address)\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    function indexUser(uint256 arg0) public view returns (address) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        uint256 var_a = arg0;\n        var_b = 0x7b;\n        uint256 var_c = address(storage_map_a[var_a]);\n        return address(storage_map_a[var_a]);\n    }\n    \n    /// @custom:selector    0x35b03203\n    /// @custom:signature   intro(address arg0) public view returns (address)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function intro(address arg0) public view returns (address) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x79;\n        address var_c = address(storage_map_a[var_a]);\n        return address(storage_map_a[var_a]);\n    }\n    \n    /// @custom:selector    0x22a85ee3\n    /// @custom:signature   Unresolved_22a85ee3(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_22a85ee3(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        unresolved_0ede9262 = (uint96(unresolved_0ede9262)) | (address(arg0));\n        return ;\n    }\n    \n    /// @custom:selector    0xf2fde38b\n    /// @custom:signature   transferOwnership(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function transferOwnership(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!(address(arg0)), \"Ownable: new owner is the zero address\");\n        owner = (address(arg0)) | (uint96(owner));\n        emit OwnershipTransferred(address(owner), address(arg0));\n        return ;\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x26;\n        var_d = 0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061;\n        var_e = 0x6464726573730000000000000000000000000000000000000000000000000000;\n    }\n    \n    /// @custom:selector    0xaffd5db9\n    /// @custom:signature   Unresolved_affd5db9() public payable returns (uint256)\n    function Unresolved_affd5db9() public payable returns (uint256) {\n        require(msg.value);\n        require((msg.data.length + 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc) < 0);\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        require(!address(this).balance);\n        (bool success, bytes memory ret0) = address(msg.sender).transfer(address(this).balance);\n        return ;\n    }\n    \n    /// @custom:selector    0x2a55feec\n    /// @custom:signature   isBuyer(address arg0) public view returns (bool)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function isBuyer(address arg0) public view returns (bool) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x7a;\n        address var_c = !(minBNBAmount > (storage_map_f[var_a]));\n        return !(minBNBAmount > (storage_map_f[var_a]));\n    }\n    \n    /// @custom:selector    0x91bbec1a\n    /// @custom:signature   getUserList(uint256 arg0) public view\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    function getUserList(uint256 arg0) public view {\n        require(msg.value);\n        if ((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20) {\n            uint256 var_a = arg0;\n            var_b = 0x7b;\n            var_a = address(storage_map_a[var_a]);\n            var_b = 0x7a;\n            if (((var_c + 0xa0) > 0xffffffffffffffff) | ((var_c + 0xa0) < var_c)) {\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_d = 0x41;\n                uint256 var_c = var_c + 0xa0;\n                uint256 var_e = storage_map_a[var_a];\n                uint256 var_f = storage_map_b[var_a];\n                uint256 var_g = storage_map_e[var_a];\n                uint256 var_h = storage_map_f[var_a];\n                uint256 var_i = storage_map_ac[var_a];\n                require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n                require(((var_c + 0xa0) > 0xffffffffffffffff) | ((var_c + 0xa0) < var_c));\n                require(!storage_map_e[var_a]);\n                require(0x01);\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_d = 0x41;\n                require(0 > 0xffffffffffffffff);\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_d = 0x41;\n                var_c = var_c + 0x20;\n                uint256 var_j = 0;\n                require(((var_c + 0x20) > 0xffffffffffffffff) | ((var_c + 0x20) < var_c));\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_d = 0x41;\n                require(0 > 0xffffffffffffffff);\n                require(0 < unresolved_f68c98e0);\n                var_a = var_k;\n                var_b = 0x7b;\n                var_a = address(storage_map_a[var_a]);\n                var_b = 0x7a;\n                require(!var_k);\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_d = 0x41;\n                var_c = var_c + 0xa0;\n                var_j = storage_map_a[var_a];\n                uint256 var_l = storage_map_b[var_a];\n                uint256 var_m = storage_map_e[var_a];\n                uint256 var_n = storage_map_f[var_a];\n                uint256 var_o = storage_map_ac[var_a];\n                require(((var_c + 0xa0) > 0xffffffffffffffff) | ((var_c + 0xa0) < var_c));\n                var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n                var_d = 0x11;\n                require(0 == 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            }\n        }\n    }\n    \n    /// @custom:selector    0xa224fc4f\n    /// @custom:signature   Unresolved_a224fc4f(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_a224fc4f(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(!(msg.sender == (address(ownerB))), \"no right\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x08;\n        var_d = 0x6e6f207269676874000000000000000000000000000000000000000000000000;\n        owner = (address(arg0)) | (uint96(owner));\n        emit OwnershipTransferred(address(owner), address(arg0));\n        return ;\n    }\n    \n    /// @custom:selector    0x9f5c18c4\n    /// @custom:signature   Unresolved_9f5c18c4(address arg0) public view returns (bool)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_9f5c18c4(address arg0) public view returns (bool) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x77;\n        address var_c = storage_map_a[var_a];\n        return storage_map_a[var_a];\n    }\n    \n    /// @custom:selector    0x4184b3e0\n    /// @custom:signature   Unresolved_4184b3e0(address arg0) public view returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_4184b3e0(address arg0) public view returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x7a;\n        address var_c = storage_map_f[var_a];\n        return storage_map_f[var_a];\n    }\n    \n    /// @custom:selector    0xd59f62a8\n    /// @custom:signature   getUserAmount(uint256 arg0) public view returns (uint256)\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    function getUserAmount(uint256 arg0) public view returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        uint256 var_a = arg0;\n        var_b = 0x7b;\n        var_a = address(storage_map_a[var_a]);\n        var_b = 0x7a;\n        require(((var_c + 0xa0) > 0xffffffffffffffff) | ((var_c + 0xa0) < var_c));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_d = 0x41;\n        uint256 var_c = var_c + 0xa0;\n        uint256 var_e = storage_map_a[var_a];\n        uint256 var_f = storage_map_b[var_a];\n        uint256 var_g = storage_map_e[var_a];\n        uint256 var_h = storage_map_f[var_a];\n        uint256 var_i = storage_map_ac[var_a];\n        require(arg0 == 0x01);\n        require(!storage_map_e[var_a]);\n        require(0x01);\n        uint256 var_j = 0;\n        return 0;\n        require(0 < unresolved_f68c98e0);\n        require(!var_k);\n        var_a = var_k;\n        var_b = 0x7b;\n        var_a = address(storage_map_a[var_a]);\n        var_b = 0x7a;\n        require(((var_c + 0xa0) > 0xffffffffffffffff) | ((var_c + 0xa0) < var_c));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_d = 0x41;\n        var_c = var_c + 0xa0;\n        var_j = storage_map_a[var_a];\n        uint256 var_l = storage_map_b[var_a];\n        uint256 var_m = storage_map_e[var_a];\n        uint256 var_n = storage_map_f[var_a];\n        uint256 var_o = storage_map_ac[var_a];\n        require(0 == 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_d = 0x11;\n        var_j = 0;\n        return 0;\n        var_j = 0;\n        return 0;\n        require(arg0 == 0x01);\n        var_j = 0;\n        return 0;\n    }\n    \n    /// @custom:selector    0x1ab6ab04\n    /// @custom:signature   getMainToken(uint256 arg0) public payable returns (uint256)\n    /// @param              arg0 [\"uint256\", \"bytes32\", \"int256\"]\n    function getMainToken(uint256 arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((msg.data.length + 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc) < 0x20, \"Ownable: caller is not the owner\");\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        var_a = 0xad5c464800000000000000000000000000000000000000000000000000000000;\n        (bool success, bytes memory ret0) = address(store_j).WETH(var_b); // staticcall\n        var_a = 0xa9059cbb00000000000000000000000000000000000000000000000000000000;\n        address var_b = msg.sender;\n        uint256 var_c = arg0;\n        (bool success, bytes memory ret0) = address(0).{ value: 0 ether }Unresolved_a9059cbb(var_b); // call\n        return ;\n        require(ret0.length < 0x20);\n        require(((var_e + 0x20) > 0xffffffffffffffff) | ((var_e + 0x20) < var_e));\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x41;\n        uint256 var_e = var_e + 0x20;\n        require(((var_e + 0x20) - var_e) < 0x20);\n        require(var_e.length - var_e.length);\n        return ;\n        require(0x20 > ret0.length);\n        require(((var_e + 0x20) > 0xffffffffffffffff) | ((var_e + 0x20) < var_e));\n        var_f = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x41;\n        var_e = var_e + 0x20;\n        require(((var_e + 0x20) - var_e) < 0x20);\n        require(var_e.length - (address(var_e.length)));\n    }\n    \n    /// @custom:selector    0x7ff3a99e\n    /// @custom:signature   Unresolved_7ff3a99e(address arg0) public payable\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_7ff3a99e(address arg0) public payable {\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(address(arg0), \"no right\");\n        address var_a = address(arg0);\n        var_b = 0x77;\n        require(storage_map_a[var_a], \"no right\");\n        var_a = address(arg0);\n        var_b = 0x78;\n        storage_map_a[var_a] = 0;\n        storage_map_b[var_a] = store_c;\n        require(!(msg.sender == (address(parAddress))), \"no right\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x08;\n        var_f = 0x6e6f207269676874000000000000000000000000000000000000000000000000;\n        require(address(arg0).code.length, \"must user buy\");\n        require(tx.origin - (address(arg0)), \"must user buy\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x0d;\n        var_f = 0x6d75737420757365722062757900000000000000000000000000000000000000;\n        var_a = address(arg0);\n        var_b = 0x7a;\n        require(storage_map_f[var_a] > (storage_map_f[var_a] + msg.value), \"to less\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        storage_map_f[var_a] = (storage_map_f[var_a]) + msg.value;\n        require(msg.value < minBNBAmount, \"to less\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x07;\n        var_f = 0x746f206c65737300000000000000000000000000000000000000000000000000;\n        require(store_aa < (storage_map_f[var_a] + msg.value), \"too more\");\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x08;\n        var_f = 0x746f6f206d6f7265000000000000000000000000000000000000000000000000;\n        require(!(storage_map_ac[var_a]), \"can not buy\");\n        require(currentIndex > 0x01, \"can not buy\");\n        require((currentIndex + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) > currentIndex, \"can not buy\");\n        var_a = currentIndex + 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n        var_b = 0x7b;\n        var_a = address(storage_map_a[var_a]);\n        var_b = 0x7a;\n        storage_map_e[var_a] = currentIndex;\n        storage_map_a[var_a] = storage_map_ag[var_a];\n        storage_map_ag[var_a] = currentIndex;\n        var_a = currentIndex;\n        var_b = 0x7b;\n        storage_map_a[var_a] = (address(arg0)) | (uint96(storage_map_a[var_a]));\n        require(currentIndex == 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, \"can not buy\");\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_c = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_d = 0x20;\n        var_e = 0x0b;\n        var_f = 0x63616e206e6f7420627579000000000000000000000000000000000000000000;\n        var_a = address(arg0);\n        var_b = 0x7a;\n        var_b = 0x78;\n        require((store_c - (storage_map_b[var_a])) > store_c);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        require(!(storage_map_f[var_a] * (store_c - (storage_map_b[var_a])) / (storage_map_f[var_a]) == (store_c - (storage_map_b[var_a]))) | (!storage_map_f[var_a]));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n        var_a = address(arg0);\n        var_b = 0x78;\n        require((storage_map_f[var_a] * (store_c - (storage_map_b[var_a])) / 0x0de0b6b3a7640000) > ((storage_map_f[var_a] * (store_c - (storage_map_b[var_a])) / 0x0de0b6b3a7640000) + storage_map_a[var_a]));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_g = 0x11;\n    }\n    \n    /// @custom:selector    0x2d718b3a\n    /// @custom:signature   Unresolved_2d718b3a(address arg0) public payable returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function Unresolved_2d718b3a(address arg0) public payable returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        require(msg.sender - (address(owner)), \"Ownable: caller is not the owner\");\n        var_a = 0x08c379a000000000000000000000000000000000000000000000000000000000;\n        var_b = 0x20;\n        var_c = 0x20;\n        var_d = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572;\n        parAddress = (uint96(parAddress)) | (address(arg0));\n        return ;\n    }\n    \n    /// @custom:selector    0x1454aef1\n    /// @custom:signature   earnedToken(address arg0) public view returns (uint256)\n    /// @param              arg0 [\"address\", \"uint160\", \"bytes20\", \"int160\"]\n    function earnedToken(address arg0) public view returns (uint256) {\n        require(msg.value);\n        require((0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc + msg.data.length) < 0x20);\n        require(arg0 - (address(arg0)));\n        address var_a = address(arg0);\n        var_b = 0x77;\n        require(storage_map_a[var_a]);\n        uint256 var_c = 0;\n        return 0;\n        var_a = address(arg0);\n        var_b = 0x7a;\n        var_b = 0x78;\n        require((store_c - (storage_map_b[var_a])) > store_c);\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_d = 0x11;\n        require(!(storage_map_f[var_a] * (store_c - (storage_map_b[var_a])) / (storage_map_f[var_a]) == (store_c - (storage_map_b[var_a]))) | (!storage_map_f[var_a]));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_d = 0x11;\n        var_a = address(arg0);\n        var_b = 0x78;\n        require((storage_map_f[var_a] * (store_c - (storage_map_b[var_a])) / 0x0de0b6b3a7640000) > ((storage_map_f[var_a] * (store_c - (storage_map_b[var_a])) / 0x0de0b6b3a7640000) + storage_map_a[var_a]));\n        var_a = 0x4e487b7100000000000000000000000000000000000000000000000000000000;\n        var_d = 0x11;\n        var_c = (storage_map_f[var_a] * (store_c - (storage_map_b[var_a])) / 0x0de0b6b3a7640000) + storage_map_a[var_a];\n        return (storage_map_f[var_a] * (store_c - (storage_map_b[var_a])) / 0x0de0b6b3a7640000) + storage_map_a[var_a];\n    }\n}",
  "optimized_sol_code": "基于反编译代码的分析，这是一个具有复杂流动性池管理和推荐机制的DeFi合约。以下是优化重构后的代码：\n\n```solidity\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ninterface IUniswapV2Router {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n}\n\ninterface IUniswapV2Factory {\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n}\n\ninterface IWETH {\n    function deposit() external payable;\n    function withdraw(uint wad) external;\n    function transfer(address to, uint256 value) external returns (bool);\n}\n\n/**\n * @title LiquidityMiningPool\n * @notice 具有推荐机制的流动性挖矿合约\n * @dev 支持BNB投资、推荐奖励、流动性管理等功能\n */\ncontract LiquidityMiningPool is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n    using Address for address;\n\n    // ============ 状态变量 ============\n    \n    // 基础配置\n    uint256 public buyRate;                    // 购买费率 (基点，10000 = 100%)\n    uint256 public minBNBAmount;               // 最小BNB投资金额\n    uint256 public maxBNBAmount;               // 最大BNB投资金额\n    uint256 public currentIndex;               // 当前用户索引\n    uint256 public getTimes;                   // 获取时间戳\n    uint256 public totalPoolValue;             // 总池价值\n    uint256 public totalTokenSupply;           // 总代币供应量\n    uint256 public timeInterval;               // 时间间隔\n    uint256 public totalBNBCollected;          // 总收集的BNB数量\n    uint256 public averageUpdateRate;          // 平均更新率\n    \n    // 地址配置\n    address public parAddress;                 // 配对地址(代币地址)\n    address public defaultAddress;             // 默认地址\n    address public topAddress;                 // 顶级地址\n    address public projectAddress;             // 项目地址\n    address public ownerB;                     // 备用owner\n    address public liquidityManager;           // 流动性管理员\n    address public treasuryWallet;             // 资金管理员\n    \n    // Uniswap相关\n    IUniswapV2Router public uniswapRouter;\n    \n    // 初始化状态\n    bytes32 private initializationState;\n    \n    // ============ 用户数据结构 ============\n    \n    struct UserInfo {\n        uint256 investment;                    // 用户投资金额\n        uint256 joinTime;                     // 加入时间\n        uint256 earnedAmount;                 // 已赚取金额\n        uint256 lpTokenAmount;                // LP代币数量\n        uint256 userIndex;                    // 用户索引\n        address referrer;                     // 推荐人\n        bool isBlacklisted;                   // 是否被拉黑\n        bool hasLPTokens;                     // 是否有LP代币\n    }\n    \n    // ============ 存储映射 ============\n    \n    mapping(address => UserInfo) public userInfo;           // 用户信息\n    mapping(uint256 => address) public indexToUser;         // 索引到用户地址\n    mapping(address => bool) public isRegistered;           // 是否已注册\n    mapping(address => uint256) public userTokenBalance;    // 用户代币余额\n    mapping(address => bool) public authorizedCallers;      // 授权调用者\n    \n    // ============ 事件定义 ============\n    \n    event BindIntro(address indexed referrer, address indexed user, uint256 timestamp);\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    event Investment(address indexed user, uint256 amount, uint256 timestamp);\n    event Withdrawal(address indexed user, uint256 amount, uint256 timestamp);\n    event LiquidityRemoved(address indexed user, uint256 lpAmount, uint256 bnbAmount);\n    event RewardClaimed(address indexed user, uint256 amount);\n    event ParameterUpdated(string parameter, uint256 oldValue, uint256 newValue);\n    \n    // ============ 错误定义 ============\n    \n    error Unauthorized();\n    error InvalidAmount();\n    error UserBlacklisted();\n    error InsufficientBalance();\n    error TransferFailed();\n    error AlreadyInitialized();\n    error NotInitialized();\n    error InvalidAddress();\n    error ExceedsMaximum();\n    error BelowMinimum();\n    \n    // ============ 修饰符 ============\n    \n    modifier onlyAuthorized() {\n        if (msg.sender != owner() && !authorizedCallers[msg.sender]) {\n            revert Unauthorized();\n        }\n        _;\n    }\n    \n    modifier notBlacklisted(address user) {\n        if (userInfo[user].isBlacklisted) {\n            revert UserBlacklisted();\n        }\n        _;\n    }\n    \n    modifier validAddress(address addr) {\n        if (addr == address(0)) {\n            revert InvalidAddress();\n        }\n        _;\n    }\n    \n    // ============ 构造函数和初始化 ============\n    \n    constructor() {\n        // 构造函数保持简单，主要逻辑在initialize中\n    }\n    \n    /**\n     * @notice 初始化合约\n     * @dev 只能调用一次\n     */\n    function initialize() external payable {\n        if (bytes1(initializationState) == 0x01) {\n            revert AlreadyInitialized();\n        }\n        \n        initializationState = 0x01;\n        \n        // 设置默认值\n        buyRate = 500; // 5%\n        minBNBAmount = 0.01 ether;\n        maxBNBAmount = 10 ether;\n        timeInterval = 86400; // 24小时\n        currentIndex = 1;\n        \n        _transferOwnership(msg.sender);\n    }\n    \n    // ============ 核心业务函数 ============\n    \n    /**\n     * @notice 用户投资BNB\n     * @param user 投资用户地址\n     */\n    function investBNB(address user) \n        external \n        payable \n        nonReentrant \n        notBlacklisted(user)\n        validAddress(user)\n    {\n        if (msg.value < minBNBAmount) {\n            revert BelowMinimum();\n        }\n        \n        if (msg.value > maxBNBAmount) {\n            revert ExceedsMaximum();\n        }\n        \n        if (msg.sender != user && msg.sender != owner()) {\n            revert Unauthorized();\n        }\n        \n        UserInfo storage userData = userInfo[user];\n        \n        // 首次投资时注册用户\n        if (!isRegistered[user]) {\n            _registerUser(user);\n        }\n        \n        // 更新投资金额\n        userData.investment += msg.value;\n        userData.joinTime = block.timestamp;\n        \n        // 更新总收集金额\n        totalBNBCollected += msg.value;\n        \n        emit Investment(user, msg.value, block.timestamp);\n    }\n    \n    /**\n     * @notice 绑定推荐关系\n     * @param user 用户地址\n     * @param referrer 推荐人地址\n     */\n    function bindReferrer(address user, address referrer) \n        external \n        onlyAuthorized \n        validAddress(user) \n        validAddress(referrer)\n    {\n        if (user == referrer) {\n            revert InvalidAddress();\n        }\n        \n        if (userInfo[user].referrer != address(0)) {\n            return; // 已有推荐人\n        }\n        \n        userInfo[user].referrer = referrer;\n        \n        emit BindIntro(referrer, user, block.timestamp);\n    }\n    \n    /**\n     * @notice 计算用户可提取的收益\n     * @param user 用户地址\n     * @return 可提取的收益数量\n     */\n    function calculateEarnings(address user) public view returns (uint256) {\n        UserInfo memory userData = userInfo[user];\n        \n        if (userData.isBlacklisted || userData.investment == 0) {\n            return 0;\n        }\n        \n        // 计算基于时间和投资额的收益\n        uint256 timePassed = block.timestamp - userData.joinTime;\n        uint256 timeUnits = timePassed / timeInterval;\n        \n        if (timeUnits == 0) {\n            return 0;\n        }\n        \n        // 基础收益 = 投资额 * 时间单位 * 费率 / 10000\n        uint256 baseEarnings = (userData.investment * timeUnits * buyRate) / 10000;\n        \n        return baseEarnings + userData.earnedAmount;\n    }\n    \n    /**\n     * @notice 用户提取收益\n     * @param user 用户地址\n     */\n    function claimRewards(address user) \n        external \n        nonReentrant \n        notBlacklisted(user) \n        returns (uint256)\n    {\n        if (msg.sender != user && msg.sender != owner()) {\n            revert Unauthorized();\n        }\n        \n        uint256 earnings = calculateEarnings(user);\n        if (earnings == 0) {\n            revert InvalidAmount();\n        }\n        \n        if (address(this).balance < earnings) {\n            revert InsufficientBalance();\n        }\n        \n        // 更新用户数据\n        userInfo[user].earnedAmount = 0;\n        userInfo[user].joinTime = block.timestamp;\n        \n        // 转账\n        (bool success, ) = payable(user).call{value: earnings}(\"\");\n        if (!success) {\n            revert TransferFailed();\n        }\n        \n        emit RewardClaimed(user, earnings);\n        return earnings;\n    }\n    \n    /**\n     * @notice 移除流动性\n     * @param user 用户地址\n     */\n    function removeLiquidity(address user) \n        external \n        onlyAuthorized \n        nonReentrant \n        returns (uint256)\n    {\n        UserInfo storage userData = userInfo[user];\n        \n        if (!userData.hasLPTokens) {\n            revert InvalidAmount();\n        }\n        \n        if (tx.origin != user) {\n            revert Unauthorized();\n        }\n        \n        uint256 lpAmount = userData.lpTokenAmount;\n        if (lpAmount == 0) {\n            return 0;\n        }\n        \n        // 通过Uniswap移除流动性\n        address weth = uniswapRouter.WETH();\n        \n        // 批准路由器使用LP代币\n        IERC20(parAddress).safeApprove(address(uniswapRouter), lpAmount);\n        \n        // 移除流动性\n        (uint256 tokenAmount, uint256 ethAmount) = uniswapRouter.removeLiquidityETH(\n            parAddress,\n            lpAmount,\n            0, // 接受任何数量的代币\n            0, // 接受任何数量的ETH\n            address(this),\n            block.timestamp + 3600\n        );\n        \n        // 提取WETH为ETH\n        IWETH(weth).withdraw(ethAmount);\n        \n        // 转账给用户\n        (bool success, ) = payable(user).call{value: ethAmount}(\"\");\n        if (!success) {\n            revert TransferFailed();\n        }\n        \n        // 更新用户数据\n        userData.lpTokenAmount = 0;\n        userData.hasLPTokens = false;\n        \n        // 如果用户没有其他资产，从索引中移除\n        if (userData.investment == 0) {\n            _unregisterUser(user);\n        }\n        \n        emit LiquidityRemoved(user, lpAmount, ethAmount);\n        return ethAmount;\n    }\n    \n    // ============ 管理员函数 ============\n    \n    /**\n     * @notice 设置购买费率\n     * @param newRate 新费率 (基点)\n     */\n    function setBuyRate(uint256 newRate) external onlyOwner {\n        emit ParameterUpdated(\"buyRate\", buyRate, newRate);\n        buyRate = newRate;\n    }\n    \n    /**\n     * @notice 设置最小和最大BNB投资金额\n     * @param minAmount 最小金额\n     * @param maxAmount 最大金额\n     */\n    function setInvestmentLimits(uint256 minAmount, uint256 maxAmount) external onlyOwner {\n        if (minAmount >= maxAmount) {\n            revert InvalidAmount();\n        }\n        \n        minBNBAmount = minAmount;\n        maxBNBAmount = maxAmount;\n    }\n    \n    /**\n     * @notice 设置Uniswap路由器地址\n     * @param router 路由器地址\n     */\n    function setUniswapRouter(address router) external onlyOwner validAddress(router) {\n        uniswapRouter = IUniswapV2Router(router);\n    }\n    \n    /**\n     * @notice 设置项目地址\n     * @param projectAddr 项目地址\n     */\n    function setProjectAddress(address projectAddr) external onlyOwner validAddress(projectAddr) {\n        projectAddress = projectAddr;\n    }\n    \n    /**\n     * @notice 设置配对地址\n     * @param pairAddr 配对地址\n     */\n    function setPairAddress(address pairAddr) external onlyOwner validAddress(pairAddr) {\n        parAddress = pairAddr;\n    }\n    \n    /**\n     * @notice 设置备用owner\n     * @param newOwnerB 新的备用owner地址\n     */\n    function setOwnerB(address newOwnerB) external onlyOwner validAddress(newOwnerB) {\n        ownerB = newOwnerB;\n    }\n    \n    /**\n     * @notice 设置流动性管理员\n     * @param manager 管理员地址\n     */\n    function setLiquidityManager(address manager) external onlyOwner validAddress(manager) {\n        liquidityManager = manager;\n    }\n    \n    /**\n     * @notice 设置资金管理员\n     * @param treasury 资金管理员地址\n     */\n    function setTreasuryWallet(address treasury) external onlyOwner validAddress(treasury) {\n        treasuryWallet = treasury;\n    }\n    \n    /**\n     * @notice 添加/移除授权调用者\n     * @param caller",
  "decompiled_abi": "[\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_0ede9262\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_1d1d630c\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"arg1\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_22a85ee3\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_2d718b3a\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_3069a920\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_34cbe2a4\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_3c399169\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"arg1\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_4184b3e0\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_69a83d49\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_6dfd480b\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_7c0d24f1\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_7ff3a99e\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_85f236fc\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_8e047f0f\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_9f5c18c4\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_a20793fc\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_a224fc4f\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_a870ff6a\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_aeceb6f0\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_affd5db9\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_b8738d3a\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_c09d1e58\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_cc03d761\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_e17b2e29\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_e5d6d6ef\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_e6363cb1\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"arg1\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_f68c98e0\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"Unresolved_fcfad9ce\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"bindIntro\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"arg1\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"buyRate\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"buyerUserInfo\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"changeBuyRate\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"changeProjectAddress\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"changeUniswapV2Router\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"currentIndex\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"defaultAddress\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"earnedToken\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getBind\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getBuyerAtIndex\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getMainToken\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getTimes\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getUserAmount\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getUserIndex\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getUserList\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"indexUser\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"initialize\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"intro\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isBind\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isBuyer\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"minBNBAmount\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"owner\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"ownerB\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"parAddress\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"projectAddress\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"removeLP\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"renounceOwnership\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"takeToken\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"topAddress\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"transferOwnership\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"updateAllAverage\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"BindIntro\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\",\n        \"indexed\": false\n      },\n      {\n        \"name\": \"arg1\",\n        \"type\": \"address\",\n        \"indexed\": false\n      },\n      {\n        \"name\": \"arg2\",\n        \"type\": \"uint256\",\n        \"indexed\": false\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"OwnershipTransferred\",\n    \"inputs\": [\n      {\n        \"name\": \"arg0\",\n        \"type\": \"address\",\n        \"indexed\": false\n      },\n      {\n        \"name\": \"arg1\",\n        \"type\": \"address\",\n        \"indexed\": false\n      }\n    ],\n    \"anonymous\": false\n  }\n]",
  "decompiled_at": "2025-07-06T00:21:28.757822",
  "optimized_sol_file": "log/decompiled_f5f989c685_20250706_002128.sol",
  "raw_sol_file": "log/raw_decompiled_f5f989c685_20250706_002128.sol",
  "decompiled_abi_file": "log/decompiled_abi_f5f989c685_20250706_002128.json"
}