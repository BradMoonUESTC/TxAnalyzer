{
  "address": "0x175712cd666fbcfe8b69866a3088d7bf17a47685",
  "has_source_code": true,
  "source_code": "// File: contracts\\interfaces\\IFactory.sol\r\n\r\npragma solidity >=0.5.0;\r\n\r\ninterface IFactory {\r\n\tevent LendingPoolInitialized(address indexed nftlp, address indexed token0, address indexed token1,\r\n\t\taddress collateral, address borrowable0, address borrowable1, uint lendingPoolId);\r\n\tevent NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\r\n\tevent NewAdmin(address oldAdmin, address newAdmin);\r\n\tevent NewReservesPendingAdmin(address oldReservesPendingAdmin, address newReservesPendingAdmin);\r\n\tevent NewReservesAdmin(address oldReservesAdmin, address newReservesAdmin);\r\n\tevent NewReservesManager(address oldReservesManager, address newReservesManager);\r\n\t\r\n\tfunction admin() external view returns (address);\r\n\tfunction pendingAdmin() external view returns (address);\r\n\tfunction reservesAdmin() external view returns (address);\r\n\tfunction reservesPendingAdmin() external view returns (address);\r\n\tfunction reservesManager() external view returns (address);\r\n\r\n\tfunction getLendingPool(address nftlp) external view returns (\r\n\t\tbool initialized, \r\n\t\tuint24 lendingPoolId, \r\n\t\taddress collateral, \r\n\t\taddress borrowable0, \r\n\t\taddress borrowable1\r\n\t);\r\n\tfunction allLendingPools(uint) external view returns (address nftlp);\r\n\tfunction allLendingPoolsLength() external view returns (uint);\r\n\t\r\n\tfunction bDeployer() external view returns (address);\r\n\tfunction cDeployer() external view returns (address);\r\n\r\n\tfunction createCollateral(address nftlp) external returns (address collateral);\r\n\tfunction createBorrowable0(address nftlp) external returns (address borrowable0);\r\n\tfunction createBorrowable1(address nftlp) external returns (address borrowable1);\r\n\tfunction initializeLendingPool(address nftlp) external;\r\n\r\n\tfunction _setPendingAdmin(address newPendingAdmin) external;\r\n\tfunction _acceptAdmin() external;\r\n\tfunction _setReservesPendingAdmin(address newPendingAdmin) external;\r\n\tfunction _acceptReservesAdmin() external;\r\n\tfunction _setReservesManager(address newReservesManager) external;\r\n}\r\n\r\n// File: contracts\\interfaces\\IBDeployer.sol\r\n\r\npragma solidity >=0.5.0;\r\n\r\ninterface IBDeployer {\r\n\tfunction deployBorrowable(address nftlp, uint8 index) external returns (address borrowable);\r\n}\r\n\r\n// File: contracts\\interfaces\\IBorrowable.sol\r\n\r\npragma solidity >=0.5.0;\r\n\r\ninterface IBorrowable {\r\n\r\n\t/*** Impermax ERC20 ***/\r\n\t\r\n\tevent Transfer(address indexed from, address indexed to, uint value);\r\n\tevent Approval(address indexed owner, address indexed spender, uint value);\r\n\t\r\n\tfunction name() external view returns (string memory);\r\n\tfunction symbol() external view returns (string memory);\r\n\tfunction decimals() external view returns (uint8);\r\n\tfunction totalSupply() external view returns (uint);\r\n\tfunction balanceOf(address owner) external view returns (uint);\r\n\tfunction allowance(address owner, address spender) external view returns (uint);\r\n\tfunction approve(address spender, uint value) external returns (bool);\r\n\tfunction transfer(address to, uint value) external returns (bool);\r\n\tfunction transferFrom(address from, address to, uint value) external returns (bool);\r\n\t\r\n\tfunction DOMAIN_SEPARATOR() external view returns (bytes32);\r\n\tfunction PERMIT_TYPEHASH() external pure returns (bytes32);\r\n\tfunction nonces(address owner) external view returns (uint);\r\n\tfunction permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n\t\r\n\t/*** Pool Token ***/\r\n\t\r\n\tevent Mint(address indexed sender, address indexed minter, uint mintAmount, uint mintTokens);\r\n\tevent Redeem(address indexed sender, address indexed redeemer, uint redeemAmount, uint redeemTokens);\r\n\tevent Sync(uint totalBalance);\r\n\t\r\n\tfunction underlying() external view returns (address);\r\n\tfunction factory() external view returns (address);\r\n\tfunction totalBalance() external view returns (uint);\r\n\tfunction MINIMUM_LIQUIDITY() external pure returns (uint);\r\n\r\n\tfunction exchangeRate() external returns (uint);\r\n\tfunction mint(address minter) external returns (uint mintTokens);\r\n\tfunction redeem(address redeemer) external returns (uint redeemAmount);\r\n\tfunction skim(address to) external;\r\n\tfunction sync() external;\r\n\t\r\n\tfunction _setFactory() external;\r\n\t\r\n\t/*** Borrowable ***/\r\n\r\n\tevent BorrowApproval(address indexed owner, address indexed spender, uint value);\r\n\tevent Borrow(address indexed sender, uint256 indexed tokenId, address indexed receiver, uint borrowAmount, uint repayAmount, uint accountBorrowsPrior, uint accountBorrows, uint totalBorrows);\r\n\tevent Liquidate(address indexed sender, uint256 indexed tokenId, address indexed liquidator, uint seizeTokenId, uint repayAmount, uint accountBorrowsPrior, uint accountBorrows, uint totalBorrows);\r\n\tevent RestructureDebt(uint256 indexed tokenId, uint reduceToRatio, uint repayAmount, uint accountBorrowsPrior, uint accountBorrows, uint totalBorrows);\r\n\t\r\n\tfunction collateral() external view returns (address);\r\n\tfunction reserveFactor() external view returns (uint);\r\n\tfunction exchangeRateLast() external view returns (uint);\r\n\tfunction borrowIndex() external view returns (uint);\r\n\tfunction totalBorrows() external view returns (uint);\r\n\tfunction borrowAllowance(address owner, address spender) external view returns (uint);\r\n\tfunction borrowBalance(uint tokenId) external view returns (uint);\t\r\n\tfunction currentBorrowBalance(uint tokenId) external returns (uint);\t\r\n\t\r\n\tfunction BORROW_PERMIT_TYPEHASH() external pure returns (bytes32);\r\n\tfunction borrowApprove(address spender, uint256 value) external returns (bool);\r\n\tfunction borrowPermit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n\tfunction borrow(uint256 tokenId, address receiver, uint borrowAmount, bytes calldata data) external;\r\n\tfunction liquidate(uint256 tokenId, uint repayAmount, address liquidator, bytes calldata data) external returns (uint seizeTokenId);\r\n\tfunction restructureDebt(uint256 tokenId, uint256 reduceToRatio) external;\r\n\t\r\n\t/*** Borrowable Interest Rate Model ***/\r\n\r\n\tevent AccrueInterest(uint interestAccumulated, uint borrowIndex, uint totalBorrows);\r\n\tevent CalculateKink(uint kinkRate);\r\n\tevent CalculateBorrowRate(uint borrowRate);\r\n\t\r\n\tfunction KINK_BORROW_RATE_MAX() external pure returns (uint);\r\n\tfunction KINK_BORROW_RATE_MIN() external pure returns (uint);\r\n\tfunction KINK_MULTIPLIER() external pure returns (uint);\r\n\tfunction borrowRate() external view returns (uint);\r\n\tfunction kinkBorrowRate() external view returns (uint);\r\n\tfunction kinkUtilizationRate() external view returns (uint);\r\n\tfunction adjustSpeed() external view returns (uint);\r\n\tfunction rateUpdateTimestamp() external view returns (uint32);\r\n\tfunction accrualTimestamp() external view returns (uint32);\r\n\t\r\n\tfunction accrueInterest() external;\r\n\t\r\n\t/*** Borrowable Setter ***/\r\n\r\n\tevent NewReserveFactor(uint newReserveFactor);\r\n\tevent NewKinkUtilizationRate(uint newKinkUtilizationRate);\r\n\tevent NewAdjustSpeed(uint newAdjustSpeed);\r\n\tevent NewDebtCeiling(uint newDebtCeiling);\r\n\r\n\tfunction RESERVE_FACTOR_MAX() external pure returns (uint);\r\n\tfunction KINK_UR_MIN() external pure returns (uint);\r\n\tfunction KINK_UR_MAX() external pure returns (uint);\r\n\tfunction ADJUST_SPEED_MIN() external pure returns (uint);\r\n\tfunction ADJUST_SPEED_MAX() external pure returns (uint);\r\n\t\r\n\tfunction _initialize (\r\n\t\tstring calldata _name, \r\n\t\tstring calldata _symbol,\r\n\t\taddress _underlying, \r\n\t\taddress _collateral\r\n\t) external;\r\n\tfunction _setReserveFactor(uint newReserveFactor) external;\r\n\tfunction _setKinkUtilizationRate(uint newKinkUtilizationRate) external;\r\n\tfunction _setAdjustSpeed(uint newAdjustSpeed) external;\r\n}\r\n\r\n// File: contracts\\interfaces\\ICDeployer.sol\r\n\r\npragma solidity >=0.5.0;\r\n\r\ninterface ICDeployer {\r\n\tfunction deployCollateral(address nftlp) external returns (address collateral);\r\n}\r\n\r\n// File: contracts\\interfaces\\ICollateral.sol\r\n\r\npragma solidity >=0.5.0;\r\n\r\ninterface ICollateral {\r\n\t\r\n\t/* ImpermaxERC721 */\r\n\r\n\tevent Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\tevent Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\tevent ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\t\r\n\tfunction name() external view returns (string memory);\r\n\tfunction symbol() external view returns (string memory);\r\n\tfunction balanceOf(address owner) external view returns (uint256 balance);\r\n\tfunction ownerOf(uint256 tokenId) external view returns (address owner);\r\n\tfunction getApproved(uint256 tokenId) external view returns (address operator);\r\n\tfunction isApprovedForAll(address owner, address operator) external view returns (bool);\r\n\t\r\n\tfunction safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\r\n\tfunction safeTransferFrom(address from, address to, uint256 tokenId) external;\r\n\tfunction transferFrom(address from, address to, uint256 tokenId) external;\r\n\tfunction approve(address to, uint256 tokenId) external;\r\n\tfunction setApprovalForAll(address operator, bool approved) external;\r\n\tfunction permit(address spender, uint tokenId, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n\t\r\n\t/* Collateral */\r\n\t\r\n\tevent Mint(address indexed to, uint tokenId);\r\n\tevent Redeem(address indexed to, uint tokenId, uint percentage, uint redeemTokenId);\r\n\tevent Seize(address indexed to, uint tokenId, uint percentage, uint redeemTokenId);\r\n\tevent RestructureBadDebt(uint tokenId, uint postLiquidationCollateralRatio);\r\n\t\r\n\tfunction underlying() external view returns (address);\r\n\tfunction factory() external view returns (address);\r\n\tfunction borrowable0() external view returns (address);\r\n\tfunction borrowable1() external view returns (address);\r\n\tfunction safetyMarginSqrt() external view returns (uint);\r\n\tfunction liquidationIncentive() external view returns (uint);\r\n\tfunction liquidationFee() external view returns (uint);\r\n\tfunction liquidationPenalty() external view returns (uint);\r\n\r\n\tfunction mint(address to, uint256 tokenId) external;\r\n\tfunction redeem(address to, uint256 tokenId, uint256 percentage, bytes calldata data) external returns (uint redeemTokenId);\r\n\tfunction redeem(address to, uint256 tokenId, uint256 percentage) external returns (uint redeemTokenId);\r\n\tfunction isLiquidatable(uint tokenId) external returns (bool);\r\n\tfunction isUnderwater(uint tokenId) external returns (bool);\r\n\tfunction canBorrow(uint tokenId, address borrowable, uint accountBorrows) external returns (bool);\r\n\tfunction restructureBadDebt(uint tokenId) external;\r\n\tfunction seize(uint tokenId, uint repayAmount, address liquidator, bytes calldata data) external returns (uint seizeTokenId);\r\n\t\r\n\t/* CSetter */\r\n\t\r\n\tevent NewSafetyMargin(uint newSafetyMarginSqrt);\r\n\tevent NewLiquidationIncentive(uint newLiquidationIncentive);\r\n\tevent NewLiquidationFee(uint newLiquidationFee);\r\n\r\n\tfunction SAFETY_MARGIN_SQRT_MIN() external pure returns (uint);\r\n\tfunction SAFETY_MARGIN_SQRT_MAX() external pure returns (uint);\r\n\tfunction LIQUIDATION_INCENTIVE_MIN() external pure returns (uint);\r\n\tfunction LIQUIDATION_INCENTIVE_MAX() external pure returns (uint);\r\n\tfunction LIQUIDATION_FEE_MAX() external pure returns (uint);\r\n\t\r\n\tfunction _setFactory() external;\r\n\tfunction _initialize (\r\n\t\tstring calldata _name,\r\n\t\tstring calldata _symbol,\r\n\t\taddress _underlying, \r\n\t\taddress _borrowable0, \r\n\t\taddress _borrowable1\r\n\t) external;\r\n\tfunction _setSafetyMarginSqrt(uint newSafetyMarginSqrt) external;\r\n\tfunction _setLiquidationIncentive(uint newLiquidationIncentive) external;\r\n\tfunction _setLiquidationFee(uint newLiquidationFee) external;\r\n}\r\n\r\n// File: contracts\\interfaces\\INFTLP.sol\r\n\r\npragma solidity >=0.5.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface INFTLP {\r\n\tstruct RealXY {\r\n\t\tuint256 realX;\r\n\t\tuint256 realY;\r\n\t}\r\n\t\r\n\tstruct RealXYs {\r\n\t\tRealXY lowestPrice;\r\n\t\tRealXY currentPrice;\r\n\t\tRealXY highestPrice;\r\n\t}\r\n\t\r\n\t// ERC-721\r\n\tfunction ownerOf(uint256 _tokenId) external view returns (address);\r\n\tfunction safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\r\n\tfunction safeTransferFrom(address from, address to, uint256 tokenId) external;\r\n\tfunction transferFrom(address from, address to, uint256 tokenId) external;\r\n\t\r\n\t// Global state\r\n\tfunction token0() external view returns (address);\r\n\tfunction token1() external view returns (address);\r\n\t\r\n\t// Position state\r\n\tfunction getPositionData(uint256 _tokenId, uint256 _safetyMarginSqrt) external returns (\r\n\t\tuint256 priceSqrtX96,\r\n\t\tRealXYs memory realXYs\r\n\t);\r\n\t\r\n\t// Interactions\r\n\t\r\n\tfunction split(uint256 tokenId, uint256 percentage) external returns (uint256 newTokenId);\r\n\tfunction join(uint256 tokenId, uint256 tokenToJoin) external;\r\n}\r\n\r\n// File: contracts\\ImpermaxV3Factory.sol\r\n\r\npragma solidity =0.5.16;\r\ncontract ImpermaxV3Factory is IFactory {\r\n\taddress public admin;\r\n\taddress public pendingAdmin;\r\n\taddress public reservesAdmin;\r\n\taddress public reservesPendingAdmin;\r\n\taddress public reservesManager;\r\n\t\t\r\n\tstruct LendingPool {\r\n\t\tbool initialized;\r\n\t\tuint24 lendingPoolId;\r\n\t\taddress collateral;\r\n\t\taddress borrowable0;\r\n\t\taddress borrowable1;\r\n\t}\r\n\tmapping(address => LendingPool) public getLendingPool; // get by NFTLP\r\n\taddress[] public allLendingPools; // address of the NFTLP\r\n\tfunction allLendingPoolsLength() external view returns (uint) {\r\n\t\treturn allLendingPools.length;\r\n\t}\r\n\t\r\n\tIBDeployer public bDeployer;\r\n\tICDeployer public cDeployer;\r\n\t\r\n\tconstructor(address _admin, address _reservesAdmin, address _reservesManager, IBDeployer _bDeployer, ICDeployer _cDeployer) public {\r\n\t\t_checkReservesManager(_reservesManager);\r\n\t\tadmin = _admin;\r\n\t\treservesAdmin = _reservesAdmin;\r\n\t\treservesManager = _reservesManager;\r\n\t\tbDeployer = _bDeployer;\r\n\t\tcDeployer = _cDeployer;\r\n\t\temit NewAdmin(address(0), _admin);\r\n\t\temit NewReservesAdmin(address(0), _reservesAdmin);\r\n\t\temit NewReservesManager(address(0), _reservesManager);\r\n\t}\r\n\t\r\n\tfunction _getTokens(address nftlp) private view returns (address token0, address token1) {\r\n\t\ttoken0 = INFTLP(nftlp).token0();\r\n\t\ttoken1 = INFTLP(nftlp).token1();\r\n\t}\r\n\t\r\n\tfunction _createLendingPool(address nftlp) private {\r\n\t\tif (getLendingPool[nftlp].lendingPoolId != 0) return;\r\n\t\tallLendingPools.push(nftlp);\t\t\r\n\t\tgetLendingPool[nftlp] = LendingPool(false, uint24(allLendingPools.length), address(0), address(0), address(0));\r\n\t}\r\n\t\r\n\tfunction createCollateral(address nftlp) external returns (address collateral) {\r\n\t\t_getTokens(nftlp);\r\n\t\trequire(getLendingPool[nftlp].collateral == address(0), \"Impermax: ALREADY_EXISTS\");\t\t\r\n\t\tcollateral = cDeployer.deployCollateral(nftlp);\r\n\t\tICollateral(collateral)._setFactory();\r\n\t\t_createLendingPool(nftlp);\r\n\t\tgetLendingPool[nftlp].collateral = collateral;\r\n\t}\r\n\t\r\n\tfunction createBorrowable0(address nftlp) external returns (address borrowable0) {\r\n\t\t_getTokens(nftlp);\r\n\t\trequire(getLendingPool[nftlp].borrowable0 == address(0), \"Impermax: ALREADY_EXISTS\");\t\t\r\n\t\tborrowable0 = bDeployer.deployBorrowable(nftlp, 0);\r\n\t\tIBorrowable(borrowable0)._setFactory();\r\n\t\t_createLendingPool(nftlp);\r\n\t\tgetLendingPool[nftlp].borrowable0 = borrowable0;\r\n\t}\r\n\t\r\n\tfunction createBorrowable1(address nftlp) external returns (address borrowable1) {\r\n\t\t_getTokens(nftlp);\r\n\t\trequire(getLendingPool[nftlp].borrowable1 == address(0), \"Impermax: ALREADY_EXISTS\");\t\t\r\n\t\tborrowable1 = bDeployer.deployBorrowable(nftlp, 1);\r\n\t\tIBorrowable(borrowable1)._setFactory();\r\n\t\t_createLendingPool(nftlp);\r\n\t\tgetLendingPool[nftlp].borrowable1 = borrowable1;\r\n\t}\r\n\t\r\n\tfunction initializeLendingPool(address nftlp) external {\r\n\t\t(address token0, address token1) = _getTokens(nftlp);\r\n\t\tLendingPool memory lPool = getLendingPool[nftlp];\r\n\t\trequire(!lPool.initialized, \"Impermax: ALREADY_INITIALIZED\");\r\n\t\t\r\n\t\trequire(lPool.collateral != address(0), \"Impermax: COLLATERALIZABLE_NOT_CREATED\");\r\n\t\trequire(lPool.borrowable0 != address(0), \"Impermax: BORROWABLE0_NOT_CREATED\");\r\n\t\trequire(lPool.borrowable1 != address(0), \"Impermax: BORROWABLE1_NOT_CREATED\");\r\n\t\t\t\t\r\n\t\tICollateral(lPool.collateral)._initialize(\"Impermax Collateral\", \"imxC\", nftlp, lPool.borrowable0, lPool.borrowable1);\r\n\t\tIBorrowable(lPool.borrowable0)._initialize(\"Impermax Borrowable\", \"imxB\", token0, lPool.collateral);\r\n\t\tIBorrowable(lPool.borrowable1)._initialize(\"Impermax Borrowable\", \"imxB\", token1, lPool.collateral);\r\n\t\t\r\n\t\tgetLendingPool[nftlp].initialized = true;\r\n\t\temit LendingPoolInitialized(nftlp, token0, token1, lPool.collateral, lPool.borrowable0, lPool.borrowable1, lPool.lendingPoolId);\r\n\t}\r\n\t\r\n\tfunction _setPendingAdmin(address newPendingAdmin) external {\r\n\t\trequire(msg.sender == admin, \"Impermax: UNAUTHORIZED\");\r\n\t\taddress oldPendingAdmin = pendingAdmin;\r\n\t\tpendingAdmin = newPendingAdmin;\r\n\t\temit NewPendingAdmin(oldPendingAdmin, newPendingAdmin);\r\n\t}\r\n\r\n\tfunction _acceptAdmin() external {\r\n\t\trequire(msg.sender == pendingAdmin, \"Impermax: UNAUTHORIZED\");\r\n\t\taddress oldAdmin = admin;\r\n\t\taddress oldPendingAdmin = pendingAdmin;\r\n\t\tadmin = pendingAdmin;\r\n\t\tpendingAdmin = address(0);\r\n\t\temit NewAdmin(oldAdmin, admin);\r\n\t\temit NewPendingAdmin(oldPendingAdmin, address(0));\r\n\t}\r\n\t\r\n\tfunction _setReservesPendingAdmin(address newReservesPendingAdmin) external {\r\n\t\trequire(msg.sender == reservesAdmin, \"Impermax: UNAUTHORIZED\");\r\n\t\taddress oldReservesPendingAdmin = reservesPendingAdmin;\r\n\t\treservesPendingAdmin = newReservesPendingAdmin;\r\n\t\temit NewReservesPendingAdmin(oldReservesPendingAdmin, newReservesPendingAdmin);\r\n\t}\r\n\r\n\tfunction _acceptReservesAdmin() external {\r\n\t\trequire(msg.sender == reservesPendingAdmin, \"Impermax: UNAUTHORIZED\");\r\n\t\taddress oldReservesAdmin = reservesAdmin;\r\n\t\taddress oldReservesPendingAdmin = reservesPendingAdmin;\r\n\t\treservesAdmin = reservesPendingAdmin;\r\n\t\treservesPendingAdmin = address(0);\r\n\t\temit NewReservesAdmin(oldReservesAdmin, reservesAdmin);\r\n\t\temit NewReservesPendingAdmin(oldReservesPendingAdmin, address(0));\r\n\t}\r\n\r\n\tfunction _checkReservesManager(address newReservesManager) internal {\r\n\t\trequire(newReservesManager != address(0), \"Impermax: INVALID_RESERVES_MANAGER\");\r\n\t}\r\n\tfunction _setReservesManager(address newReservesManager) external {\r\n\t\trequire(msg.sender == reservesAdmin, \"Impermax: UNAUTHORIZED\");\r\n\t\t_checkReservesManager(newReservesManager);\r\n\t\taddress oldReservesManager = reservesManager;\r\n\t\treservesManager = newReservesManager;\r\n\t\temit NewReservesManager(oldReservesManager, newReservesManager);\r\n\t}\r\n}",
  "abi": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_reservesAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_reservesManager\",\"type\":\"address\"},{\"internalType\":\"contract IBDeployer\",\"name\":\"_bDeployer\",\"type\":\"address\"},{\"internalType\":\"contract ICDeployer\",\"name\":\"_cDeployer\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftlp\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrowable0\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrowable1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lendingPoolId\",\"type\":\"uint256\"}],\"name\":\"LendingPoolInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewPendingAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldReservesAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newReservesAdmin\",\"type\":\"address\"}],\"name\":\"NewReservesAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldReservesManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newReservesManager\",\"type\":\"address\"}],\"name\":\"NewReservesManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldReservesPendingAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newReservesPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewReservesPendingAdmin\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"_acceptAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"_acceptReservesAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"_setPendingAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newReservesManager\",\"type\":\"address\"}],\"name\":\"_setReservesManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newReservesPendingAdmin\",\"type\":\"address\"}],\"name\":\"_setReservesPendingAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allLendingPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allLendingPoolsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bDeployer\",\"outputs\":[{\"internalType\":\"contract IBDeployer\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cDeployer\",\"outputs\":[{\"internalType\":\"contract ICDeployer\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftlp\",\"type\":\"address\"}],\"name\":\"createBorrowable0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"borrowable0\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftlp\",\"type\":\"address\"}],\"name\":\"createBorrowable1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"borrowable1\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftlp\",\"type\":\"address\"}],\"name\":\"createCollateral\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getLendingPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"lendingPoolId\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrowable0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrowable1\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftlp\",\"type\":\"address\"}],\"name\":\"initializeLendingPool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reservesAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reservesManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reservesPendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]",
  "contract_name": "ImpermaxV3Factory",
  "compiler_version": "v0.5.16+commit.9c3226ce",
  "optimization_used": "1",
  "runs": "999999",
  "constructor_arguments": "000000000000000000000000ee5ca68bae98c3e36bfbfeffb104f22e4ff34cf70000000000000000000000009fd93712400902bff6040efa72b28bf80152f056000000000000000000000000d3080518e5678dc5464b7d4079d1046929985c5900000000000000000000000009f6511a1b07d8db4824a4b243e451ccad4daca40000000000000000000000003fecf5c6b193e9ccf83110b8bc0fd7bc5dfe0fd4",
  "evm_version": "Default",
  "library": "",
  "license_type": "BSL 1.1",
  "proxy": "0",
  "implementation": "",
  "bytecode": null
}