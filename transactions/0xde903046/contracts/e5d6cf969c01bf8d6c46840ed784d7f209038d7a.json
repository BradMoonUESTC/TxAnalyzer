{
  "address": "0xe5d6cf969c01bf8d6c46840ed784d7f209038d7a",
  "has_source_code": true,
  "source_code": "// File: contracts\\extensions\\interfaces\\ITokenizedUniswapV3Factory.sol\r\n\r\npragma solidity >=0.5.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface ITokenizedUniswapV3Factory {\r\n\tevent NFTLPCreated(address indexed token0, address indexed token1, address NFTLP, uint);\r\n\tevent NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\r\n\tevent NewAdmin(address oldAdmin, address newAdmin);\r\n\tevent NewAcModule(address oldAcModule, address newAcModule);\r\n\t\r\n\tfunction admin() external view returns (address);\r\n\tfunction pendingAdmin() external view returns (address);\r\n\t\r\n\tfunction uniswapV3Factory() external view returns (address);\r\n\tfunction deployer() external view returns (address);\r\n\tfunction oracle() external view returns (address);\r\n\tfunction acModule() external view returns (address);\r\n\t\r\n\tfunction getNFTLP(address tokenA, address tokenB) external view returns (address);\r\n\tfunction allNFTLP(uint) external view returns (address);\r\n\tfunction allNFTLPLength() external view returns (uint);\r\n\t\r\n\tfunction createNFTLP(address tokenA, address tokenB) external returns (address NFTLP);\r\n\t\r\n\tfunction _setPendingAdmin(address newPendingAdmin) external;\r\n\tfunction _acceptAdmin() external;\r\n\tfunction _setAcModule(address newAcModule) external;\r\n}\r\n\r\n// File: contracts\\extensions\\interfaces\\ITokenizedUniswapV3Deployer.sol\r\n\r\npragma solidity >=0.5.0;\r\n\r\ninterface ITokenizedUniswapV3Deployer {\r\n\tfunction deployNFTLP(address token0, address token1) external returns (address NFTLP);\r\n}\r\n\r\n// File: contracts\\interfaces\\INFTLP.sol\r\n\r\npragma solidity >=0.5.0;\r\n\r\ninterface INFTLP {\r\n\tstruct RealXY {\r\n\t\tuint256 realX;\r\n\t\tuint256 realY;\r\n\t}\r\n\t\r\n\tstruct RealXYs {\r\n\t\tRealXY lowestPrice;\r\n\t\tRealXY currentPrice;\r\n\t\tRealXY highestPrice;\r\n\t}\r\n\t\r\n\t// ERC-721\r\n\tfunction ownerOf(uint256 _tokenId) external view returns (address);\r\n\tfunction safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\r\n\tfunction safeTransferFrom(address from, address to, uint256 tokenId) external;\r\n\tfunction transferFrom(address from, address to, uint256 tokenId) external;\r\n\t\r\n\t// Global state\r\n\tfunction token0() external view returns (address);\r\n\tfunction token1() external view returns (address);\r\n\t\r\n\t// Position state\r\n\tfunction getPositionData(uint256 _tokenId, uint256 _safetyMarginSqrt) external returns (\r\n\t\tuint256 priceSqrtX96,\r\n\t\tRealXYs memory realXYs\r\n\t);\r\n\t\r\n\t// Interactions\r\n\t\r\n\tfunction split(uint256 tokenId, uint256 percentage) external returns (uint256 newTokenId);\r\n\tfunction join(uint256 tokenId, uint256 tokenToJoin) external;\r\n}\r\n\r\n// File: contracts\\extensions\\interfaces\\ITokenizedUniswapV3Position.sol\r\n\r\npragma solidity >=0.5.0;\r\n\r\ninterface ITokenizedUniswapV3Position {\r\n\t\r\n\t// ERC-721\r\n\t\r\n\tfunction name() external view returns (string memory);\r\n\tfunction symbol() external view returns (string memory);\r\n\tfunction balanceOf(address owner) external view returns (uint256 balance);\r\n\tfunction ownerOf(uint256 tokenId) external view returns (address owner);\r\n\tfunction getApproved(uint256 tokenId) external view returns (address operator);\r\n\tfunction isApprovedForAll(address owner, address operator) external view returns (bool);\r\n\t\r\n\tfunction DOMAIN_SEPARATOR() external view returns (bytes32);\r\n\tfunction nonces(uint256 tokenId) external view returns (uint256);\r\n\t\r\n\tfunction safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\r\n\tfunction safeTransferFrom(address from, address to, uint256 tokenId) external;\r\n\tfunction transferFrom(address from, address to, uint256 tokenId) external;\r\n\tfunction approve(address to, uint256 tokenId) external;\r\n\tfunction setApprovalForAll(address operator, bool approved) external;\r\n\tfunction permit(address spender, uint tokenId, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n\t\r\n\t// INFTLP\r\n\t\r\n\tfunction token0() external view returns (address);\r\n\tfunction token1() external view returns (address);\r\n\tfunction getPositionData(uint256 _tokenId, uint256 _safetyMarginSqrt) external returns (\r\n\t\tuint256 priceSqrtX96,\r\n\t\tINFTLP.RealXYs memory realXYs\r\n\t);\r\n\t\r\n\tfunction join(uint256 tokenId, uint256 tokenToJoin) external;\r\n\tfunction split(uint256 tokenId, uint256 percentage) external returns (uint256 newTokenId);\r\n\t\r\n\t// ITokenizedUniswapV3Position\r\n\t\r\n\tstruct Position {\r\n\t\tuint24 fee;\r\n\t\tint24 tickLower;\r\n\t\tint24 tickUpper;\r\n\t\tuint128 liquidity;\r\n\t\tuint256 feeGrowthInside0LastX128;\r\n\t\tuint256 feeGrowthInside1LastX128;\r\n\t\tuint256 unclaimedFees0;\t\r\n\t\tuint256 unclaimedFees1;\t\r\n\t}\r\n\t\r\n\tfunction factory() external view returns (address);\r\n\tfunction uniswapV3Factory() external view returns (address);\r\n\t\r\n\tfunction totalBalance(uint24 fee, int24 tickLower, int24 tickUpper) external view returns (uint256);\r\n\t\r\n\tfunction positions(uint256 tokenId) external view returns (\r\n\t\tuint24 fee,\r\n\t\tint24 tickLower,\r\n\t\tint24 tickUpper,\r\n\t\tuint128 liquidity,\r\n\t\tuint256 feeGrowthInside0LastX128,\r\n\t\tuint256 feeGrowthInside1LastX128,\r\n\t\tuint256 unclaimedFees0,\r\n\t\tuint256 unclaimedFees1\r\n\t);\r\n\tfunction positionsLength() external view returns (uint256);\r\n\t\r\n\tfunction getPool(uint24 fee) external view returns (address pool);\r\n\t\r\n\tfunction oraclePriceSqrtX96() external returns (uint256);\r\n\t\r\n\tevent MintPosition(uint256 indexed tokenId, uint24 fee, int24 tickLower, int24 tickUpper);\r\n\tevent UpdatePositionLiquidity(uint256 indexed tokenId, uint256 liquidity);\r\n\tevent UpdatePositionFeeGrowthInside(uint256 indexed tokenId, uint256 feeGrowthInside0LastX128, uint256 feeGrowthInside1LastX128);\r\n\tevent UpdatePositionUnclaimedFees(uint256 indexed tokenId, uint256 unclaimedFees0, uint256 unclaimedFees1);\r\n\r\n\tfunction _initialize (\r\n\t\taddress _uniswapV3Factory, \r\n\t\taddress _oracle, \r\n\t\taddress _token0, \r\n\t\taddress _token1\r\n\t) external;\r\n\t\r\n\tfunction mint(address to, uint24 fee, int24 tickLower, int24 tickUpper) external  returns (uint256 newTokenId);\r\n\tfunction redeem(address to, uint256 tokenId) external  returns (uint256 amount0, uint256 amount1);\r\n\r\n}\r\n\r\n// File: contracts\\extensions\\TokenizedUniswapV3Factory.sol\r\n\r\npragma solidity =0.5.16;\r\ncontract TokenizedUniswapV3Factory is ITokenizedUniswapV3Factory {\r\n\taddress public admin;\r\n\taddress public pendingAdmin;\r\n\t\r\n\taddress public uniswapV3Factory;\r\n\taddress public oracle;\r\n\taddress public acModule;\r\n\t\r\n\tITokenizedUniswapV3Deployer public deployer;\r\n\r\n\tmapping(address => mapping(address => address)) public getNFTLP;\r\n\taddress[] public allNFTLP;\r\n\r\n\tconstructor(address _admin, address _uniswapV3Factory, ITokenizedUniswapV3Deployer _deployer, address _oracle) public {\r\n\t\tadmin = _admin;\r\n\t\tuniswapV3Factory = _uniswapV3Factory;\r\n\t\tdeployer = _deployer;\r\n\t\toracle = _oracle;\r\n\t\temit NewAdmin(address(0), _admin);\r\n\t}\r\n\r\n\tfunction allNFTLPLength() external view returns (uint) {\r\n\t\treturn allNFTLP.length;\r\n\t}\r\n\r\n\tfunction createNFTLP(address tokenA, address tokenB) external returns (address NFTLP) {\r\n\t\trequire(tokenA != tokenB);\r\n\t\t(address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\r\n\t\trequire(token0 != address(0));\r\n\t\trequire(getNFTLP[token0][token1] == address(0), \"TokenizedUniswapV3Factory: PAIR_EXISTS\");\r\n\t\tNFTLP = deployer.deployNFTLP(token0, token1);\r\n\t\tITokenizedUniswapV3Position(NFTLP)._initialize(uniswapV3Factory, oracle, token0, token1);\r\n\t\tgetNFTLP[token0][token1] = NFTLP;\r\n\t\tgetNFTLP[token1][token0] = NFTLP;\r\n\t\tallNFTLP.push(NFTLP);\r\n\t\temit NFTLPCreated(token0, token1, NFTLP, allNFTLP.length);\r\n\t}\r\n\t\r\n\t/***  acModule ***/\r\n\t\r\n\tfunction _setPendingAdmin(address newPendingAdmin) external {\r\n\t\trequire(msg.sender == admin, \"TokenizedUniswapV3Factory: UNAUTHORIZED\");\r\n\t\taddress oldPendingAdmin = pendingAdmin;\r\n\t\tpendingAdmin = newPendingAdmin;\r\n\t\temit NewPendingAdmin(oldPendingAdmin, newPendingAdmin);\r\n\t}\r\n\r\n\tfunction _acceptAdmin() external {\r\n\t\trequire(msg.sender == pendingAdmin, \"TokenizedUniswapV3Factory: UNAUTHORIZED\");\r\n\t\taddress oldAdmin = admin;\r\n\t\taddress oldPendingAdmin = pendingAdmin;\r\n\t\tadmin = pendingAdmin;\r\n\t\tpendingAdmin = address(0);\r\n\t\temit NewAdmin(oldAdmin, admin);\r\n\t\temit NewPendingAdmin(oldPendingAdmin, address(0));\r\n\t}\r\n\t\r\n\tfunction _setAcModule(address newAcModule) external {\r\n\t\trequire(msg.sender == admin, \"TokenizedUniswapV3Factory: UNAUTHORIZED\");\r\n\t\taddress oldAcModule = acModule;\r\n\t\tacModule = newAcModule;\r\n\t\temit NewAcModule(oldAcModule, newAcModule);\r\n\t}\r\n}",
  "abi": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapV3Factory\",\"type\":\"address\"},{\"internalType\":\"contract ITokenizedUniswapV3Deployer\",\"name\":\"_deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"NFTLP\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"NFTLPCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAcModule\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAcModule\",\"type\":\"address\"}],\"name\":\"NewAcModule\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewPendingAdmin\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"_acceptAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAcModule\",\"type\":\"address\"}],\"name\":\"_setAcModule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"_setPendingAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"acModule\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allNFTLP\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allNFTLPLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createNFTLP\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"NFTLP\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"contract ITokenizedUniswapV3Deployer\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getNFTLP\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"uniswapV3Factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]",
  "contract_name": "TokenizedUniswapV3Factory",
  "compiler_version": "v0.5.16+commit.9c3226ce",
  "optimization_used": "1",
  "runs": "999999",
  "constructor_arguments": "000000000000000000000000ee5ca68bae98c3e36bfbfeffb104f22e4ff34cf700000000000000000000000033128a8fc17869897dce68ed026d694621f6fdfd0000000000000000000000006c0255140afc054679dbf0bef6b6808fcf0aa4100000000000000000000000006799246165c8ce1ed2e5cf8c494fa8e7a5de4472",
  "evm_version": "Default",
  "library": "",
  "license_type": "BSL 1.1",
  "proxy": "0",
  "implementation": "",
  "bytecode": null
}